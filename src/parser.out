Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     TypeName -> TypeToken
Rule 5     TypeName -> QualifiedIdent
Rule 6     TypeToken -> INT_T
Rule 7     TypeToken -> INT
Rule 8     TypeToken -> FLOAT
Rule 9     TypeToken -> BOOL
Rule 10    TypeToken -> COMPLEX
Rule 11    TypeToken -> BOOL_T
Rule 12    TypeToken -> COMPLEX_T
Rule 13    TypeToken -> STRING
Rule 14    TypeToken -> FLOAT_T
Rule 15    TypeToken -> STRING_T
Rule 16    TypeToken -> TYPE IDENTIFIER
Rule 17    TypeLit -> ArrayType
Rule 18    TypeLit -> StructType
Rule 19    TypeLit -> PointerType
Rule 20    TypeLit -> MapType
Rule 21    TypeLit -> SliceType
Rule 22    TypeOpt -> Type
Rule 23    TypeOpt -> epsilon
Rule 24    SliceType -> LSQUARE RSQUARE ElementType
Rule 25    MapType -> MAP LSQUARE KeyType RSQUARE ElementType
Rule 26    KeyType -> Type
Rule 27    ArrayType -> LSQUARE ArrayLength RSQUARE ElementType
Rule 28    ArrayLength -> Expression
Rule 29    ElementType -> Type
Rule 30    StructType -> STRUCT LCURL FieldDeclRep RCURL
Rule 31    FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON
Rule 32    FieldDeclRep -> epsilon
Rule 33    FieldDecl -> IdentifierList Type TagOpt
Rule 34    TagOpt -> Tag
Rule 35    TagOpt -> epsilon
Rule 36    Tag -> STRING_LIT
Rule 37    PointerType -> MULTIPLY BaseType
Rule 38    BaseType -> Type
Rule 39    Signature -> Parameters ResultOpt
Rule 40    ResultOpt -> Result
Rule 41    ResultOpt -> epsilon
Rule 42    Result -> Parameters
Rule 43    Result -> Type
Rule 44    Parameters -> LPAREN ParametersList RPAREN
Rule 45    Parameters -> LPAREN ParametersList COMMA RPAREN
Rule 46    Parameters -> LPAREN RPAREN
Rule 47    ParametersList -> ParameterDecl
Rule 48    ParametersList -> ParametersList COMMA ParameterDecl
Rule 49    ParameterDecl -> DOTS Type
Rule 50    ParameterDecl -> IdentifierList Type
Rule 51    ParameterDecl -> IdentifierList DOTS Type
Rule 52    ParameterDecl -> Type
Rule 53    Block -> LCURL StatementList RCURL
Rule 54    StatementList -> StatementRep
Rule 55    StatementRep -> StatementRep Statement SEMICOLON
Rule 56    StatementRep -> epsilon
Rule 57    Declaration -> ConstDecl
Rule 58    Declaration -> TypeDecl
Rule 59    Declaration -> VarDecl
Rule 60    TopLevelDecl -> Declaration
Rule 61    TopLevelDecl -> FunctionDecl
Rule 62    ConstDecl -> CONST ConstSpec
Rule 63    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 64    ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON
Rule 65    ConstSpecRep -> epsilon
Rule 66    ConstSpec -> IdentifierList TypeExprListOpt
Rule 67    TypeExprListOpt -> TypeOpt EQUALS ExpressionList
Rule 68    TypeExprListOpt -> epsilon
Rule 69    IdentifierList -> IDENTIFIER
Rule 70    IdentifierList -> IdentifierRep
Rule 71    IdentifierRep -> IdentifierRep COMMA IDENTIFIER
Rule 72    IdentifierRep -> IDENTIFIER COMMA IDENTIFIER
Rule 73    ExpressionList -> Expression ExpressionRep
Rule 74    ExpressionRep -> ExpressionRep COMMA Expression
Rule 75    ExpressionRep -> epsilon
Rule 76    TypeDecl -> TYPE TypeSpec
Rule 77    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 78    TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON
Rule 79    TypeSpecRep -> epsilon
Rule 80    TypeSpec -> AliasDecl
Rule 81    TypeSpec -> TypeDef
Rule 82    AliasDecl -> IDENTIFIER EQUALS Type
Rule 83    TypeDef -> IDENTIFIER Type
Rule 84    VarDecl -> VAR VarSpec
Rule 85    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 86    VarSpecRep -> VarSpecRep VarSpec SEMICOLON
Rule 87    VarSpecRep -> epsilon
Rule 88    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 89    VarSpec -> IdentifierList EQUALS ExpressionList
Rule 90    ExpressionListOpt -> EQUALS ExpressionList
Rule 91    ExpressionListOpt -> epsilon
Rule 92    ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression
Rule 93    FunctionDecl -> FUNC FunctionName Function
Rule 94    FunctionDecl -> FUNC FunctionName Signature
Rule 95    FunctionName -> IDENTIFIER
Rule 96    Function -> Signature FunctionBody
Rule 97    FunctionBody -> Block
Rule 98    Operand -> Literal
Rule 99    Operand -> OperandName
Rule 100   Operand -> LPAREN Expression RPAREN
Rule 101   Literal -> BasicLit
Rule 102   Literal -> CompositeLit
Rule 103   CompositeLit -> LiteralType LiteralValue
Rule 104   LiteralType -> StructType
Rule 105   LiteralType -> ArrayType
Rule 106   LiteralType -> SliceType
Rule 107   LiteralType -> MapType
Rule 108   LiteralType -> TypeName
Rule 109   LiteralValue -> LCURL RCURL
Rule 110   LiteralValue -> LCURL ElementList RCURL
Rule 111   LiteralValue -> LCURL ElementList COMMA RCURL
Rule 112   ElementList -> KeyedElement
Rule 113   ElementList -> ElementList COMMA KeyedElement
Rule 114   KeyedElement -> Element
Rule 115   KeyedElement -> Key COLON Element
Rule 116   KeyedElement -> IDENTIFIER COLON Element
Rule 117   Key -> Expression
Rule 118   Key -> LiteralValue
Rule 119   Element -> Expression
Rule 120   Element -> LiteralValue
Rule 121   BasicLit -> INT_LIT
Rule 122   BasicLit -> FLOAT_LIT
Rule 123   BasicLit -> IMAGINARY_LIT
Rule 124   BasicLit -> STRING_LIT
Rule 125   OperandName -> IDENTIFIER
Rule 126   QualifiedIdent -> IDENTIFIER DOT TypeName
Rule 127   PrimaryExpr -> Operand
Rule 128   PrimaryExpr -> PrimaryExpr Selector
Rule 129   PrimaryExpr -> Conversion
Rule 130   PrimaryExpr -> PrimaryExpr Index
Rule 131   PrimaryExpr -> PrimaryExpr Slice
Rule 132   PrimaryExpr -> PrimaryExpr TypeAssertion
Rule 133   PrimaryExpr -> PrimaryExpr Arguments
Rule 134   Selector -> DOT IDENTIFIER
Rule 135   Index -> LSQUARE Expression RSQUARE
Rule 136   Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE
Rule 137   Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE
Rule 138   TypeAssertion -> DOT LPAREN Type RPAREN
Rule 139   Arguments -> LPAREN ExpressionListTypeOpt RPAREN
Rule 140   ExpressionListTypeOpt -> ExpressionList
Rule 141   ExpressionListTypeOpt -> epsilon
Rule 142   Expression -> UnaryExpr
Rule 143   Expression -> Expression COMPARE_OR Expression
Rule 144   Expression -> Expression COMPARE_AND Expression
Rule 145   Expression -> Expression EQEQ Expression
Rule 146   Expression -> Expression NOTEQUALS Expression
Rule 147   Expression -> Expression LESSTHAN Expression
Rule 148   Expression -> Expression GREATERTHAN Expression
Rule 149   Expression -> Expression LESSTHAN_EQUAL Expression
Rule 150   Expression -> Expression GREATERTHAN_EQUAL Expression
Rule 151   Expression -> Expression OR Expression
Rule 152   Expression -> Expression XOR Expression
Rule 153   Expression -> Expression ANDXOR Expression
Rule 154   Expression -> Expression DIVIDE Expression
Rule 155   Expression -> Expression MODULO Expression
Rule 156   Expression -> Expression LSHIFT Expression
Rule 157   Expression -> Expression RSHIFT Expression
Rule 158   Expression -> Expression PLUS Expression
Rule 159   Expression -> Expression MINUS Expression
Rule 160   Expression -> Expression MULTIPLY Expression
Rule 161   Expression -> Expression AND Expression
Rule 162   ExpressionOpt -> Expression
Rule 163   ExpressionOpt -> epsilon
Rule 164   UnaryExpr -> PrimaryExpr
Rule 165   UnaryExpr -> UnaryOp UnaryExpr
Rule 166   UnaryExpr -> NOT UnaryExpr
Rule 167   UnaryOp -> PLUS
Rule 168   UnaryOp -> MINUS
Rule 169   UnaryOp -> MULTIPLY
Rule 170   UnaryOp -> AND
Rule 171   Conversion -> TYPECAST Type LPAREN Expression RPAREN
Rule 172   Statement -> Declaration
Rule 173   Statement -> LabeledStmt
Rule 174   Statement -> SimpleStmt
Rule 175   Statement -> ReturnStmt
Rule 176   Statement -> BreakStmt
Rule 177   Statement -> ContinueStmt
Rule 178   Statement -> GotoStmt
Rule 179   Statement -> Block
Rule 180   Statement -> IfStmt
Rule 181   Statement -> SwitchStmt
Rule 182   Statement -> ForStmt
Rule 183   Statement -> DeferStmt
Rule 184   Statement -> SelectStmt
Rule 185   Statement -> FallThroughStmt
Rule 186   Statement -> GoStmt
Rule 187   FallThroughStmt -> FALLTHROUGH
Rule 188   GoStmt -> GO Expression
Rule 189   SelectStmt -> SELECT LCURL CCX RCURL
Rule 190   SelectStmt -> SELECT LCURL RCURL
Rule 191   CCX -> CommClause
Rule 192   CCX -> CCX CommClause
Rule 193   CommClause -> CommCase COLON StatementList
Rule 194   CommCase -> CASE SendStmt DEFAULT
Rule 195   CommCase -> CASE RecvStmt DEFAULT
Rule 196   SendStmt -> Channel LEFT_ARROW Expression
Rule 197   Channel -> Expression
Rule 198   RecvStmt -> ExpressionList EQUALS RecvExpr
Rule 199   RecvStmt -> IdentifierList SHORT_ASSIGNMENT RecvExpr
Rule 200   RecvExpr -> Expression
Rule 201   DeferStmt -> DEFER Expression
Rule 202   SimpleStmt -> epsilon
Rule 203   SimpleStmt -> ExpressionStmt
Rule 204   SimpleStmt -> IncDecStmt
Rule 205   SimpleStmt -> Assignment
Rule 206   SimpleStmt -> ShortVarDecl
Rule 207   LabeledStmt -> Label COLON Statement
Rule 208   Label -> IDENTIFIER
Rule 209   ExpressionStmt -> Expression
Rule 210   IncDecStmt -> Expression INCREMENT
Rule 211   IncDecStmt -> Expression DECREMENT
Rule 212   Assignment -> ExpressionList assign_op ExpressionList
Rule 213   assign_op -> AssignOp
Rule 214   AssignOp -> PLUSEQUAL
Rule 215   AssignOp -> MINUSEQUAL
Rule 216   AssignOp -> TIMESEQUAL
Rule 217   AssignOp -> DIVIDE_EQUAL
Rule 218   AssignOp -> MODEQUAL
Rule 219   AssignOp -> ANDEQUAL
Rule 220   AssignOp -> OREQUAL
Rule 221   AssignOp -> XOREQUAL
Rule 222   AssignOp -> ANDXOR_EQUAL
Rule 223   AssignOp -> LSHIFT_EQUAL
Rule 224   AssignOp -> RSHIFT_EQUAL
Rule 225   AssignOp -> EQUALS
Rule 226   IfStmt -> IF Expression Block ElseOpt
Rule 227   ElseOpt -> ELSE IfStmt
Rule 228   ElseOpt -> ELSE Block
Rule 229   ElseOpt -> epsilon
Rule 230   SwitchStmt -> ExprSwitchStmt
Rule 231   ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionOpt LCURL ExprCaseClauseList RCURL
Rule 232   ExprSwitchStmt -> SWITCH ExpressionOpt LCURL ExprCaseClauseList RCURL
Rule 233   ExprCaseClauseList -> epsilon
Rule 234   ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause
Rule 235   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 236   ExprSwitchCase -> CASE ExpressionList
Rule 237   ExprSwitchCase -> DEFAULT
Rule 238   ForStmt -> FOR ConditionBlockOpt Block
Rule 239   ConditionBlockOpt -> epsilon
Rule 240   ConditionBlockOpt -> Condition
Rule 241   ConditionBlockOpt -> ForClause
Rule 242   ConditionBlockOpt -> RangeClause
Rule 243   Condition -> Expression
Rule 244   ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
Rule 245   ConditionOpt -> epsilon
Rule 246   ConditionOpt -> Condition
Rule 247   RangeClause -> ExpressionIdentListOpt RANGE Expression
Rule 248   ExpressionIdentListOpt -> epsilon
Rule 249   ExpressionIdentListOpt -> ExpressionIdentifier
Rule 250   ExpressionIdentifier -> ExpressionList EQUALS
Rule 251   ReturnStmt -> RETURN ExpressionListPureOpt
Rule 252   ExpressionListPureOpt -> ExpressionList
Rule 253   ExpressionListPureOpt -> epsilon
Rule 254   BreakStmt -> BREAK LabelOpt
Rule 255   ContinueStmt -> CONTINUE LabelOpt
Rule 256   LabelOpt -> Label
Rule 257   LabelOpt -> epsilon
Rule 258   GotoStmt -> GOTO Label
Rule 259   SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep
Rule 260   ImportDeclRep -> epsilon
Rule 261   ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON
Rule 262   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON
Rule 263   TopLevelDeclRep -> epsilon
Rule 264   PackageClause -> PACKAGE PackageName
Rule 265   PackageName -> IDENTIFIER
Rule 266   ImportDecl -> IMPORT ImportSpec
Rule 267   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 268   ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON
Rule 269   ImportSpecRep -> epsilon
Rule 270   ImportSpec -> PackageNameDotOpt ImportPath
Rule 271   PackageNameDotOpt -> DOT
Rule 272   PackageNameDotOpt -> PackageName
Rule 273   PackageNameDotOpt -> epsilon
Rule 274   ImportPath -> STRING_LIT
Rule 275   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 161 170
ANDEQUAL             : 219
ANDXOR               : 153
ANDXOR_EQUAL         : 222
BOOL                 : 9
BOOL_T               : 11
BREAK                : 254
CASE                 : 194 195 236
COLON                : 115 116 136 137 137 193 207 235
COMMA                : 45 48 71 72 74 111 113
COMPARE_AND          : 144
COMPARE_OR           : 143
COMPLEX              : 10
COMPLEX_T            : 12
CONST                : 62 63
CONTINUE             : 255
DECREMENT            : 211
DEFAULT              : 194 195 237
DEFER                : 201
DIVIDE               : 154
DIVIDE_EQUAL         : 217
DOT                  : 126 134 138 271
DOTS                 : 49 51
ELSE                 : 227 228
EQEQ                 : 145
EQUALS               : 67 82 89 90 198 225 250
FALLTHROUGH          : 187
FLOAT                : 8
FLOAT_LIT            : 122
FLOAT_T              : 14
FOR                  : 238
FUNC                 : 93 94
GO                   : 188
GOTO                 : 258
GREATERTHAN          : 148
GREATERTHAN_EQUAL    : 150
IDENTIFIER           : 16 69 71 72 72 82 83 92 95 116 125 126 134 208 265
IF                   : 226
IMAGINARY_LIT        : 123
IMPORT               : 266 267
INCREMENT            : 210
INT                  : 7
INT_LIT              : 121
INT_T                : 6
LCURL                : 30 53 109 110 111 189 190 231 232
LEFT_ARROW           : 196
LESSTHAN             : 147
LESSTHAN_EQUAL       : 149
LPAREN               : 44 45 46 63 77 85 100 138 139 171 267
LSHIFT               : 156
LSHIFT_EQUAL         : 223
LSQUARE              : 24 25 27 135 136 137
MAP                  : 25
MINUS                : 159 168
MINUSEQUAL           : 215
MODEQUAL             : 218
MODULO               : 155
MULTIPLY             : 37 160 169
NOT                  : 166
NOTEQUALS            : 146
OR                   : 151
OREQUAL              : 220
PACKAGE              : 264
PLUS                 : 158 167
PLUSEQUAL            : 214
RANGE                : 247
RCURL                : 30 53 109 110 111 189 190 231 232
RETURN               : 251
RPAREN               : 44 45 46 63 77 85 100 138 139 171 267
RSHIFT               : 157
RSHIFT_EQUAL         : 224
RSQUARE              : 24 25 27 135 136 137
SELECT               : 189 190
SEMICOLON            : 31 55 64 78 86 231 244 244 259 261 262 268
SHORT_ASSIGNMENT     : 92 199
STRING               : 13
STRING_LIT           : 36 124 274
STRING_T             : 15
STRUCT               : 30
SWITCH               : 231 232
TIMESEQUAL           : 216
TYPE                 : 16 76 77
TYPECAST             : 171
VAR                  : 84 85
XOR                  : 152
XOREQUAL             : 221
error                : 

Nonterminals, with rules where they appear

AliasDecl            : 80
Arguments            : 133
ArrayLength          : 27
ArrayType            : 17 105
AssignOp             : 213
Assignment           : 205
BaseType             : 37
BasicLit             : 101
Block                : 97 179 226 228 238
BreakStmt            : 176
CCX                  : 189 192
Channel              : 196
CommCase             : 193
CommClause           : 191 192
CompositeLit         : 102
Condition            : 240 246
ConditionBlockOpt    : 238
ConditionOpt         : 244
ConstDecl            : 57
ConstSpec            : 62 64
ConstSpecRep         : 63 64
ContinueStmt         : 177
Conversion           : 129
Declaration          : 60 172
DeferStmt            : 183
Element              : 114 115 116
ElementList          : 110 111 113
ElementType          : 24 25 27
ElseOpt              : 226
ExprCaseClause       : 234
ExprCaseClauseList   : 231 232 234
ExprSwitchCase       : 235
ExprSwitchStmt       : 230
Expression           : 28 73 74 92 100 117 119 135 137 137 143 143 144 144 145 145 146 146 147 147 148 148 149 149 150 150 151 151 152 152 153 153 154 154 155 155 156 156 157 157 158 158 159 159 160 160 161 161 162 171 188 196 197 200 201 209 210 211 226 243 247
ExpressionIdentListOpt : 247
ExpressionIdentifier : 249
ExpressionList       : 67 89 90 140 198 212 212 236 250 252
ExpressionListOpt    : 88
ExpressionListPureOpt : 251
ExpressionListTypeOpt : 139
ExpressionOpt        : 136 136 137 231 232
ExpressionRep        : 73 74
ExpressionStmt       : 203
FallThroughStmt      : 185
FieldDecl            : 31
FieldDeclRep         : 30 31
ForClause            : 241
ForStmt              : 182
Function             : 93
FunctionBody         : 96
FunctionDecl         : 61
FunctionName         : 93 94
GoStmt               : 186
GotoStmt             : 178
IdentifierList       : 33 50 51 66 88 89 199
IdentifierRep        : 70 71
IfStmt               : 180 227
ImportDecl           : 261
ImportDeclRep        : 259 261
ImportPath           : 270
ImportSpec           : 266 268
ImportSpecRep        : 267 268
IncDecStmt           : 204
Index                : 130
Key                  : 115
KeyType              : 25
KeyedElement         : 112 113
Label                : 207 256 258
LabelOpt             : 254 255
LabeledStmt          : 173
Literal              : 98
LiteralType          : 103
LiteralValue         : 103 118 120
MapType              : 20 107
Operand              : 127
OperandName          : 99
PackageClause        : 259
PackageName          : 264 272
PackageNameDotOpt    : 270
ParameterDecl        : 47 48
Parameters           : 39 42
ParametersList       : 44 45 48
PointerType          : 19
PrimaryExpr          : 128 130 131 132 133 164
QualifiedIdent       : 5
RangeClause          : 242
RecvExpr             : 198 199
RecvStmt             : 195
Result               : 40
ResultOpt            : 39
ReturnStmt           : 175
SelectStmt           : 184
Selector             : 128
SendStmt             : 194
ShortVarDecl         : 206
Signature            : 94 96
SimpleStmt           : 174 231 244 244
Slice                : 131
SliceType            : 21 106
SourceFile           : 1
Statement            : 55 207
StatementList        : 53 193 235
StatementRep         : 54 55
StructType           : 18 104
SwitchStmt           : 181
Tag                  : 34
TagOpt               : 33
TopLevelDecl         : 262
TopLevelDeclRep      : 259 262
Type                 : 22 26 29 33 38 43 49 50 51 52 82 83 88 138 171
TypeAssertion        : 132
TypeDecl             : 58
TypeDef              : 81
TypeExprListOpt      : 66
TypeLit              : 3
TypeName             : 2 108 126
TypeOpt              : 67
TypeSpec             : 76 78
TypeSpecRep          : 77 78
TypeToken            : 4
UnaryExpr            : 142 165 166
UnaryOp              : 165
VarDecl              : 59
VarSpec              : 84 86
VarSpecRep           : 85 86
assign_op            : 212
epsilon              : 23 32 35 41 56 65 68 75 79 87 91 141 163 202 229 233 239 245 248 253 257 260 263 269 273
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (259) SourceFile -> . PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep
    (264) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 2

    PackageClause                  shift and go to state 1
    SourceFile                     shift and go to state 3
    start                          shift and go to state 4

state 1

    (259) SourceFile -> PackageClause . SEMICOLON ImportDeclRep TopLevelDeclRep

    SEMICOLON       shift and go to state 5


state 2

    (264) PackageClause -> PACKAGE . PackageName
    (265) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 7

    PackageName                    shift and go to state 6

state 3

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 4

    (0) S' -> start .



state 5

    (259) SourceFile -> PackageClause SEMICOLON . ImportDeclRep TopLevelDeclRep
    (260) ImportDeclRep -> . epsilon
    (261) ImportDeclRep -> . ImportDeclRep ImportDecl SEMICOLON
    (275) epsilon -> .

    IMPORT          reduce using rule 275 (epsilon -> .)
    FUNC            reduce using rule 275 (epsilon -> .)
    CONST           reduce using rule 275 (epsilon -> .)
    TYPE            reduce using rule 275 (epsilon -> .)
    VAR             reduce using rule 275 (epsilon -> .)
    $end            reduce using rule 275 (epsilon -> .)

    ImportDeclRep                  shift and go to state 9
    epsilon                        shift and go to state 8

state 6

    (264) PackageClause -> PACKAGE PackageName .

    SEMICOLON       reduce using rule 264 (PackageClause -> PACKAGE PackageName .)


state 7

    (265) PackageName -> IDENTIFIER .

    STRING_LIT      reduce using rule 265 (PackageName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 265 (PackageName -> IDENTIFIER .)


state 8

    (260) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 260 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 260 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 260 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 260 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 260 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 260 (ImportDeclRep -> epsilon .)


state 9

    (259) SourceFile -> PackageClause SEMICOLON ImportDeclRep . TopLevelDeclRep
    (261) ImportDeclRep -> ImportDeclRep . ImportDecl SEMICOLON
    (262) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SEMICOLON
    (263) TopLevelDeclRep -> . epsilon
    (266) ImportDecl -> . IMPORT ImportSpec
    (267) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (275) epsilon -> .

    IMPORT          shift and go to state 13
    FUNC            reduce using rule 275 (epsilon -> .)
    CONST           reduce using rule 275 (epsilon -> .)
    TYPE            reduce using rule 275 (epsilon -> .)
    VAR             reduce using rule 275 (epsilon -> .)
    $end            reduce using rule 275 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 10
    epsilon                        shift and go to state 11
    ImportDecl                     shift and go to state 12

state 10

    (259) SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep .
    (262) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SEMICOLON
    (60) TopLevelDecl -> . Declaration
    (61) TopLevelDecl -> . FunctionDecl
    (57) Declaration -> . ConstDecl
    (58) Declaration -> . TypeDecl
    (59) Declaration -> . VarDecl
    (93) FunctionDecl -> . FUNC FunctionName Function
    (94) FunctionDecl -> . FUNC FunctionName Signature
    (62) ConstDecl -> . CONST ConstSpec
    (63) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (76) TypeDecl -> . TYPE TypeSpec
    (77) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (84) VarDecl -> . VAR VarSpec
    (85) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 259 (SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21

    TypeDecl                       shift and go to state 19
    VarDecl                        shift and go to state 22
    FunctionDecl                   shift and go to state 15
    TopLevelDecl                   shift and go to state 16
    Declaration                    shift and go to state 17
    ConstDecl                      shift and go to state 18

state 11

    (263) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 263 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 263 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 263 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 263 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 263 (TopLevelDeclRep -> epsilon .)


state 12

    (261) ImportDeclRep -> ImportDeclRep ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 24


state 13

    (266) ImportDecl -> IMPORT . ImportSpec
    (267) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (270) ImportSpec -> . PackageNameDotOpt ImportPath
    (271) PackageNameDotOpt -> . DOT
    (272) PackageNameDotOpt -> . PackageName
    (273) PackageNameDotOpt -> . epsilon
    (265) PackageName -> . IDENTIFIER
    (275) epsilon -> .

    LPAREN          shift and go to state 25
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING_LIT      reduce using rule 275 (epsilon -> .)

    ImportSpec                     shift and go to state 26
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 14

    (62) ConstDecl -> CONST . ConstSpec
    (63) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (66) ConstSpec -> . IdentifierList TypeExprListOpt
    (69) IdentifierList -> . IDENTIFIER
    (70) IdentifierList -> . IdentifierRep
    (71) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (72) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER

    LPAREN          shift and go to state 33
    IDENTIFIER      shift and go to state 35

    ConstSpec                      shift and go to state 31
    IdentifierRep                  shift and go to state 32
    IdentifierList                 shift and go to state 34

state 15

    (61) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 61 (TopLevelDecl -> FunctionDecl .)


state 16

    (262) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 36


state 17

    (60) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 60 (TopLevelDecl -> Declaration .)


state 18

    (57) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 57 (Declaration -> ConstDecl .)


state 19

    (58) Declaration -> TypeDecl .

    SEMICOLON       reduce using rule 58 (Declaration -> TypeDecl .)


state 20

    (93) FunctionDecl -> FUNC . FunctionName Function
    (94) FunctionDecl -> FUNC . FunctionName Signature
    (95) FunctionName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 37

    FunctionName                   shift and go to state 38

state 21

    (84) VarDecl -> VAR . VarSpec
    (85) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (88) VarSpec -> . IdentifierList Type ExpressionListOpt
    (89) VarSpec -> . IdentifierList EQUALS ExpressionList
    (69) IdentifierList -> . IDENTIFIER
    (70) IdentifierList -> . IdentifierRep
    (71) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (72) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER

    LPAREN          shift and go to state 40
    IDENTIFIER      shift and go to state 35

    IdentifierRep                  shift and go to state 32
    VarSpec                        shift and go to state 39
    IdentifierList                 shift and go to state 41

state 22

    (59) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 59 (Declaration -> VarDecl .)


state 23

    (76) TypeDecl -> TYPE . TypeSpec
    (77) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (80) TypeSpec -> . AliasDecl
    (81) TypeSpec -> . TypeDef
    (82) AliasDecl -> . IDENTIFIER EQUALS Type
    (83) TypeDef -> . IDENTIFIER Type

    LPAREN          shift and go to state 44
    IDENTIFIER      shift and go to state 46

    TypeSpec                       shift and go to state 45
    TypeDef                        shift and go to state 42
    AliasDecl                      shift and go to state 43

state 24

    (261) ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .

    IMPORT          reduce using rule 261 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    FUNC            reduce using rule 261 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    CONST           reduce using rule 261 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    TYPE            reduce using rule 261 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    VAR             reduce using rule 261 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    $end            reduce using rule 261 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)


state 25

    (267) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (268) ImportSpecRep -> . ImportSpecRep ImportSpec SEMICOLON
    (269) ImportSpecRep -> . epsilon
    (275) epsilon -> .

    RPAREN          reduce using rule 275 (epsilon -> .)
    DOT             reduce using rule 275 (epsilon -> .)
    IDENTIFIER      reduce using rule 275 (epsilon -> .)
    STRING_LIT      reduce using rule 275 (epsilon -> .)

    epsilon                        shift and go to state 47
    ImportSpecRep                  shift and go to state 48

state 26

    (266) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 266 (ImportDecl -> IMPORT ImportSpec .)


state 27

    (273) PackageNameDotOpt -> epsilon .

    STRING_LIT      reduce using rule 273 (PackageNameDotOpt -> epsilon .)


state 28

    (272) PackageNameDotOpt -> PackageName .

    STRING_LIT      reduce using rule 272 (PackageNameDotOpt -> PackageName .)


state 29

    (270) ImportSpec -> PackageNameDotOpt . ImportPath
    (274) ImportPath -> . STRING_LIT

    STRING_LIT      shift and go to state 50

    ImportPath                     shift and go to state 49

state 30

    (271) PackageNameDotOpt -> DOT .

    STRING_LIT      reduce using rule 271 (PackageNameDotOpt -> DOT .)


state 31

    (62) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 62 (ConstDecl -> CONST ConstSpec .)


state 32

    (70) IdentifierList -> IdentifierRep .
    (71) IdentifierRep -> IdentifierRep . COMMA IDENTIFIER

    EQUALS          reduce using rule 70 (IdentifierList -> IdentifierRep .)
    INT_T           reduce using rule 70 (IdentifierList -> IdentifierRep .)
    INT             reduce using rule 70 (IdentifierList -> IdentifierRep .)
    FLOAT           reduce using rule 70 (IdentifierList -> IdentifierRep .)
    BOOL            reduce using rule 70 (IdentifierList -> IdentifierRep .)
    COMPLEX         reduce using rule 70 (IdentifierList -> IdentifierRep .)
    BOOL_T          reduce using rule 70 (IdentifierList -> IdentifierRep .)
    COMPLEX_T       reduce using rule 70 (IdentifierList -> IdentifierRep .)
    STRING          reduce using rule 70 (IdentifierList -> IdentifierRep .)
    FLOAT_T         reduce using rule 70 (IdentifierList -> IdentifierRep .)
    STRING_T        reduce using rule 70 (IdentifierList -> IdentifierRep .)
    TYPE            reduce using rule 70 (IdentifierList -> IdentifierRep .)
    IDENTIFIER      reduce using rule 70 (IdentifierList -> IdentifierRep .)
    LSQUARE         reduce using rule 70 (IdentifierList -> IdentifierRep .)
    STRUCT          reduce using rule 70 (IdentifierList -> IdentifierRep .)
    MULTIPLY        reduce using rule 70 (IdentifierList -> IdentifierRep .)
    MAP             reduce using rule 70 (IdentifierList -> IdentifierRep .)
    DOTS            reduce using rule 70 (IdentifierList -> IdentifierRep .)
    SHORT_ASSIGNMENT reduce using rule 70 (IdentifierList -> IdentifierRep .)
    SEMICOLON       reduce using rule 70 (IdentifierList -> IdentifierRep .)
    COMMA           shift and go to state 51


state 33

    (63) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (64) ConstSpecRep -> . ConstSpecRep ConstSpec SEMICOLON
    (65) ConstSpecRep -> . epsilon
    (275) epsilon -> .

    RPAREN          reduce using rule 275 (epsilon -> .)
    IDENTIFIER      reduce using rule 275 (epsilon -> .)

    ConstSpecRep                   shift and go to state 52
    epsilon                        shift and go to state 53

state 34

    (66) ConstSpec -> IdentifierList . TypeExprListOpt
    (67) TypeExprListOpt -> . TypeOpt EQUALS ExpressionList
    (68) TypeExprListOpt -> . epsilon
    (22) TypeOpt -> . Type
    (23) TypeOpt -> . epsilon
    (275) epsilon -> .
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    SEMICOLON       reduce using rule 275 (epsilon -> .)
    EQUALS          reduce using rule 275 (epsilon -> .)
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    TypeOpt                        shift and go to state 71
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    TypeLit                        shift and go to state 59
    TypeExprListOpt                shift and go to state 77
    MapType                        shift and go to state 69
    epsilon                        shift and go to state 67
    PointerType                    shift and go to state 79
    Type                           shift and go to state 57
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 35

    (69) IdentifierList -> IDENTIFIER .
    (72) IdentifierRep -> IDENTIFIER . COMMA IDENTIFIER

    EQUALS          reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    INT_T           reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    INT             reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    FLOAT           reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    BOOL            reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    COMPLEX         reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    BOOL_T          reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    COMPLEX_T       reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    STRING          reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    FLOAT_T         reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    STRING_T        reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    TYPE            reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    LSQUARE         reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    STRUCT          reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    MULTIPLY        reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    MAP             reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    SEMICOLON       reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    COMMA           shift and go to state 83


state 36

    (262) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 262 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 262 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 262 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 262 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    $end            reduce using rule 262 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)


state 37

    (95) FunctionName -> IDENTIFIER .

    LPAREN          reduce using rule 95 (FunctionName -> IDENTIFIER .)


state 38

    (93) FunctionDecl -> FUNC FunctionName . Function
    (94) FunctionDecl -> FUNC FunctionName . Signature
    (96) Function -> . Signature FunctionBody
    (39) Signature -> . Parameters ResultOpt
    (44) Parameters -> . LPAREN ParametersList RPAREN
    (45) Parameters -> . LPAREN ParametersList COMMA RPAREN
    (46) Parameters -> . LPAREN RPAREN

    LPAREN          shift and go to state 87

    Function                       shift and go to state 84
    Parameters                     shift and go to state 85
    Signature                      shift and go to state 86

state 39

    (84) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 84 (VarDecl -> VAR VarSpec .)


state 40

    (85) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (86) VarSpecRep -> . VarSpecRep VarSpec SEMICOLON
    (87) VarSpecRep -> . epsilon
    (275) epsilon -> .

    RPAREN          reduce using rule 275 (epsilon -> .)
    IDENTIFIER      reduce using rule 275 (epsilon -> .)

    VarSpecRep                     shift and go to state 88
    epsilon                        shift and go to state 89

state 41

    (88) VarSpec -> IdentifierList . Type ExpressionListOpt
    (89) VarSpec -> IdentifierList . EQUALS ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    EQUALS          shift and go to state 91
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    Type                           shift and go to state 90
    TypeToken                      shift and go to state 58
    TypeLit                        shift and go to state 59
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 42

    (81) TypeSpec -> TypeDef .

    SEMICOLON       reduce using rule 81 (TypeSpec -> TypeDef .)


state 43

    (80) TypeSpec -> AliasDecl .

    SEMICOLON       reduce using rule 80 (TypeSpec -> AliasDecl .)


state 44

    (77) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (78) TypeSpecRep -> . TypeSpecRep TypeSpec SEMICOLON
    (79) TypeSpecRep -> . epsilon
    (275) epsilon -> .

    RPAREN          reduce using rule 275 (epsilon -> .)
    IDENTIFIER      reduce using rule 275 (epsilon -> .)

    TypeSpecRep                    shift and go to state 92
    epsilon                        shift and go to state 93

state 45

    (76) TypeDecl -> TYPE TypeSpec .

    SEMICOLON       reduce using rule 76 (TypeDecl -> TYPE TypeSpec .)


state 46

    (82) AliasDecl -> IDENTIFIER . EQUALS Type
    (83) TypeDef -> IDENTIFIER . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    EQUALS          shift and go to state 95
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    Type                           shift and go to state 94
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    TypeLit                        shift and go to state 59
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 47

    (269) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 269 (ImportSpecRep -> epsilon .)
    DOT             reduce using rule 269 (ImportSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 269 (ImportSpecRep -> epsilon .)
    STRING_LIT      reduce using rule 269 (ImportSpecRep -> epsilon .)


state 48

    (267) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (268) ImportSpecRep -> ImportSpecRep . ImportSpec SEMICOLON
    (270) ImportSpec -> . PackageNameDotOpt ImportPath
    (271) PackageNameDotOpt -> . DOT
    (272) PackageNameDotOpt -> . PackageName
    (273) PackageNameDotOpt -> . epsilon
    (265) PackageName -> . IDENTIFIER
    (275) epsilon -> .

    RPAREN          shift and go to state 96
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING_LIT      reduce using rule 275 (epsilon -> .)

    ImportSpec                     shift and go to state 97
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 49

    (270) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOLON       reduce using rule 270 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 50

    (274) ImportPath -> STRING_LIT .

    SEMICOLON       reduce using rule 274 (ImportPath -> STRING_LIT .)


state 51

    (71) IdentifierRep -> IdentifierRep COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 98


state 52

    (63) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (64) ConstSpecRep -> ConstSpecRep . ConstSpec SEMICOLON
    (66) ConstSpec -> . IdentifierList TypeExprListOpt
    (69) IdentifierList -> . IDENTIFIER
    (70) IdentifierList -> . IdentifierRep
    (71) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (72) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER

    RPAREN          shift and go to state 100
    IDENTIFIER      shift and go to state 35

    ConstSpec                      shift and go to state 99
    IdentifierRep                  shift and go to state 32
    IdentifierList                 shift and go to state 34

state 53

    (65) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 65 (ConstSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 65 (ConstSpecRep -> epsilon .)


state 54

    (17) TypeLit -> ArrayType .

    SEMICOLON       reduce using rule 17 (TypeLit -> ArrayType .)
    EQUALS          reduce using rule 17 (TypeLit -> ArrayType .)
    LCURL           reduce using rule 17 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 17 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 17 (TypeLit -> ArrayType .)
    LPAREN          reduce using rule 17 (TypeLit -> ArrayType .)
    RSQUARE         reduce using rule 17 (TypeLit -> ArrayType .)
    STRING_LIT      reduce using rule 17 (TypeLit -> ArrayType .)


state 55

    (10) TypeToken -> COMPLEX .

    LCURL           reduce using rule 10 (TypeToken -> COMPLEX .)
    EQUALS          reduce using rule 10 (TypeToken -> COMPLEX .)
    STRING_LIT      reduce using rule 10 (TypeToken -> COMPLEX .)
    SEMICOLON       reduce using rule 10 (TypeToken -> COMPLEX .)
    RPAREN          reduce using rule 10 (TypeToken -> COMPLEX .)
    COMMA           reduce using rule 10 (TypeToken -> COMPLEX .)
    LPAREN          reduce using rule 10 (TypeToken -> COMPLEX .)
    RSQUARE         reduce using rule 10 (TypeToken -> COMPLEX .)


state 56

    (37) PointerType -> MULTIPLY . BaseType
    (38) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    BaseType                       shift and go to state 102
    Type                           shift and go to state 101
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    TypeLit                        shift and go to state 59
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 57

    (22) TypeOpt -> Type .

    EQUALS          reduce using rule 22 (TypeOpt -> Type .)


state 58

    (4) TypeName -> TypeToken .

    LCURL           reduce using rule 4 (TypeName -> TypeToken .)
    EQUALS          reduce using rule 4 (TypeName -> TypeToken .)
    SEMICOLON       reduce using rule 4 (TypeName -> TypeToken .)
    RPAREN          reduce using rule 4 (TypeName -> TypeToken .)
    COMMA           reduce using rule 4 (TypeName -> TypeToken .)
    LPAREN          reduce using rule 4 (TypeName -> TypeToken .)
    RSQUARE         reduce using rule 4 (TypeName -> TypeToken .)
    STRING_LIT      reduce using rule 4 (TypeName -> TypeToken .)


state 59

    (3) Type -> TypeLit .

    SEMICOLON       reduce using rule 3 (Type -> TypeLit .)
    LPAREN          reduce using rule 3 (Type -> TypeLit .)
    STRING_LIT      reduce using rule 3 (Type -> TypeLit .)
    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    EQUALS          reduce using rule 3 (Type -> TypeLit .)
    LCURL           reduce using rule 3 (Type -> TypeLit .)
    RSQUARE         reduce using rule 3 (Type -> TypeLit .)


state 60

    (14) TypeToken -> FLOAT_T .

    LCURL           reduce using rule 14 (TypeToken -> FLOAT_T .)
    EQUALS          reduce using rule 14 (TypeToken -> FLOAT_T .)
    STRING_LIT      reduce using rule 14 (TypeToken -> FLOAT_T .)
    SEMICOLON       reduce using rule 14 (TypeToken -> FLOAT_T .)
    RPAREN          reduce using rule 14 (TypeToken -> FLOAT_T .)
    COMMA           reduce using rule 14 (TypeToken -> FLOAT_T .)
    LPAREN          reduce using rule 14 (TypeToken -> FLOAT_T .)
    RSQUARE         reduce using rule 14 (TypeToken -> FLOAT_T .)


state 61

    (2) Type -> TypeName .

    SEMICOLON       reduce using rule 2 (Type -> TypeName .)
    LPAREN          reduce using rule 2 (Type -> TypeName .)
    STRING_LIT      reduce using rule 2 (Type -> TypeName .)
    RPAREN          reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    EQUALS          reduce using rule 2 (Type -> TypeName .)
    LCURL           reduce using rule 2 (Type -> TypeName .)
    RSQUARE         reduce using rule 2 (Type -> TypeName .)


state 62

    (12) TypeToken -> COMPLEX_T .

    LCURL           reduce using rule 12 (TypeToken -> COMPLEX_T .)
    EQUALS          reduce using rule 12 (TypeToken -> COMPLEX_T .)
    STRING_LIT      reduce using rule 12 (TypeToken -> COMPLEX_T .)
    SEMICOLON       reduce using rule 12 (TypeToken -> COMPLEX_T .)
    RPAREN          reduce using rule 12 (TypeToken -> COMPLEX_T .)
    COMMA           reduce using rule 12 (TypeToken -> COMPLEX_T .)
    LPAREN          reduce using rule 12 (TypeToken -> COMPLEX_T .)
    RSQUARE         reduce using rule 12 (TypeToken -> COMPLEX_T .)


state 63

    (126) QualifiedIdent -> IDENTIFIER . DOT TypeName

    DOT             shift and go to state 103


state 64

    (11) TypeToken -> BOOL_T .

    LCURL           reduce using rule 11 (TypeToken -> BOOL_T .)
    EQUALS          reduce using rule 11 (TypeToken -> BOOL_T .)
    STRING_LIT      reduce using rule 11 (TypeToken -> BOOL_T .)
    SEMICOLON       reduce using rule 11 (TypeToken -> BOOL_T .)
    RPAREN          reduce using rule 11 (TypeToken -> BOOL_T .)
    COMMA           reduce using rule 11 (TypeToken -> BOOL_T .)
    LPAREN          reduce using rule 11 (TypeToken -> BOOL_T .)
    RSQUARE         reduce using rule 11 (TypeToken -> BOOL_T .)


state 65

    (18) TypeLit -> StructType .

    SEMICOLON       reduce using rule 18 (TypeLit -> StructType .)
    EQUALS          reduce using rule 18 (TypeLit -> StructType .)
    LCURL           reduce using rule 18 (TypeLit -> StructType .)
    RPAREN          reduce using rule 18 (TypeLit -> StructType .)
    COMMA           reduce using rule 18 (TypeLit -> StructType .)
    LPAREN          reduce using rule 18 (TypeLit -> StructType .)
    RSQUARE         reduce using rule 18 (TypeLit -> StructType .)
    STRING_LIT      reduce using rule 18 (TypeLit -> StructType .)


state 66

    (13) TypeToken -> STRING .

    LCURL           reduce using rule 13 (TypeToken -> STRING .)
    EQUALS          reduce using rule 13 (TypeToken -> STRING .)
    STRING_LIT      reduce using rule 13 (TypeToken -> STRING .)
    SEMICOLON       reduce using rule 13 (TypeToken -> STRING .)
    RPAREN          reduce using rule 13 (TypeToken -> STRING .)
    COMMA           reduce using rule 13 (TypeToken -> STRING .)
    LPAREN          reduce using rule 13 (TypeToken -> STRING .)
    RSQUARE         reduce using rule 13 (TypeToken -> STRING .)


state 67

    (68) TypeExprListOpt -> epsilon .
    (23) TypeOpt -> epsilon .

    SEMICOLON       reduce using rule 68 (TypeExprListOpt -> epsilon .)
    EQUALS          reduce using rule 23 (TypeOpt -> epsilon .)


state 68

    (6) TypeToken -> INT_T .

    LCURL           reduce using rule 6 (TypeToken -> INT_T .)
    EQUALS          reduce using rule 6 (TypeToken -> INT_T .)
    STRING_LIT      reduce using rule 6 (TypeToken -> INT_T .)
    SEMICOLON       reduce using rule 6 (TypeToken -> INT_T .)
    RPAREN          reduce using rule 6 (TypeToken -> INT_T .)
    COMMA           reduce using rule 6 (TypeToken -> INT_T .)
    LPAREN          reduce using rule 6 (TypeToken -> INT_T .)
    RSQUARE         reduce using rule 6 (TypeToken -> INT_T .)


state 69

    (20) TypeLit -> MapType .

    SEMICOLON       reduce using rule 20 (TypeLit -> MapType .)
    EQUALS          reduce using rule 20 (TypeLit -> MapType .)
    LCURL           reduce using rule 20 (TypeLit -> MapType .)
    RPAREN          reduce using rule 20 (TypeLit -> MapType .)
    COMMA           reduce using rule 20 (TypeLit -> MapType .)
    LPAREN          reduce using rule 20 (TypeLit -> MapType .)
    RSQUARE         reduce using rule 20 (TypeLit -> MapType .)
    STRING_LIT      reduce using rule 20 (TypeLit -> MapType .)


state 70

    (27) ArrayType -> LSQUARE . ArrayLength RSQUARE ElementType
    (24) SliceType -> LSQUARE . RSQUARE ElementType
    (28) ArrayLength -> . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    RSQUARE         shift and go to state 110
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    ArrayLength                    shift and go to state 122
    MapType                        shift and go to state 123
    Expression                     shift and go to state 126
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    CompositeLit                   shift and go to state 116
    QualifiedIdent                 shift and go to state 82

state 71

    (67) TypeExprListOpt -> TypeOpt . EQUALS ExpressionList

    EQUALS          shift and go to state 134


state 72

    (15) TypeToken -> STRING_T .

    LCURL           reduce using rule 15 (TypeToken -> STRING_T .)
    EQUALS          reduce using rule 15 (TypeToken -> STRING_T .)
    STRING_LIT      reduce using rule 15 (TypeToken -> STRING_T .)
    SEMICOLON       reduce using rule 15 (TypeToken -> STRING_T .)
    RPAREN          reduce using rule 15 (TypeToken -> STRING_T .)
    COMMA           reduce using rule 15 (TypeToken -> STRING_T .)
    LPAREN          reduce using rule 15 (TypeToken -> STRING_T .)
    RSQUARE         reduce using rule 15 (TypeToken -> STRING_T .)


state 73

    (25) MapType -> MAP . LSQUARE KeyType RSQUARE ElementType

    LSQUARE         shift and go to state 135


state 74

    (30) StructType -> STRUCT . LCURL FieldDeclRep RCURL

    LCURL           shift and go to state 136


state 75

    (7) TypeToken -> INT .

    LCURL           reduce using rule 7 (TypeToken -> INT .)
    EQUALS          reduce using rule 7 (TypeToken -> INT .)
    STRING_LIT      reduce using rule 7 (TypeToken -> INT .)
    SEMICOLON       reduce using rule 7 (TypeToken -> INT .)
    RPAREN          reduce using rule 7 (TypeToken -> INT .)
    COMMA           reduce using rule 7 (TypeToken -> INT .)
    LPAREN          reduce using rule 7 (TypeToken -> INT .)
    RSQUARE         reduce using rule 7 (TypeToken -> INT .)


state 76

    (8) TypeToken -> FLOAT .

    LCURL           reduce using rule 8 (TypeToken -> FLOAT .)
    EQUALS          reduce using rule 8 (TypeToken -> FLOAT .)
    STRING_LIT      reduce using rule 8 (TypeToken -> FLOAT .)
    SEMICOLON       reduce using rule 8 (TypeToken -> FLOAT .)
    RPAREN          reduce using rule 8 (TypeToken -> FLOAT .)
    COMMA           reduce using rule 8 (TypeToken -> FLOAT .)
    LPAREN          reduce using rule 8 (TypeToken -> FLOAT .)
    RSQUARE         reduce using rule 8 (TypeToken -> FLOAT .)


state 77

    (66) ConstSpec -> IdentifierList TypeExprListOpt .

    SEMICOLON       reduce using rule 66 (ConstSpec -> IdentifierList TypeExprListOpt .)


state 78

    (9) TypeToken -> BOOL .

    LCURL           reduce using rule 9 (TypeToken -> BOOL .)
    EQUALS          reduce using rule 9 (TypeToken -> BOOL .)
    STRING_LIT      reduce using rule 9 (TypeToken -> BOOL .)
    SEMICOLON       reduce using rule 9 (TypeToken -> BOOL .)
    RPAREN          reduce using rule 9 (TypeToken -> BOOL .)
    COMMA           reduce using rule 9 (TypeToken -> BOOL .)
    LPAREN          reduce using rule 9 (TypeToken -> BOOL .)
    RSQUARE         reduce using rule 9 (TypeToken -> BOOL .)


state 79

    (19) TypeLit -> PointerType .

    SEMICOLON       reduce using rule 19 (TypeLit -> PointerType .)
    EQUALS          reduce using rule 19 (TypeLit -> PointerType .)
    LCURL           reduce using rule 19 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 19 (TypeLit -> PointerType .)
    COMMA           reduce using rule 19 (TypeLit -> PointerType .)
    LPAREN          reduce using rule 19 (TypeLit -> PointerType .)
    RSQUARE         reduce using rule 19 (TypeLit -> PointerType .)
    STRING_LIT      reduce using rule 19 (TypeLit -> PointerType .)


state 80

    (21) TypeLit -> SliceType .

    SEMICOLON       reduce using rule 21 (TypeLit -> SliceType .)
    EQUALS          reduce using rule 21 (TypeLit -> SliceType .)
    LCURL           reduce using rule 21 (TypeLit -> SliceType .)
    RPAREN          reduce using rule 21 (TypeLit -> SliceType .)
    COMMA           reduce using rule 21 (TypeLit -> SliceType .)
    LPAREN          reduce using rule 21 (TypeLit -> SliceType .)
    RSQUARE         reduce using rule 21 (TypeLit -> SliceType .)
    STRING_LIT      reduce using rule 21 (TypeLit -> SliceType .)


state 81

    (16) TypeToken -> TYPE . IDENTIFIER

    IDENTIFIER      shift and go to state 137


state 82

    (5) TypeName -> QualifiedIdent .

    LCURL           reduce using rule 5 (TypeName -> QualifiedIdent .)
    EQUALS          reduce using rule 5 (TypeName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 5 (TypeName -> QualifiedIdent .)
    RPAREN          reduce using rule 5 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 5 (TypeName -> QualifiedIdent .)
    LPAREN          reduce using rule 5 (TypeName -> QualifiedIdent .)
    RSQUARE         reduce using rule 5 (TypeName -> QualifiedIdent .)
    STRING_LIT      reduce using rule 5 (TypeName -> QualifiedIdent .)


state 83

    (72) IdentifierRep -> IDENTIFIER COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 138


state 84

    (93) FunctionDecl -> FUNC FunctionName Function .

    SEMICOLON       reduce using rule 93 (FunctionDecl -> FUNC FunctionName Function .)


state 85

    (39) Signature -> Parameters . ResultOpt
    (40) ResultOpt -> . Result
    (41) ResultOpt -> . epsilon
    (42) Result -> . Parameters
    (43) Result -> . Type
    (275) epsilon -> .
    (44) Parameters -> . LPAREN ParametersList RPAREN
    (45) Parameters -> . LPAREN ParametersList COMMA RPAREN
    (46) Parameters -> . LPAREN RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    LCURL           reduce using rule 275 (epsilon -> .)
    SEMICOLON       reduce using rule 275 (epsilon -> .)
    LPAREN          shift and go to state 87
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    Parameters                     shift and go to state 139
    epsilon                        shift and go to state 142
    ResultOpt                      shift and go to state 141
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    TypeLit                        shift and go to state 59
    Result                         shift and go to state 143
    PointerType                    shift and go to state 79
    SliceType                      shift and go to state 80
    Type                           shift and go to state 140
    QualifiedIdent                 shift and go to state 82
    MapType                        shift and go to state 69

state 86

    (94) FunctionDecl -> FUNC FunctionName Signature .
    (96) Function -> Signature . FunctionBody
    (97) FunctionBody -> . Block
    (53) Block -> . LCURL StatementList RCURL

    SEMICOLON       reduce using rule 94 (FunctionDecl -> FUNC FunctionName Signature .)
    LCURL           shift and go to state 146

    FunctionBody                   shift and go to state 144
    Block                          shift and go to state 145

state 87

    (44) Parameters -> LPAREN . ParametersList RPAREN
    (45) Parameters -> LPAREN . ParametersList COMMA RPAREN
    (46) Parameters -> LPAREN . RPAREN
    (47) ParametersList -> . ParameterDecl
    (48) ParametersList -> . ParametersList COMMA ParameterDecl
    (49) ParameterDecl -> . DOTS Type
    (50) ParameterDecl -> . IdentifierList Type
    (51) ParameterDecl -> . IdentifierList DOTS Type
    (52) ParameterDecl -> . Type
    (69) IdentifierList -> . IDENTIFIER
    (70) IdentifierList -> . IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (71) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (72) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    RPAREN          shift and go to state 149
    DOTS            shift and go to state 153
    IDENTIFIER      shift and go to state 151
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    ParameterDecl                  shift and go to state 152
    ArrayType                      shift and go to state 54
    IdentifierRep                  shift and go to state 32
    TypeName                       shift and go to state 61
    TypeLit                        shift and go to state 59
    MapType                        shift and go to state 69
    IdentifierList                 shift and go to state 147
    PointerType                    shift and go to state 79
    ParametersList                 shift and go to state 150
    Type                           shift and go to state 148
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 88

    (85) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (86) VarSpecRep -> VarSpecRep . VarSpec SEMICOLON
    (88) VarSpec -> . IdentifierList Type ExpressionListOpt
    (89) VarSpec -> . IdentifierList EQUALS ExpressionList
    (69) IdentifierList -> . IDENTIFIER
    (70) IdentifierList -> . IdentifierRep
    (71) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (72) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER

    RPAREN          shift and go to state 154
    IDENTIFIER      shift and go to state 35

    IdentifierRep                  shift and go to state 32
    VarSpec                        shift and go to state 155
    IdentifierList                 shift and go to state 41

state 89

    (87) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 87 (VarSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 87 (VarSpecRep -> epsilon .)


state 90

    (88) VarSpec -> IdentifierList Type . ExpressionListOpt
    (90) ExpressionListOpt -> . EQUALS ExpressionList
    (91) ExpressionListOpt -> . epsilon
    (275) epsilon -> .

    EQUALS          shift and go to state 156
    SEMICOLON       reduce using rule 275 (epsilon -> .)

    ExpressionListOpt              shift and go to state 158
    epsilon                        shift and go to state 157

state 91

    (89) VarSpec -> IdentifierList EQUALS . ExpressionList
    (73) ExpressionList -> . Expression ExpressionRep
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    Conversion                     shift and go to state 104
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    ExpressionList                 shift and go to state 159
    MapType                        shift and go to state 123
    Expression                     shift and go to state 160
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    CompositeLit                   shift and go to state 116
    QualifiedIdent                 shift and go to state 82

state 92

    (77) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (78) TypeSpecRep -> TypeSpecRep . TypeSpec SEMICOLON
    (80) TypeSpec -> . AliasDecl
    (81) TypeSpec -> . TypeDef
    (82) AliasDecl -> . IDENTIFIER EQUALS Type
    (83) TypeDef -> . IDENTIFIER Type

    RPAREN          shift and go to state 161
    IDENTIFIER      shift and go to state 46

    TypeDef                        shift and go to state 42
    AliasDecl                      shift and go to state 43
    TypeSpec                       shift and go to state 162

state 93

    (79) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 79 (TypeSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 79 (TypeSpecRep -> epsilon .)


state 94

    (83) TypeDef -> IDENTIFIER Type .

    SEMICOLON       reduce using rule 83 (TypeDef -> IDENTIFIER Type .)


state 95

    (82) AliasDecl -> IDENTIFIER EQUALS . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    Type                           shift and go to state 163
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    TypeLit                        shift and go to state 59
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 96

    (267) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOLON       reduce using rule 267 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 97

    (268) ImportSpecRep -> ImportSpecRep ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 164


state 98

    (71) IdentifierRep -> IdentifierRep COMMA IDENTIFIER .

    COMMA           reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    DOTS            reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    INT_T           reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    INT             reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    FLOAT           reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    BOOL            reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    COMPLEX         reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    BOOL_T          reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    COMPLEX_T       reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRING          reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    FLOAT_T         reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRING_T        reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TYPE            reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    IDENTIFIER      reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LSQUARE         reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRUCT          reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    MULTIPLY        reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    MAP             reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    EQUALS          reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    SEMICOLON       reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    SHORT_ASSIGNMENT reduce using rule 71 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)


state 99

    (64) ConstSpecRep -> ConstSpecRep ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 165


state 100

    (63) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOLON       reduce using rule 63 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 101

    (38) BaseType -> Type .

    EQUALS          reduce using rule 38 (BaseType -> Type .)
    SEMICOLON       reduce using rule 38 (BaseType -> Type .)
    LCURL           reduce using rule 38 (BaseType -> Type .)
    RPAREN          reduce using rule 38 (BaseType -> Type .)
    COMMA           reduce using rule 38 (BaseType -> Type .)
    LPAREN          reduce using rule 38 (BaseType -> Type .)
    RSQUARE         reduce using rule 38 (BaseType -> Type .)
    STRING_LIT      reduce using rule 38 (BaseType -> Type .)


state 102

    (37) PointerType -> MULTIPLY BaseType .

    EQUALS          reduce using rule 37 (PointerType -> MULTIPLY BaseType .)
    SEMICOLON       reduce using rule 37 (PointerType -> MULTIPLY BaseType .)
    LCURL           reduce using rule 37 (PointerType -> MULTIPLY BaseType .)
    RPAREN          reduce using rule 37 (PointerType -> MULTIPLY BaseType .)
    COMMA           reduce using rule 37 (PointerType -> MULTIPLY BaseType .)
    LPAREN          reduce using rule 37 (PointerType -> MULTIPLY BaseType .)
    RSQUARE         reduce using rule 37 (PointerType -> MULTIPLY BaseType .)
    STRING_LIT      reduce using rule 37 (PointerType -> MULTIPLY BaseType .)


state 103

    (126) QualifiedIdent -> IDENTIFIER DOT . TypeName
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63

    TypeName                       shift and go to state 166
    QualifiedIdent                 shift and go to state 82
    TypeToken                      shift and go to state 58

state 104

    (129) PrimaryExpr -> Conversion .

    DOT             reduce using rule 129 (PrimaryExpr -> Conversion .)
    LSQUARE         reduce using rule 129 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 129 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 129 (PrimaryExpr -> Conversion .)
    COMPARE_OR      reduce using rule 129 (PrimaryExpr -> Conversion .)
    COMPARE_AND     reduce using rule 129 (PrimaryExpr -> Conversion .)
    EQEQ            reduce using rule 129 (PrimaryExpr -> Conversion .)
    NOTEQUALS       reduce using rule 129 (PrimaryExpr -> Conversion .)
    LESSTHAN        reduce using rule 129 (PrimaryExpr -> Conversion .)
    GREATERTHAN     reduce using rule 129 (PrimaryExpr -> Conversion .)
    LESSTHAN_EQUAL  reduce using rule 129 (PrimaryExpr -> Conversion .)
    GREATERTHAN_EQUAL reduce using rule 129 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 129 (PrimaryExpr -> Conversion .)
    XOR             reduce using rule 129 (PrimaryExpr -> Conversion .)
    ANDXOR          reduce using rule 129 (PrimaryExpr -> Conversion .)
    DIVIDE          reduce using rule 129 (PrimaryExpr -> Conversion .)
    MODULO          reduce using rule 129 (PrimaryExpr -> Conversion .)
    LSHIFT          reduce using rule 129 (PrimaryExpr -> Conversion .)
    RSHIFT          reduce using rule 129 (PrimaryExpr -> Conversion .)
    PLUS            reduce using rule 129 (PrimaryExpr -> Conversion .)
    MINUS           reduce using rule 129 (PrimaryExpr -> Conversion .)
    MULTIPLY        reduce using rule 129 (PrimaryExpr -> Conversion .)
    AND             reduce using rule 129 (PrimaryExpr -> Conversion .)
    INCREMENT       reduce using rule 129 (PrimaryExpr -> Conversion .)
    DECREMENT       reduce using rule 129 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 129 (PrimaryExpr -> Conversion .)
    SEMICOLON       reduce using rule 129 (PrimaryExpr -> Conversion .)
    PLUSEQUAL       reduce using rule 129 (PrimaryExpr -> Conversion .)
    MINUSEQUAL      reduce using rule 129 (PrimaryExpr -> Conversion .)
    TIMESEQUAL      reduce using rule 129 (PrimaryExpr -> Conversion .)
    DIVIDE_EQUAL    reduce using rule 129 (PrimaryExpr -> Conversion .)
    MODEQUAL        reduce using rule 129 (PrimaryExpr -> Conversion .)
    ANDEQUAL        reduce using rule 129 (PrimaryExpr -> Conversion .)
    OREQUAL         reduce using rule 129 (PrimaryExpr -> Conversion .)
    XOREQUAL        reduce using rule 129 (PrimaryExpr -> Conversion .)
    ANDXOR_EQUAL    reduce using rule 129 (PrimaryExpr -> Conversion .)
    LSHIFT_EQUAL    reduce using rule 129 (PrimaryExpr -> Conversion .)
    RSHIFT_EQUAL    reduce using rule 129 (PrimaryExpr -> Conversion .)
    EQUALS          reduce using rule 129 (PrimaryExpr -> Conversion .)
    RSQUARE         reduce using rule 129 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 129 (PrimaryExpr -> Conversion .)
    RCURL           reduce using rule 129 (PrimaryExpr -> Conversion .)
    LCURL           reduce using rule 129 (PrimaryExpr -> Conversion .)
    LEFT_ARROW      reduce using rule 129 (PrimaryExpr -> Conversion .)
    DEFAULT         reduce using rule 129 (PrimaryExpr -> Conversion .)


state 105

    (165) UnaryExpr -> UnaryOp . UnaryExpr
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 167
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 106

    (105) LiteralType -> ArrayType .

    LCURL           reduce using rule 105 (LiteralType -> ArrayType .)


state 107

    (122) BasicLit -> FLOAT_LIT .

    DOT             reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    LSQUARE         reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    LPAREN          reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    COMPARE_OR      reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    COMPARE_AND     reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    EQEQ            reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    NOTEQUALS       reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    LESSTHAN        reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    GREATERTHAN     reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    LESSTHAN_EQUAL  reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    GREATERTHAN_EQUAL reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    OR              reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    XOR             reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    ANDXOR          reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    DIVIDE          reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    MODULO          reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    LSHIFT          reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    RSHIFT          reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    PLUS            reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    MINUS           reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    MULTIPLY        reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    AND             reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    RSQUARE         reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    COMMA           reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    SEMICOLON       reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    RPAREN          reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    COLON           reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    RCURL           reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    INCREMENT       reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    DECREMENT       reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    PLUSEQUAL       reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    MINUSEQUAL      reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    TIMESEQUAL      reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    DIVIDE_EQUAL    reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    MODEQUAL        reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    ANDEQUAL        reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    OREQUAL         reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    XOREQUAL        reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    ANDXOR_EQUAL    reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    LSHIFT_EQUAL    reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    RSHIFT_EQUAL    reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    EQUALS          reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    LCURL           reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    LEFT_ARROW      reduce using rule 122 (BasicLit -> FLOAT_LIT .)
    DEFAULT         reduce using rule 122 (BasicLit -> FLOAT_LIT .)


state 108

    (169) UnaryOp -> MULTIPLY .

    NOT             reduce using rule 169 (UnaryOp -> MULTIPLY .)
    PLUS            reduce using rule 169 (UnaryOp -> MULTIPLY .)
    MINUS           reduce using rule 169 (UnaryOp -> MULTIPLY .)
    MULTIPLY        reduce using rule 169 (UnaryOp -> MULTIPLY .)
    AND             reduce using rule 169 (UnaryOp -> MULTIPLY .)
    LPAREN          reduce using rule 169 (UnaryOp -> MULTIPLY .)
    TYPECAST        reduce using rule 169 (UnaryOp -> MULTIPLY .)
    IDENTIFIER      reduce using rule 169 (UnaryOp -> MULTIPLY .)
    INT_LIT         reduce using rule 169 (UnaryOp -> MULTIPLY .)
    FLOAT_LIT       reduce using rule 169 (UnaryOp -> MULTIPLY .)
    IMAGINARY_LIT   reduce using rule 169 (UnaryOp -> MULTIPLY .)
    STRING_LIT      reduce using rule 169 (UnaryOp -> MULTIPLY .)
    STRUCT          reduce using rule 169 (UnaryOp -> MULTIPLY .)
    LSQUARE         reduce using rule 169 (UnaryOp -> MULTIPLY .)
    MAP             reduce using rule 169 (UnaryOp -> MULTIPLY .)
    INT_T           reduce using rule 169 (UnaryOp -> MULTIPLY .)
    INT             reduce using rule 169 (UnaryOp -> MULTIPLY .)
    FLOAT           reduce using rule 169 (UnaryOp -> MULTIPLY .)
    BOOL            reduce using rule 169 (UnaryOp -> MULTIPLY .)
    COMPLEX         reduce using rule 169 (UnaryOp -> MULTIPLY .)
    BOOL_T          reduce using rule 169 (UnaryOp -> MULTIPLY .)
    COMPLEX_T       reduce using rule 169 (UnaryOp -> MULTIPLY .)
    STRING          reduce using rule 169 (UnaryOp -> MULTIPLY .)
    FLOAT_T         reduce using rule 169 (UnaryOp -> MULTIPLY .)
    STRING_T        reduce using rule 169 (UnaryOp -> MULTIPLY .)
    TYPE            reduce using rule 169 (UnaryOp -> MULTIPLY .)


state 109

    (168) UnaryOp -> MINUS .

    NOT             reduce using rule 168 (UnaryOp -> MINUS .)
    PLUS            reduce using rule 168 (UnaryOp -> MINUS .)
    MINUS           reduce using rule 168 (UnaryOp -> MINUS .)
    MULTIPLY        reduce using rule 168 (UnaryOp -> MINUS .)
    AND             reduce using rule 168 (UnaryOp -> MINUS .)
    LPAREN          reduce using rule 168 (UnaryOp -> MINUS .)
    TYPECAST        reduce using rule 168 (UnaryOp -> MINUS .)
    IDENTIFIER      reduce using rule 168 (UnaryOp -> MINUS .)
    INT_LIT         reduce using rule 168 (UnaryOp -> MINUS .)
    FLOAT_LIT       reduce using rule 168 (UnaryOp -> MINUS .)
    IMAGINARY_LIT   reduce using rule 168 (UnaryOp -> MINUS .)
    STRING_LIT      reduce using rule 168 (UnaryOp -> MINUS .)
    STRUCT          reduce using rule 168 (UnaryOp -> MINUS .)
    LSQUARE         reduce using rule 168 (UnaryOp -> MINUS .)
    MAP             reduce using rule 168 (UnaryOp -> MINUS .)
    INT_T           reduce using rule 168 (UnaryOp -> MINUS .)
    INT             reduce using rule 168 (UnaryOp -> MINUS .)
    FLOAT           reduce using rule 168 (UnaryOp -> MINUS .)
    BOOL            reduce using rule 168 (UnaryOp -> MINUS .)
    COMPLEX         reduce using rule 168 (UnaryOp -> MINUS .)
    BOOL_T          reduce using rule 168 (UnaryOp -> MINUS .)
    COMPLEX_T       reduce using rule 168 (UnaryOp -> MINUS .)
    STRING          reduce using rule 168 (UnaryOp -> MINUS .)
    FLOAT_T         reduce using rule 168 (UnaryOp -> MINUS .)
    STRING_T        reduce using rule 168 (UnaryOp -> MINUS .)
    TYPE            reduce using rule 168 (UnaryOp -> MINUS .)


state 110

    (24) SliceType -> LSQUARE RSQUARE . ElementType
    (29) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    Type                           shift and go to state 168
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    ElementType                    shift and go to state 169
    TypeLit                        shift and go to state 59
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 111

    (99) Operand -> OperandName .

    DOT             reduce using rule 99 (Operand -> OperandName .)
    LSQUARE         reduce using rule 99 (Operand -> OperandName .)
    LPAREN          reduce using rule 99 (Operand -> OperandName .)
    INCREMENT       reduce using rule 99 (Operand -> OperandName .)
    DECREMENT       reduce using rule 99 (Operand -> OperandName .)
    COMPARE_OR      reduce using rule 99 (Operand -> OperandName .)
    COMPARE_AND     reduce using rule 99 (Operand -> OperandName .)
    EQEQ            reduce using rule 99 (Operand -> OperandName .)
    NOTEQUALS       reduce using rule 99 (Operand -> OperandName .)
    LESSTHAN        reduce using rule 99 (Operand -> OperandName .)
    GREATERTHAN     reduce using rule 99 (Operand -> OperandName .)
    LESSTHAN_EQUAL  reduce using rule 99 (Operand -> OperandName .)
    GREATERTHAN_EQUAL reduce using rule 99 (Operand -> OperandName .)
    OR              reduce using rule 99 (Operand -> OperandName .)
    XOR             reduce using rule 99 (Operand -> OperandName .)
    ANDXOR          reduce using rule 99 (Operand -> OperandName .)
    DIVIDE          reduce using rule 99 (Operand -> OperandName .)
    MODULO          reduce using rule 99 (Operand -> OperandName .)
    LSHIFT          reduce using rule 99 (Operand -> OperandName .)
    RSHIFT          reduce using rule 99 (Operand -> OperandName .)
    PLUS            reduce using rule 99 (Operand -> OperandName .)
    MINUS           reduce using rule 99 (Operand -> OperandName .)
    MULTIPLY        reduce using rule 99 (Operand -> OperandName .)
    AND             reduce using rule 99 (Operand -> OperandName .)
    COMMA           reduce using rule 99 (Operand -> OperandName .)
    LCURL           reduce using rule 99 (Operand -> OperandName .)
    SEMICOLON       reduce using rule 99 (Operand -> OperandName .)
    PLUSEQUAL       reduce using rule 99 (Operand -> OperandName .)
    MINUSEQUAL      reduce using rule 99 (Operand -> OperandName .)
    TIMESEQUAL      reduce using rule 99 (Operand -> OperandName .)
    DIVIDE_EQUAL    reduce using rule 99 (Operand -> OperandName .)
    MODEQUAL        reduce using rule 99 (Operand -> OperandName .)
    ANDEQUAL        reduce using rule 99 (Operand -> OperandName .)
    OREQUAL         reduce using rule 99 (Operand -> OperandName .)
    XOREQUAL        reduce using rule 99 (Operand -> OperandName .)
    ANDXOR_EQUAL    reduce using rule 99 (Operand -> OperandName .)
    LSHIFT_EQUAL    reduce using rule 99 (Operand -> OperandName .)
    RSHIFT_EQUAL    reduce using rule 99 (Operand -> OperandName .)
    EQUALS          reduce using rule 99 (Operand -> OperandName .)
    RSQUARE         reduce using rule 99 (Operand -> OperandName .)
    RPAREN          reduce using rule 99 (Operand -> OperandName .)
    COLON           reduce using rule 99 (Operand -> OperandName .)
    RCURL           reduce using rule 99 (Operand -> OperandName .)
    LEFT_ARROW      reduce using rule 99 (Operand -> OperandName .)
    DEFAULT         reduce using rule 99 (Operand -> OperandName .)


state 112

    (101) Literal -> BasicLit .

    DOT             reduce using rule 101 (Literal -> BasicLit .)
    LSQUARE         reduce using rule 101 (Literal -> BasicLit .)
    LPAREN          reduce using rule 101 (Literal -> BasicLit .)
    COMPARE_OR      reduce using rule 101 (Literal -> BasicLit .)
    COMPARE_AND     reduce using rule 101 (Literal -> BasicLit .)
    EQEQ            reduce using rule 101 (Literal -> BasicLit .)
    NOTEQUALS       reduce using rule 101 (Literal -> BasicLit .)
    LESSTHAN        reduce using rule 101 (Literal -> BasicLit .)
    GREATERTHAN     reduce using rule 101 (Literal -> BasicLit .)
    LESSTHAN_EQUAL  reduce using rule 101 (Literal -> BasicLit .)
    GREATERTHAN_EQUAL reduce using rule 101 (Literal -> BasicLit .)
    OR              reduce using rule 101 (Literal -> BasicLit .)
    XOR             reduce using rule 101 (Literal -> BasicLit .)
    ANDXOR          reduce using rule 101 (Literal -> BasicLit .)
    DIVIDE          reduce using rule 101 (Literal -> BasicLit .)
    MODULO          reduce using rule 101 (Literal -> BasicLit .)
    LSHIFT          reduce using rule 101 (Literal -> BasicLit .)
    RSHIFT          reduce using rule 101 (Literal -> BasicLit .)
    PLUS            reduce using rule 101 (Literal -> BasicLit .)
    MINUS           reduce using rule 101 (Literal -> BasicLit .)
    MULTIPLY        reduce using rule 101 (Literal -> BasicLit .)
    AND             reduce using rule 101 (Literal -> BasicLit .)
    COMMA           reduce using rule 101 (Literal -> BasicLit .)
    LEFT_ARROW      reduce using rule 101 (Literal -> BasicLit .)
    EQUALS          reduce using rule 101 (Literal -> BasicLit .)
    RSQUARE         reduce using rule 101 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 101 (Literal -> BasicLit .)
    RPAREN          reduce using rule 101 (Literal -> BasicLit .)
    COLON           reduce using rule 101 (Literal -> BasicLit .)
    RCURL           reduce using rule 101 (Literal -> BasicLit .)
    INCREMENT       reduce using rule 101 (Literal -> BasicLit .)
    DECREMENT       reduce using rule 101 (Literal -> BasicLit .)
    PLUSEQUAL       reduce using rule 101 (Literal -> BasicLit .)
    MINUSEQUAL      reduce using rule 101 (Literal -> BasicLit .)
    TIMESEQUAL      reduce using rule 101 (Literal -> BasicLit .)
    DIVIDE_EQUAL    reduce using rule 101 (Literal -> BasicLit .)
    MODEQUAL        reduce using rule 101 (Literal -> BasicLit .)
    ANDEQUAL        reduce using rule 101 (Literal -> BasicLit .)
    OREQUAL         reduce using rule 101 (Literal -> BasicLit .)
    XOREQUAL        reduce using rule 101 (Literal -> BasicLit .)
    ANDXOR_EQUAL    reduce using rule 101 (Literal -> BasicLit .)
    LSHIFT_EQUAL    reduce using rule 101 (Literal -> BasicLit .)
    RSHIFT_EQUAL    reduce using rule 101 (Literal -> BasicLit .)
    LCURL           reduce using rule 101 (Literal -> BasicLit .)
    DEFAULT         reduce using rule 101 (Literal -> BasicLit .)


state 113

    (108) LiteralType -> TypeName .

    LCURL           reduce using rule 108 (LiteralType -> TypeName .)


state 114

    (166) UnaryExpr -> NOT . UnaryExpr
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 170
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 115

    (167) UnaryOp -> PLUS .

    NOT             reduce using rule 167 (UnaryOp -> PLUS .)
    PLUS            reduce using rule 167 (UnaryOp -> PLUS .)
    MINUS           reduce using rule 167 (UnaryOp -> PLUS .)
    MULTIPLY        reduce using rule 167 (UnaryOp -> PLUS .)
    AND             reduce using rule 167 (UnaryOp -> PLUS .)
    LPAREN          reduce using rule 167 (UnaryOp -> PLUS .)
    TYPECAST        reduce using rule 167 (UnaryOp -> PLUS .)
    IDENTIFIER      reduce using rule 167 (UnaryOp -> PLUS .)
    INT_LIT         reduce using rule 167 (UnaryOp -> PLUS .)
    FLOAT_LIT       reduce using rule 167 (UnaryOp -> PLUS .)
    IMAGINARY_LIT   reduce using rule 167 (UnaryOp -> PLUS .)
    STRING_LIT      reduce using rule 167 (UnaryOp -> PLUS .)
    STRUCT          reduce using rule 167 (UnaryOp -> PLUS .)
    LSQUARE         reduce using rule 167 (UnaryOp -> PLUS .)
    MAP             reduce using rule 167 (UnaryOp -> PLUS .)
    INT_T           reduce using rule 167 (UnaryOp -> PLUS .)
    INT             reduce using rule 167 (UnaryOp -> PLUS .)
    FLOAT           reduce using rule 167 (UnaryOp -> PLUS .)
    BOOL            reduce using rule 167 (UnaryOp -> PLUS .)
    COMPLEX         reduce using rule 167 (UnaryOp -> PLUS .)
    BOOL_T          reduce using rule 167 (UnaryOp -> PLUS .)
    COMPLEX_T       reduce using rule 167 (UnaryOp -> PLUS .)
    STRING          reduce using rule 167 (UnaryOp -> PLUS .)
    FLOAT_T         reduce using rule 167 (UnaryOp -> PLUS .)
    STRING_T        reduce using rule 167 (UnaryOp -> PLUS .)
    TYPE            reduce using rule 167 (UnaryOp -> PLUS .)


state 116

    (102) Literal -> CompositeLit .

    DOT             reduce using rule 102 (Literal -> CompositeLit .)
    LSQUARE         reduce using rule 102 (Literal -> CompositeLit .)
    LPAREN          reduce using rule 102 (Literal -> CompositeLit .)
    COMPARE_OR      reduce using rule 102 (Literal -> CompositeLit .)
    COMPARE_AND     reduce using rule 102 (Literal -> CompositeLit .)
    EQEQ            reduce using rule 102 (Literal -> CompositeLit .)
    NOTEQUALS       reduce using rule 102 (Literal -> CompositeLit .)
    LESSTHAN        reduce using rule 102 (Literal -> CompositeLit .)
    GREATERTHAN     reduce using rule 102 (Literal -> CompositeLit .)
    LESSTHAN_EQUAL  reduce using rule 102 (Literal -> CompositeLit .)
    GREATERTHAN_EQUAL reduce using rule 102 (Literal -> CompositeLit .)
    OR              reduce using rule 102 (Literal -> CompositeLit .)
    XOR             reduce using rule 102 (Literal -> CompositeLit .)
    ANDXOR          reduce using rule 102 (Literal -> CompositeLit .)
    DIVIDE          reduce using rule 102 (Literal -> CompositeLit .)
    MODULO          reduce using rule 102 (Literal -> CompositeLit .)
    LSHIFT          reduce using rule 102 (Literal -> CompositeLit .)
    RSHIFT          reduce using rule 102 (Literal -> CompositeLit .)
    PLUS            reduce using rule 102 (Literal -> CompositeLit .)
    MINUS           reduce using rule 102 (Literal -> CompositeLit .)
    MULTIPLY        reduce using rule 102 (Literal -> CompositeLit .)
    AND             reduce using rule 102 (Literal -> CompositeLit .)
    COMMA           reduce using rule 102 (Literal -> CompositeLit .)
    LEFT_ARROW      reduce using rule 102 (Literal -> CompositeLit .)
    EQUALS          reduce using rule 102 (Literal -> CompositeLit .)
    RSQUARE         reduce using rule 102 (Literal -> CompositeLit .)
    SEMICOLON       reduce using rule 102 (Literal -> CompositeLit .)
    RPAREN          reduce using rule 102 (Literal -> CompositeLit .)
    COLON           reduce using rule 102 (Literal -> CompositeLit .)
    RCURL           reduce using rule 102 (Literal -> CompositeLit .)
    INCREMENT       reduce using rule 102 (Literal -> CompositeLit .)
    DECREMENT       reduce using rule 102 (Literal -> CompositeLit .)
    PLUSEQUAL       reduce using rule 102 (Literal -> CompositeLit .)
    MINUSEQUAL      reduce using rule 102 (Literal -> CompositeLit .)
    TIMESEQUAL      reduce using rule 102 (Literal -> CompositeLit .)
    DIVIDE_EQUAL    reduce using rule 102 (Literal -> CompositeLit .)
    MODEQUAL        reduce using rule 102 (Literal -> CompositeLit .)
    ANDEQUAL        reduce using rule 102 (Literal -> CompositeLit .)
    OREQUAL         reduce using rule 102 (Literal -> CompositeLit .)
    XOREQUAL        reduce using rule 102 (Literal -> CompositeLit .)
    ANDXOR_EQUAL    reduce using rule 102 (Literal -> CompositeLit .)
    LSHIFT_EQUAL    reduce using rule 102 (Literal -> CompositeLit .)
    RSHIFT_EQUAL    reduce using rule 102 (Literal -> CompositeLit .)
    LCURL           reduce using rule 102 (Literal -> CompositeLit .)
    DEFAULT         reduce using rule 102 (Literal -> CompositeLit .)


state 117

    (125) OperandName -> IDENTIFIER .
    (126) QualifiedIdent -> IDENTIFIER . DOT TypeName

    DOT             reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSQUARE         reduce using rule 125 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMPARE_OR      reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMPARE_AND     reduce using rule 125 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 125 (OperandName -> IDENTIFIER .)
    NOTEQUALS       reduce using rule 125 (OperandName -> IDENTIFIER .)
    LESSTHAN        reduce using rule 125 (OperandName -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 125 (OperandName -> IDENTIFIER .)
    LESSTHAN_EQUAL  reduce using rule 125 (OperandName -> IDENTIFIER .)
    GREATERTHAN_EQUAL reduce using rule 125 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 125 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 125 (OperandName -> IDENTIFIER .)
    ANDXOR          reduce using rule 125 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 125 (OperandName -> IDENTIFIER .)
    MODULO          reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 125 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 125 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 125 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 125 (OperandName -> IDENTIFIER .)
    MULTIPLY        reduce using rule 125 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 125 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 125 (OperandName -> IDENTIFIER .)
    DEFAULT         reduce using rule 125 (OperandName -> IDENTIFIER .)
    RSQUARE         reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 125 (OperandName -> IDENTIFIER .)
    RPAREN          reduce using rule 125 (OperandName -> IDENTIFIER .)
    COLON           reduce using rule 125 (OperandName -> IDENTIFIER .)
    RCURL           reduce using rule 125 (OperandName -> IDENTIFIER .)
    INCREMENT       reduce using rule 125 (OperandName -> IDENTIFIER .)
    DECREMENT       reduce using rule 125 (OperandName -> IDENTIFIER .)
    PLUSEQUAL       reduce using rule 125 (OperandName -> IDENTIFIER .)
    MINUSEQUAL      reduce using rule 125 (OperandName -> IDENTIFIER .)
    TIMESEQUAL      reduce using rule 125 (OperandName -> IDENTIFIER .)
    DIVIDE_EQUAL    reduce using rule 125 (OperandName -> IDENTIFIER .)
    MODEQUAL        reduce using rule 125 (OperandName -> IDENTIFIER .)
    ANDEQUAL        reduce using rule 125 (OperandName -> IDENTIFIER .)
    OREQUAL         reduce using rule 125 (OperandName -> IDENTIFIER .)
    XOREQUAL        reduce using rule 125 (OperandName -> IDENTIFIER .)
    ANDXOR_EQUAL    reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSHIFT_EQUAL    reduce using rule 125 (OperandName -> IDENTIFIER .)
    RSHIFT_EQUAL    reduce using rule 125 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 125 (OperandName -> IDENTIFIER .)
    LCURL           reduce using rule 125 (OperandName -> IDENTIFIER .)
    LEFT_ARROW      reduce using rule 125 (OperandName -> IDENTIFIER .)

  ! DOT             [ shift and go to state 103 ]


state 118

    (106) LiteralType -> SliceType .

    LCURL           reduce using rule 106 (LiteralType -> SliceType .)


state 119

    (123) BasicLit -> IMAGINARY_LIT .

    DOT             reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    LSQUARE         reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    LPAREN          reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    COMPARE_OR      reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    COMPARE_AND     reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    EQEQ            reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    NOTEQUALS       reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    LESSTHAN        reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    GREATERTHAN     reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    LESSTHAN_EQUAL  reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    GREATERTHAN_EQUAL reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    OR              reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    XOR             reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    ANDXOR          reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    DIVIDE          reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    MODULO          reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    LSHIFT          reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    RSHIFT          reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    PLUS            reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    MINUS           reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    MULTIPLY        reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    AND             reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    RSQUARE         reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    COMMA           reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    SEMICOLON       reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    RPAREN          reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    COLON           reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    RCURL           reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    INCREMENT       reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    DECREMENT       reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    PLUSEQUAL       reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    MINUSEQUAL      reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    TIMESEQUAL      reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    DIVIDE_EQUAL    reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    MODEQUAL        reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    ANDEQUAL        reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    OREQUAL         reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    XOREQUAL        reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    ANDXOR_EQUAL    reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    LSHIFT_EQUAL    reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    RSHIFT_EQUAL    reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    EQUALS          reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    LCURL           reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    LEFT_ARROW      reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)
    DEFAULT         reduce using rule 123 (BasicLit -> IMAGINARY_LIT .)


state 120

    (142) Expression -> UnaryExpr .

    RSQUARE         reduce using rule 142 (Expression -> UnaryExpr .)
    COMPARE_OR      reduce using rule 142 (Expression -> UnaryExpr .)
    COMPARE_AND     reduce using rule 142 (Expression -> UnaryExpr .)
    EQEQ            reduce using rule 142 (Expression -> UnaryExpr .)
    NOTEQUALS       reduce using rule 142 (Expression -> UnaryExpr .)
    LESSTHAN        reduce using rule 142 (Expression -> UnaryExpr .)
    GREATERTHAN     reduce using rule 142 (Expression -> UnaryExpr .)
    LESSTHAN_EQUAL  reduce using rule 142 (Expression -> UnaryExpr .)
    GREATERTHAN_EQUAL reduce using rule 142 (Expression -> UnaryExpr .)
    OR              reduce using rule 142 (Expression -> UnaryExpr .)
    XOR             reduce using rule 142 (Expression -> UnaryExpr .)
    ANDXOR          reduce using rule 142 (Expression -> UnaryExpr .)
    DIVIDE          reduce using rule 142 (Expression -> UnaryExpr .)
    MODULO          reduce using rule 142 (Expression -> UnaryExpr .)
    LSHIFT          reduce using rule 142 (Expression -> UnaryExpr .)
    RSHIFT          reduce using rule 142 (Expression -> UnaryExpr .)
    PLUS            reduce using rule 142 (Expression -> UnaryExpr .)
    MINUS           reduce using rule 142 (Expression -> UnaryExpr .)
    MULTIPLY        reduce using rule 142 (Expression -> UnaryExpr .)
    AND             reduce using rule 142 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 142 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 142 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 142 (Expression -> UnaryExpr .)
    COLON           reduce using rule 142 (Expression -> UnaryExpr .)
    RCURL           reduce using rule 142 (Expression -> UnaryExpr .)
    INCREMENT       reduce using rule 142 (Expression -> UnaryExpr .)
    DECREMENT       reduce using rule 142 (Expression -> UnaryExpr .)
    PLUSEQUAL       reduce using rule 142 (Expression -> UnaryExpr .)
    MINUSEQUAL      reduce using rule 142 (Expression -> UnaryExpr .)
    TIMESEQUAL      reduce using rule 142 (Expression -> UnaryExpr .)
    DIVIDE_EQUAL    reduce using rule 142 (Expression -> UnaryExpr .)
    MODEQUAL        reduce using rule 142 (Expression -> UnaryExpr .)
    ANDEQUAL        reduce using rule 142 (Expression -> UnaryExpr .)
    OREQUAL         reduce using rule 142 (Expression -> UnaryExpr .)
    XOREQUAL        reduce using rule 142 (Expression -> UnaryExpr .)
    ANDXOR_EQUAL    reduce using rule 142 (Expression -> UnaryExpr .)
    LSHIFT_EQUAL    reduce using rule 142 (Expression -> UnaryExpr .)
    RSHIFT_EQUAL    reduce using rule 142 (Expression -> UnaryExpr .)
    EQUALS          reduce using rule 142 (Expression -> UnaryExpr .)
    LCURL           reduce using rule 142 (Expression -> UnaryExpr .)
    LEFT_ARROW      reduce using rule 142 (Expression -> UnaryExpr .)
    DEFAULT         reduce using rule 142 (Expression -> UnaryExpr .)


state 121

    (164) UnaryExpr -> PrimaryExpr .
    (128) PrimaryExpr -> PrimaryExpr . Selector
    (130) PrimaryExpr -> PrimaryExpr . Index
    (131) PrimaryExpr -> PrimaryExpr . Slice
    (132) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (133) PrimaryExpr -> PrimaryExpr . Arguments
    (134) Selector -> . DOT IDENTIFIER
    (135) Index -> . LSQUARE Expression RSQUARE
    (136) Slice -> . LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE
    (137) Slice -> . LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE
    (138) TypeAssertion -> . DOT LPAREN Type RPAREN
    (139) Arguments -> . LPAREN ExpressionListTypeOpt RPAREN

    COMPARE_OR      reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    COMPARE_AND     reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    EQEQ            reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    NOTEQUALS       reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    LESSTHAN        reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    GREATERTHAN     reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    LESSTHAN_EQUAL  reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    GREATERTHAN_EQUAL reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    ANDXOR          reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    MODULO          reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    LSHIFT          reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    RSHIFT          reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    MULTIPLY        reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    RSQUARE         reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    RCURL           reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    INCREMENT       reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    DECREMENT       reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    PLUSEQUAL       reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    MINUSEQUAL      reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    TIMESEQUAL      reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    DIVIDE_EQUAL    reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    MODEQUAL        reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    ANDEQUAL        reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    OREQUAL         reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    XOREQUAL        reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    ANDXOR_EQUAL    reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    LSHIFT_EQUAL    reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    RSHIFT_EQUAL    reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    EQUALS          reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    LCURL           reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    LEFT_ARROW      reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    DEFAULT         reduce using rule 164 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 178
    LSQUARE         shift and go to state 177
    LPAREN          shift and go to state 173

    Index                          shift and go to state 171
    Slice                          shift and go to state 172
    Selector                       shift and go to state 174
    TypeAssertion                  shift and go to state 175
    Arguments                      shift and go to state 176

state 122

    (27) ArrayType -> LSQUARE ArrayLength . RSQUARE ElementType

    RSQUARE         shift and go to state 179


state 123

    (107) LiteralType -> MapType .

    LCURL           reduce using rule 107 (LiteralType -> MapType .)


state 124

    (100) Operand -> LPAREN . Expression RPAREN
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 180
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 125

    (98) Operand -> Literal .

    DOT             reduce using rule 98 (Operand -> Literal .)
    LSQUARE         reduce using rule 98 (Operand -> Literal .)
    LPAREN          reduce using rule 98 (Operand -> Literal .)
    INCREMENT       reduce using rule 98 (Operand -> Literal .)
    DECREMENT       reduce using rule 98 (Operand -> Literal .)
    COMPARE_OR      reduce using rule 98 (Operand -> Literal .)
    COMPARE_AND     reduce using rule 98 (Operand -> Literal .)
    EQEQ            reduce using rule 98 (Operand -> Literal .)
    NOTEQUALS       reduce using rule 98 (Operand -> Literal .)
    LESSTHAN        reduce using rule 98 (Operand -> Literal .)
    GREATERTHAN     reduce using rule 98 (Operand -> Literal .)
    LESSTHAN_EQUAL  reduce using rule 98 (Operand -> Literal .)
    GREATERTHAN_EQUAL reduce using rule 98 (Operand -> Literal .)
    OR              reduce using rule 98 (Operand -> Literal .)
    XOR             reduce using rule 98 (Operand -> Literal .)
    ANDXOR          reduce using rule 98 (Operand -> Literal .)
    DIVIDE          reduce using rule 98 (Operand -> Literal .)
    MODULO          reduce using rule 98 (Operand -> Literal .)
    LSHIFT          reduce using rule 98 (Operand -> Literal .)
    RSHIFT          reduce using rule 98 (Operand -> Literal .)
    PLUS            reduce using rule 98 (Operand -> Literal .)
    MINUS           reduce using rule 98 (Operand -> Literal .)
    MULTIPLY        reduce using rule 98 (Operand -> Literal .)
    AND             reduce using rule 98 (Operand -> Literal .)
    COMMA           reduce using rule 98 (Operand -> Literal .)
    LCURL           reduce using rule 98 (Operand -> Literal .)
    SEMICOLON       reduce using rule 98 (Operand -> Literal .)
    PLUSEQUAL       reduce using rule 98 (Operand -> Literal .)
    MINUSEQUAL      reduce using rule 98 (Operand -> Literal .)
    TIMESEQUAL      reduce using rule 98 (Operand -> Literal .)
    DIVIDE_EQUAL    reduce using rule 98 (Operand -> Literal .)
    MODEQUAL        reduce using rule 98 (Operand -> Literal .)
    ANDEQUAL        reduce using rule 98 (Operand -> Literal .)
    OREQUAL         reduce using rule 98 (Operand -> Literal .)
    XOREQUAL        reduce using rule 98 (Operand -> Literal .)
    ANDXOR_EQUAL    reduce using rule 98 (Operand -> Literal .)
    LSHIFT_EQUAL    reduce using rule 98 (Operand -> Literal .)
    RSHIFT_EQUAL    reduce using rule 98 (Operand -> Literal .)
    EQUALS          reduce using rule 98 (Operand -> Literal .)
    RSQUARE         reduce using rule 98 (Operand -> Literal .)
    RPAREN          reduce using rule 98 (Operand -> Literal .)
    COLON           reduce using rule 98 (Operand -> Literal .)
    RCURL           reduce using rule 98 (Operand -> Literal .)
    LEFT_ARROW      reduce using rule 98 (Operand -> Literal .)
    DEFAULT         reduce using rule 98 (Operand -> Literal .)


state 126

    (28) ArrayLength -> Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 28 (ArrayLength -> Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 127

    (170) UnaryOp -> AND .

    NOT             reduce using rule 170 (UnaryOp -> AND .)
    PLUS            reduce using rule 170 (UnaryOp -> AND .)
    MINUS           reduce using rule 170 (UnaryOp -> AND .)
    MULTIPLY        reduce using rule 170 (UnaryOp -> AND .)
    AND             reduce using rule 170 (UnaryOp -> AND .)
    LPAREN          reduce using rule 170 (UnaryOp -> AND .)
    TYPECAST        reduce using rule 170 (UnaryOp -> AND .)
    IDENTIFIER      reduce using rule 170 (UnaryOp -> AND .)
    INT_LIT         reduce using rule 170 (UnaryOp -> AND .)
    FLOAT_LIT       reduce using rule 170 (UnaryOp -> AND .)
    IMAGINARY_LIT   reduce using rule 170 (UnaryOp -> AND .)
    STRING_LIT      reduce using rule 170 (UnaryOp -> AND .)
    STRUCT          reduce using rule 170 (UnaryOp -> AND .)
    LSQUARE         reduce using rule 170 (UnaryOp -> AND .)
    MAP             reduce using rule 170 (UnaryOp -> AND .)
    INT_T           reduce using rule 170 (UnaryOp -> AND .)
    INT             reduce using rule 170 (UnaryOp -> AND .)
    FLOAT           reduce using rule 170 (UnaryOp -> AND .)
    BOOL            reduce using rule 170 (UnaryOp -> AND .)
    COMPLEX         reduce using rule 170 (UnaryOp -> AND .)
    BOOL_T          reduce using rule 170 (UnaryOp -> AND .)
    COMPLEX_T       reduce using rule 170 (UnaryOp -> AND .)
    STRING          reduce using rule 170 (UnaryOp -> AND .)
    FLOAT_T         reduce using rule 170 (UnaryOp -> AND .)
    STRING_T        reduce using rule 170 (UnaryOp -> AND .)
    TYPE            reduce using rule 170 (UnaryOp -> AND .)


state 128

    (171) Conversion -> TYPECAST . Type LPAREN Expression RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    Type                           shift and go to state 200
    TypeToken                      shift and go to state 58
    TypeLit                        shift and go to state 59
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 129

    (103) CompositeLit -> LiteralType . LiteralValue
    (109) LiteralValue -> . LCURL RCURL
    (110) LiteralValue -> . LCURL ElementList RCURL
    (111) LiteralValue -> . LCURL ElementList COMMA RCURL

    LCURL           shift and go to state 202

    LiteralValue                   shift and go to state 201

state 130

    (127) PrimaryExpr -> Operand .

    DOT             reduce using rule 127 (PrimaryExpr -> Operand .)
    LSQUARE         reduce using rule 127 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 127 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 127 (PrimaryExpr -> Operand .)
    COMPARE_OR      reduce using rule 127 (PrimaryExpr -> Operand .)
    COMPARE_AND     reduce using rule 127 (PrimaryExpr -> Operand .)
    EQEQ            reduce using rule 127 (PrimaryExpr -> Operand .)
    NOTEQUALS       reduce using rule 127 (PrimaryExpr -> Operand .)
    LESSTHAN        reduce using rule 127 (PrimaryExpr -> Operand .)
    GREATERTHAN     reduce using rule 127 (PrimaryExpr -> Operand .)
    LESSTHAN_EQUAL  reduce using rule 127 (PrimaryExpr -> Operand .)
    GREATERTHAN_EQUAL reduce using rule 127 (PrimaryExpr -> Operand .)
    OR              reduce using rule 127 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 127 (PrimaryExpr -> Operand .)
    ANDXOR          reduce using rule 127 (PrimaryExpr -> Operand .)
    DIVIDE          reduce using rule 127 (PrimaryExpr -> Operand .)
    MODULO          reduce using rule 127 (PrimaryExpr -> Operand .)
    LSHIFT          reduce using rule 127 (PrimaryExpr -> Operand .)
    RSHIFT          reduce using rule 127 (PrimaryExpr -> Operand .)
    PLUS            reduce using rule 127 (PrimaryExpr -> Operand .)
    MINUS           reduce using rule 127 (PrimaryExpr -> Operand .)
    MULTIPLY        reduce using rule 127 (PrimaryExpr -> Operand .)
    AND             reduce using rule 127 (PrimaryExpr -> Operand .)
    INCREMENT       reduce using rule 127 (PrimaryExpr -> Operand .)
    DECREMENT       reduce using rule 127 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 127 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 127 (PrimaryExpr -> Operand .)
    PLUSEQUAL       reduce using rule 127 (PrimaryExpr -> Operand .)
    MINUSEQUAL      reduce using rule 127 (PrimaryExpr -> Operand .)
    TIMESEQUAL      reduce using rule 127 (PrimaryExpr -> Operand .)
    DIVIDE_EQUAL    reduce using rule 127 (PrimaryExpr -> Operand .)
    MODEQUAL        reduce using rule 127 (PrimaryExpr -> Operand .)
    ANDEQUAL        reduce using rule 127 (PrimaryExpr -> Operand .)
    OREQUAL         reduce using rule 127 (PrimaryExpr -> Operand .)
    XOREQUAL        reduce using rule 127 (PrimaryExpr -> Operand .)
    ANDXOR_EQUAL    reduce using rule 127 (PrimaryExpr -> Operand .)
    LSHIFT_EQUAL    reduce using rule 127 (PrimaryExpr -> Operand .)
    RSHIFT_EQUAL    reduce using rule 127 (PrimaryExpr -> Operand .)
    EQUALS          reduce using rule 127 (PrimaryExpr -> Operand .)
    RSQUARE         reduce using rule 127 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 127 (PrimaryExpr -> Operand .)
    RCURL           reduce using rule 127 (PrimaryExpr -> Operand .)
    LCURL           reduce using rule 127 (PrimaryExpr -> Operand .)
    LEFT_ARROW      reduce using rule 127 (PrimaryExpr -> Operand .)
    DEFAULT         reduce using rule 127 (PrimaryExpr -> Operand .)


state 131

    (121) BasicLit -> INT_LIT .

    DOT             reduce using rule 121 (BasicLit -> INT_LIT .)
    LSQUARE         reduce using rule 121 (BasicLit -> INT_LIT .)
    LPAREN          reduce using rule 121 (BasicLit -> INT_LIT .)
    COMPARE_OR      reduce using rule 121 (BasicLit -> INT_LIT .)
    COMPARE_AND     reduce using rule 121 (BasicLit -> INT_LIT .)
    EQEQ            reduce using rule 121 (BasicLit -> INT_LIT .)
    NOTEQUALS       reduce using rule 121 (BasicLit -> INT_LIT .)
    LESSTHAN        reduce using rule 121 (BasicLit -> INT_LIT .)
    GREATERTHAN     reduce using rule 121 (BasicLit -> INT_LIT .)
    LESSTHAN_EQUAL  reduce using rule 121 (BasicLit -> INT_LIT .)
    GREATERTHAN_EQUAL reduce using rule 121 (BasicLit -> INT_LIT .)
    OR              reduce using rule 121 (BasicLit -> INT_LIT .)
    XOR             reduce using rule 121 (BasicLit -> INT_LIT .)
    ANDXOR          reduce using rule 121 (BasicLit -> INT_LIT .)
    DIVIDE          reduce using rule 121 (BasicLit -> INT_LIT .)
    MODULO          reduce using rule 121 (BasicLit -> INT_LIT .)
    LSHIFT          reduce using rule 121 (BasicLit -> INT_LIT .)
    RSHIFT          reduce using rule 121 (BasicLit -> INT_LIT .)
    PLUS            reduce using rule 121 (BasicLit -> INT_LIT .)
    MINUS           reduce using rule 121 (BasicLit -> INT_LIT .)
    MULTIPLY        reduce using rule 121 (BasicLit -> INT_LIT .)
    AND             reduce using rule 121 (BasicLit -> INT_LIT .)
    RSQUARE         reduce using rule 121 (BasicLit -> INT_LIT .)
    COMMA           reduce using rule 121 (BasicLit -> INT_LIT .)
    SEMICOLON       reduce using rule 121 (BasicLit -> INT_LIT .)
    RPAREN          reduce using rule 121 (BasicLit -> INT_LIT .)
    COLON           reduce using rule 121 (BasicLit -> INT_LIT .)
    RCURL           reduce using rule 121 (BasicLit -> INT_LIT .)
    INCREMENT       reduce using rule 121 (BasicLit -> INT_LIT .)
    DECREMENT       reduce using rule 121 (BasicLit -> INT_LIT .)
    PLUSEQUAL       reduce using rule 121 (BasicLit -> INT_LIT .)
    MINUSEQUAL      reduce using rule 121 (BasicLit -> INT_LIT .)
    TIMESEQUAL      reduce using rule 121 (BasicLit -> INT_LIT .)
    DIVIDE_EQUAL    reduce using rule 121 (BasicLit -> INT_LIT .)
    MODEQUAL        reduce using rule 121 (BasicLit -> INT_LIT .)
    ANDEQUAL        reduce using rule 121 (BasicLit -> INT_LIT .)
    OREQUAL         reduce using rule 121 (BasicLit -> INT_LIT .)
    XOREQUAL        reduce using rule 121 (BasicLit -> INT_LIT .)
    ANDXOR_EQUAL    reduce using rule 121 (BasicLit -> INT_LIT .)
    LSHIFT_EQUAL    reduce using rule 121 (BasicLit -> INT_LIT .)
    RSHIFT_EQUAL    reduce using rule 121 (BasicLit -> INT_LIT .)
    EQUALS          reduce using rule 121 (BasicLit -> INT_LIT .)
    LCURL           reduce using rule 121 (BasicLit -> INT_LIT .)
    LEFT_ARROW      reduce using rule 121 (BasicLit -> INT_LIT .)
    DEFAULT         reduce using rule 121 (BasicLit -> INT_LIT .)


state 132

    (124) BasicLit -> STRING_LIT .

    DOT             reduce using rule 124 (BasicLit -> STRING_LIT .)
    LSQUARE         reduce using rule 124 (BasicLit -> STRING_LIT .)
    LPAREN          reduce using rule 124 (BasicLit -> STRING_LIT .)
    COMPARE_OR      reduce using rule 124 (BasicLit -> STRING_LIT .)
    COMPARE_AND     reduce using rule 124 (BasicLit -> STRING_LIT .)
    EQEQ            reduce using rule 124 (BasicLit -> STRING_LIT .)
    NOTEQUALS       reduce using rule 124 (BasicLit -> STRING_LIT .)
    LESSTHAN        reduce using rule 124 (BasicLit -> STRING_LIT .)
    GREATERTHAN     reduce using rule 124 (BasicLit -> STRING_LIT .)
    LESSTHAN_EQUAL  reduce using rule 124 (BasicLit -> STRING_LIT .)
    GREATERTHAN_EQUAL reduce using rule 124 (BasicLit -> STRING_LIT .)
    OR              reduce using rule 124 (BasicLit -> STRING_LIT .)
    XOR             reduce using rule 124 (BasicLit -> STRING_LIT .)
    ANDXOR          reduce using rule 124 (BasicLit -> STRING_LIT .)
    DIVIDE          reduce using rule 124 (BasicLit -> STRING_LIT .)
    MODULO          reduce using rule 124 (BasicLit -> STRING_LIT .)
    LSHIFT          reduce using rule 124 (BasicLit -> STRING_LIT .)
    RSHIFT          reduce using rule 124 (BasicLit -> STRING_LIT .)
    PLUS            reduce using rule 124 (BasicLit -> STRING_LIT .)
    MINUS           reduce using rule 124 (BasicLit -> STRING_LIT .)
    MULTIPLY        reduce using rule 124 (BasicLit -> STRING_LIT .)
    AND             reduce using rule 124 (BasicLit -> STRING_LIT .)
    RSQUARE         reduce using rule 124 (BasicLit -> STRING_LIT .)
    COMMA           reduce using rule 124 (BasicLit -> STRING_LIT .)
    SEMICOLON       reduce using rule 124 (BasicLit -> STRING_LIT .)
    RPAREN          reduce using rule 124 (BasicLit -> STRING_LIT .)
    COLON           reduce using rule 124 (BasicLit -> STRING_LIT .)
    RCURL           reduce using rule 124 (BasicLit -> STRING_LIT .)
    INCREMENT       reduce using rule 124 (BasicLit -> STRING_LIT .)
    DECREMENT       reduce using rule 124 (BasicLit -> STRING_LIT .)
    PLUSEQUAL       reduce using rule 124 (BasicLit -> STRING_LIT .)
    MINUSEQUAL      reduce using rule 124 (BasicLit -> STRING_LIT .)
    TIMESEQUAL      reduce using rule 124 (BasicLit -> STRING_LIT .)
    DIVIDE_EQUAL    reduce using rule 124 (BasicLit -> STRING_LIT .)
    MODEQUAL        reduce using rule 124 (BasicLit -> STRING_LIT .)
    ANDEQUAL        reduce using rule 124 (BasicLit -> STRING_LIT .)
    OREQUAL         reduce using rule 124 (BasicLit -> STRING_LIT .)
    XOREQUAL        reduce using rule 124 (BasicLit -> STRING_LIT .)
    ANDXOR_EQUAL    reduce using rule 124 (BasicLit -> STRING_LIT .)
    LSHIFT_EQUAL    reduce using rule 124 (BasicLit -> STRING_LIT .)
    RSHIFT_EQUAL    reduce using rule 124 (BasicLit -> STRING_LIT .)
    EQUALS          reduce using rule 124 (BasicLit -> STRING_LIT .)
    LCURL           reduce using rule 124 (BasicLit -> STRING_LIT .)
    LEFT_ARROW      reduce using rule 124 (BasicLit -> STRING_LIT .)
    DEFAULT         reduce using rule 124 (BasicLit -> STRING_LIT .)


state 133

    (104) LiteralType -> StructType .

    LCURL           reduce using rule 104 (LiteralType -> StructType .)


state 134

    (67) TypeExprListOpt -> TypeOpt EQUALS . ExpressionList
    (73) ExpressionList -> . Expression ExpressionRep
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    Conversion                     shift and go to state 104
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    Expression                     shift and go to state 160
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    ExpressionList                 shift and go to state 203
    MapType                        shift and go to state 123
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    CompositeLit                   shift and go to state 116
    QualifiedIdent                 shift and go to state 82

state 135

    (25) MapType -> MAP LSQUARE . KeyType RSQUARE ElementType
    (26) KeyType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    TypeLit                        shift and go to state 59
    KeyType                        shift and go to state 205
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    Type                           shift and go to state 204
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 136

    (30) StructType -> STRUCT LCURL . FieldDeclRep RCURL
    (31) FieldDeclRep -> . FieldDeclRep FieldDecl SEMICOLON
    (32) FieldDeclRep -> . epsilon
    (275) epsilon -> .

    RCURL           reduce using rule 275 (epsilon -> .)
    IDENTIFIER      reduce using rule 275 (epsilon -> .)

    FieldDeclRep                   shift and go to state 206
    epsilon                        shift and go to state 207

state 137

    (16) TypeToken -> TYPE IDENTIFIER .

    LCURL           reduce using rule 16 (TypeToken -> TYPE IDENTIFIER .)
    EQUALS          reduce using rule 16 (TypeToken -> TYPE IDENTIFIER .)
    STRING_LIT      reduce using rule 16 (TypeToken -> TYPE IDENTIFIER .)
    SEMICOLON       reduce using rule 16 (TypeToken -> TYPE IDENTIFIER .)
    RPAREN          reduce using rule 16 (TypeToken -> TYPE IDENTIFIER .)
    COMMA           reduce using rule 16 (TypeToken -> TYPE IDENTIFIER .)
    LPAREN          reduce using rule 16 (TypeToken -> TYPE IDENTIFIER .)
    RSQUARE         reduce using rule 16 (TypeToken -> TYPE IDENTIFIER .)


state 138

    (72) IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .

    COMMA           reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    DOTS            reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    INT_T           reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    INT             reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    FLOAT           reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    BOOL            reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    COMPLEX         reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    BOOL_T          reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    COMPLEX_T       reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    STRING          reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    FLOAT_T         reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    STRING_T        reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    TYPE            reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    IDENTIFIER      reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    LSQUARE         reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    STRUCT          reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    MULTIPLY        reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    MAP             reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    EQUALS          reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    SEMICOLON       reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    SHORT_ASSIGNMENT reduce using rule 72 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)


state 139

    (42) Result -> Parameters .

    LCURL           reduce using rule 42 (Result -> Parameters .)
    SEMICOLON       reduce using rule 42 (Result -> Parameters .)


state 140

    (43) Result -> Type .

    LCURL           reduce using rule 43 (Result -> Type .)
    SEMICOLON       reduce using rule 43 (Result -> Type .)


state 141

    (39) Signature -> Parameters ResultOpt .

    LCURL           reduce using rule 39 (Signature -> Parameters ResultOpt .)
    SEMICOLON       reduce using rule 39 (Signature -> Parameters ResultOpt .)


state 142

    (41) ResultOpt -> epsilon .

    LCURL           reduce using rule 41 (ResultOpt -> epsilon .)
    SEMICOLON       reduce using rule 41 (ResultOpt -> epsilon .)


state 143

    (40) ResultOpt -> Result .

    LCURL           reduce using rule 40 (ResultOpt -> Result .)
    SEMICOLON       reduce using rule 40 (ResultOpt -> Result .)


state 144

    (96) Function -> Signature FunctionBody .

    SEMICOLON       reduce using rule 96 (Function -> Signature FunctionBody .)


state 145

    (97) FunctionBody -> Block .

    SEMICOLON       reduce using rule 97 (FunctionBody -> Block .)


state 146

    (53) Block -> LCURL . StatementList RCURL
    (54) StatementList -> . StatementRep
    (55) StatementRep -> . StatementRep Statement SEMICOLON
    (56) StatementRep -> . epsilon
    (275) epsilon -> .

    RETURN          reduce using rule 275 (epsilon -> .)
    BREAK           reduce using rule 275 (epsilon -> .)
    CONTINUE        reduce using rule 275 (epsilon -> .)
    GOTO            reduce using rule 275 (epsilon -> .)
    LCURL           reduce using rule 275 (epsilon -> .)
    IF              reduce using rule 275 (epsilon -> .)
    FOR             reduce using rule 275 (epsilon -> .)
    DEFER           reduce using rule 275 (epsilon -> .)
    SELECT          reduce using rule 275 (epsilon -> .)
    FALLTHROUGH     reduce using rule 275 (epsilon -> .)
    GO              reduce using rule 275 (epsilon -> .)
    CONST           reduce using rule 275 (epsilon -> .)
    TYPE            reduce using rule 275 (epsilon -> .)
    VAR             reduce using rule 275 (epsilon -> .)
    IDENTIFIER      reduce using rule 275 (epsilon -> .)
    SWITCH          reduce using rule 275 (epsilon -> .)
    NOT             reduce using rule 275 (epsilon -> .)
    PLUS            reduce using rule 275 (epsilon -> .)
    MINUS           reduce using rule 275 (epsilon -> .)
    MULTIPLY        reduce using rule 275 (epsilon -> .)
    AND             reduce using rule 275 (epsilon -> .)
    LPAREN          reduce using rule 275 (epsilon -> .)
    TYPECAST        reduce using rule 275 (epsilon -> .)
    INT_LIT         reduce using rule 275 (epsilon -> .)
    FLOAT_LIT       reduce using rule 275 (epsilon -> .)
    IMAGINARY_LIT   reduce using rule 275 (epsilon -> .)
    STRING_LIT      reduce using rule 275 (epsilon -> .)
    STRUCT          reduce using rule 275 (epsilon -> .)
    LSQUARE         reduce using rule 275 (epsilon -> .)
    MAP             reduce using rule 275 (epsilon -> .)
    INT_T           reduce using rule 275 (epsilon -> .)
    INT             reduce using rule 275 (epsilon -> .)
    FLOAT           reduce using rule 275 (epsilon -> .)
    BOOL            reduce using rule 275 (epsilon -> .)
    COMPLEX         reduce using rule 275 (epsilon -> .)
    BOOL_T          reduce using rule 275 (epsilon -> .)
    COMPLEX_T       reduce using rule 275 (epsilon -> .)
    STRING          reduce using rule 275 (epsilon -> .)
    FLOAT_T         reduce using rule 275 (epsilon -> .)
    STRING_T        reduce using rule 275 (epsilon -> .)
    SEMICOLON       reduce using rule 275 (epsilon -> .)
    RCURL           reduce using rule 275 (epsilon -> .)

    epsilon                        shift and go to state 209
    StatementRep                   shift and go to state 208
    StatementList                  shift and go to state 210

state 147

    (50) ParameterDecl -> IdentifierList . Type
    (51) ParameterDecl -> IdentifierList . DOTS Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    DOTS            shift and go to state 212
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    Type                           shift and go to state 211
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    TypeLit                        shift and go to state 59
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 148

    (52) ParameterDecl -> Type .

    RPAREN          reduce using rule 52 (ParameterDecl -> Type .)
    COMMA           reduce using rule 52 (ParameterDecl -> Type .)


state 149

    (46) Parameters -> LPAREN RPAREN .

    LPAREN          reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    INT_T           reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    INT             reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    FLOAT           reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    BOOL            reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    COMPLEX         reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    BOOL_T          reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    COMPLEX_T       reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    STRING          reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    FLOAT_T         reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    STRING_T        reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    TYPE            reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    LSQUARE         reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    STRUCT          reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    MULTIPLY        reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    MAP             reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    LCURL           reduce using rule 46 (Parameters -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 46 (Parameters -> LPAREN RPAREN .)


state 150

    (44) Parameters -> LPAREN ParametersList . RPAREN
    (45) Parameters -> LPAREN ParametersList . COMMA RPAREN
    (48) ParametersList -> ParametersList . COMMA ParameterDecl

    RPAREN          shift and go to state 214
    COMMA           shift and go to state 213


state 151

    (69) IdentifierList -> IDENTIFIER .
    (72) IdentifierRep -> IDENTIFIER . COMMA IDENTIFIER
    (126) QualifiedIdent -> IDENTIFIER . DOT TypeName

    DOTS            reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    INT_T           reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    INT             reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    FLOAT           reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    BOOL            reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    COMPLEX         reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    BOOL_T          reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    COMPLEX_T       reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    STRING          reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    FLOAT_T         reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    STRING_T        reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    TYPE            reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    LSQUARE         reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    STRUCT          reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    MULTIPLY        reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    MAP             reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    COMMA           shift and go to state 83
    DOT             shift and go to state 103


state 152

    (47) ParametersList -> ParameterDecl .

    RPAREN          reduce using rule 47 (ParametersList -> ParameterDecl .)
    COMMA           reduce using rule 47 (ParametersList -> ParameterDecl .)


state 153

    (49) ParameterDecl -> DOTS . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    Type                           shift and go to state 215
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    TypeLit                        shift and go to state 59
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 154

    (85) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOLON       reduce using rule 85 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 155

    (86) VarSpecRep -> VarSpecRep VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 216


state 156

    (90) ExpressionListOpt -> EQUALS . ExpressionList
    (73) ExpressionList -> . Expression ExpressionRep
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    Conversion                     shift and go to state 104
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    ExpressionList                 shift and go to state 217
    MapType                        shift and go to state 123
    Expression                     shift and go to state 160
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    CompositeLit                   shift and go to state 116
    QualifiedIdent                 shift and go to state 82

state 157

    (91) ExpressionListOpt -> epsilon .

    SEMICOLON       reduce using rule 91 (ExpressionListOpt -> epsilon .)


state 158

    (88) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOLON       reduce using rule 88 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 159

    (89) VarSpec -> IdentifierList EQUALS ExpressionList .

    SEMICOLON       reduce using rule 89 (VarSpec -> IdentifierList EQUALS ExpressionList .)


state 160

    (73) ExpressionList -> Expression . ExpressionRep
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression
    (74) ExpressionRep -> . ExpressionRep COMMA Expression
    (75) ExpressionRep -> . epsilon
    (275) epsilon -> .

    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184
    COMMA           reduce using rule 275 (epsilon -> .)
    SEMICOLON       reduce using rule 275 (epsilon -> .)
    RPAREN          reduce using rule 275 (epsilon -> .)
    LCURL           reduce using rule 275 (epsilon -> .)
    COLON           reduce using rule 275 (epsilon -> .)

    epsilon                        shift and go to state 219
    ExpressionRep                  shift and go to state 218

state 161

    (77) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOLON       reduce using rule 77 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 162

    (78) TypeSpecRep -> TypeSpecRep TypeSpec . SEMICOLON

    SEMICOLON       shift and go to state 220


state 163

    (82) AliasDecl -> IDENTIFIER EQUALS Type .

    SEMICOLON       reduce using rule 82 (AliasDecl -> IDENTIFIER EQUALS Type .)


state 164

    (268) ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .

    RPAREN          reduce using rule 268 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    DOT             reduce using rule 268 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 268 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    STRING_LIT      reduce using rule 268 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)


state 165

    (64) ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .

    RPAREN          reduce using rule 64 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 64 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .)


state 166

    (126) QualifiedIdent -> IDENTIFIER DOT TypeName .

    LCURL           reduce using rule 126 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    EQUALS          reduce using rule 126 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    SEMICOLON       reduce using rule 126 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    RPAREN          reduce using rule 126 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    COMMA           reduce using rule 126 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    LPAREN          reduce using rule 126 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    RSQUARE         reduce using rule 126 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    STRING_LIT      reduce using rule 126 (QualifiedIdent -> IDENTIFIER DOT TypeName .)


state 167

    (165) UnaryExpr -> UnaryOp UnaryExpr .

    COMPARE_OR      reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMPARE_AND     reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQEQ            reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    NOTEQUALS       reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESSTHAN        reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    GREATERTHAN     reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESSTHAN_EQUAL  reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    GREATERTHAN_EQUAL reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    ANDXOR          reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE          reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    MODULO          reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSHIFT          reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSHIFT          reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS            reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS           reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    MULTIPLY        reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSQUARE         reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    RCURL           reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    INCREMENT       reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    DECREMENT       reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUSEQUAL       reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUSEQUAL      reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMESEQUAL      reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE_EQUAL    reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    MODEQUAL        reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    ANDEQUAL        reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    OREQUAL         reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOREQUAL        reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    ANDXOR_EQUAL    reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSHIFT_EQUAL    reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSHIFT_EQUAL    reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQUALS          reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    LCURL           reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEFT_ARROW      reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)
    DEFAULT         reduce using rule 165 (UnaryExpr -> UnaryOp UnaryExpr .)


state 168

    (29) ElementType -> Type .

    EQUALS          reduce using rule 29 (ElementType -> Type .)
    SEMICOLON       reduce using rule 29 (ElementType -> Type .)
    LCURL           reduce using rule 29 (ElementType -> Type .)
    RPAREN          reduce using rule 29 (ElementType -> Type .)
    COMMA           reduce using rule 29 (ElementType -> Type .)
    LPAREN          reduce using rule 29 (ElementType -> Type .)
    RSQUARE         reduce using rule 29 (ElementType -> Type .)
    STRING_LIT      reduce using rule 29 (ElementType -> Type .)


state 169

    (24) SliceType -> LSQUARE RSQUARE ElementType .

    LCURL           reduce using rule 24 (SliceType -> LSQUARE RSQUARE ElementType .)
    EQUALS          reduce using rule 24 (SliceType -> LSQUARE RSQUARE ElementType .)
    SEMICOLON       reduce using rule 24 (SliceType -> LSQUARE RSQUARE ElementType .)
    RPAREN          reduce using rule 24 (SliceType -> LSQUARE RSQUARE ElementType .)
    COMMA           reduce using rule 24 (SliceType -> LSQUARE RSQUARE ElementType .)
    LPAREN          reduce using rule 24 (SliceType -> LSQUARE RSQUARE ElementType .)
    RSQUARE         reduce using rule 24 (SliceType -> LSQUARE RSQUARE ElementType .)
    STRING_LIT      reduce using rule 24 (SliceType -> LSQUARE RSQUARE ElementType .)


state 170

    (166) UnaryExpr -> NOT UnaryExpr .

    COMPARE_OR      reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    COMPARE_AND     reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    EQEQ            reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    NOTEQUALS       reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    LESSTHAN        reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    GREATERTHAN     reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    LESSTHAN_EQUAL  reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    GREATERTHAN_EQUAL reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    OR              reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    XOR             reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    ANDXOR          reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    DIVIDE          reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    MODULO          reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    LSHIFT          reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    RSHIFT          reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    PLUS            reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    MINUS           reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    MULTIPLY        reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    AND             reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    RSQUARE         reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    COMMA           reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    SEMICOLON       reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    RPAREN          reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    COLON           reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    RCURL           reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    INCREMENT       reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    DECREMENT       reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    PLUSEQUAL       reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    MINUSEQUAL      reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    TIMESEQUAL      reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    DIVIDE_EQUAL    reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    MODEQUAL        reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    ANDEQUAL        reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    OREQUAL         reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    XOREQUAL        reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    ANDXOR_EQUAL    reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    LSHIFT_EQUAL    reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    RSHIFT_EQUAL    reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    EQUALS          reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    LCURL           reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    LEFT_ARROW      reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)
    DEFAULT         reduce using rule 166 (UnaryExpr -> NOT UnaryExpr .)


state 171

    (130) PrimaryExpr -> PrimaryExpr Index .

    DOT             reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    LSQUARE         reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    COMPARE_OR      reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    COMPARE_AND     reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    EQEQ            reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    NOTEQUALS       reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    LESSTHAN        reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    GREATERTHAN     reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    LESSTHAN_EQUAL  reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    GREATERTHAN_EQUAL reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    ANDXOR          reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDE          reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    MODULO          reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    LSHIFT          reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    RSHIFT          reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    PLUS            reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    MINUS           reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    MULTIPLY        reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    INCREMENT       reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    DECREMENT       reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSEQUAL       reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSEQUAL      reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    TIMESEQUAL      reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDE_EQUAL    reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    MODEQUAL        reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    ANDEQUAL        reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    OREQUAL         reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    XOREQUAL        reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    ANDXOR_EQUAL    reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    LSHIFT_EQUAL    reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    RSHIFT_EQUAL    reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    EQUALS          reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    RSQUARE         reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    RCURL           reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    LCURL           reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    LEFT_ARROW      reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)
    DEFAULT         reduce using rule 130 (PrimaryExpr -> PrimaryExpr Index .)


state 172

    (131) PrimaryExpr -> PrimaryExpr Slice .

    DOT             reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    LSQUARE         reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    COMPARE_OR      reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    COMPARE_AND     reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    EQEQ            reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    NOTEQUALS       reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    LESSTHAN        reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    GREATERTHAN     reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    LESSTHAN_EQUAL  reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    GREATERTHAN_EQUAL reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    ANDXOR          reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE          reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    MODULO          reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    LSHIFT          reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    RSHIFT          reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS            reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS           reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    MULTIPLY        reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    INCREMENT       reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    DECREMENT       reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSEQUAL       reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSEQUAL      reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMESEQUAL      reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE_EQUAL    reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    MODEQUAL        reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    ANDEQUAL        reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    OREQUAL         reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    XOREQUAL        reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    ANDXOR_EQUAL    reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    LSHIFT_EQUAL    reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    RSHIFT_EQUAL    reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUALS          reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    RSQUARE         reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    RCURL           reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    LCURL           reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    LEFT_ARROW      reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)
    DEFAULT         reduce using rule 131 (PrimaryExpr -> PrimaryExpr Slice .)


state 173

    (139) Arguments -> LPAREN . ExpressionListTypeOpt RPAREN
    (140) ExpressionListTypeOpt -> . ExpressionList
    (141) ExpressionListTypeOpt -> . epsilon
    (73) ExpressionList -> . Expression ExpressionRep
    (275) epsilon -> .
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    RPAREN          reduce using rule 275 (epsilon -> .)
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    UnaryOp                        shift and go to state 105
    Conversion                     shift and go to state 104
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    Operand                        shift and go to state 130
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    epsilon                        shift and go to state 221
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 160
    LiteralType                    shift and go to state 129
    PrimaryExpr                    shift and go to state 121
    ExpressionList                 shift and go to state 223
    ExpressionListTypeOpt          shift and go to state 222
    QualifiedIdent                 shift and go to state 82

state 174

    (128) PrimaryExpr -> PrimaryExpr Selector .

    DOT             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    LSQUARE         reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    COMPARE_OR      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    COMPARE_AND     reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    EQEQ            reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    NOTEQUALS       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    LESSTHAN        reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    GREATERTHAN     reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    LESSTHAN_EQUAL  reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    GREATERTHAN_EQUAL reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    ANDXOR          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    MODULO          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    LSHIFT          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    RSHIFT          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS            reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    MULTIPLY        reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    INCREMENT       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    DECREMENT       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSEQUAL       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSEQUAL      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMESEQUAL      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE_EQUAL    reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    MODEQUAL        reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    ANDEQUAL        reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    OREQUAL         reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    XOREQUAL        reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    ANDXOR_EQUAL    reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    LSHIFT_EQUAL    reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    RSHIFT_EQUAL    reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUALS          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    RSQUARE         reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    RCURL           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    LCURL           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    LEFT_ARROW      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)
    DEFAULT         reduce using rule 128 (PrimaryExpr -> PrimaryExpr Selector .)


state 175

    (132) PrimaryExpr -> PrimaryExpr TypeAssertion .

    DOT             reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSQUARE         reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LPAREN          reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RPAREN          reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMPARE_OR      reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMPARE_AND     reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQEQ            reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    NOTEQUALS       reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESSTHAN        reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GREATERTHAN     reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESSTHAN_EQUAL  reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GREATERTHAN_EQUAL reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR              reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR             reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ANDXOR          reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DIVIDE          reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MODULO          reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSHIFT          reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSHIFT          reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUS            reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUS           reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MULTIPLY        reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND             reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    INCREMENT       reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DECREMENT       reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMMA           reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SEMICOLON       reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUSEQUAL       reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUSEQUAL      reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    TIMESEQUAL      reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DIVIDE_EQUAL    reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MODEQUAL        reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ANDEQUAL        reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OREQUAL         reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOREQUAL        reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ANDXOR_EQUAL    reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSHIFT_EQUAL    reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSHIFT_EQUAL    reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQUALS          reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSQUARE         reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COLON           reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RCURL           reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LCURL           reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LEFT_ARROW      reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DEFAULT         reduce using rule 132 (PrimaryExpr -> PrimaryExpr TypeAssertion .)


state 176

    (133) PrimaryExpr -> PrimaryExpr Arguments .

    DOT             reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSQUARE         reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMPARE_OR      reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMPARE_AND     reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQEQ            reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    NOTEQUALS       reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESSTHAN        reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREATERTHAN     reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    LESSTHAN_EQUAL  reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    GREATERTHAN_EQUAL reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    ANDXOR          reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDE          reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    MODULO          reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSHIFT          reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    RSHIFT          reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUS            reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUS           reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    MULTIPLY        reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    INCREMENT       reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    DECREMENT       reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSEQUAL       reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSEQUAL      reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMESEQUAL      reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDE_EQUAL    reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    MODEQUAL        reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    ANDEQUAL        reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    OREQUAL         reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOREQUAL        reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    ANDXOR_EQUAL    reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSHIFT_EQUAL    reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    RSHIFT_EQUAL    reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQUALS          reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    RSQUARE         reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    RCURL           reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    LCURL           reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEFT_ARROW      reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)
    DEFAULT         reduce using rule 133 (PrimaryExpr -> PrimaryExpr Arguments .)


state 177

    (135) Index -> LSQUARE . Expression RSQUARE
    (136) Slice -> LSQUARE . ExpressionOpt COLON ExpressionOpt RSQUARE
    (137) Slice -> LSQUARE . ExpressionOpt COLON Expression COLON Expression RSQUARE
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (162) ExpressionOpt -> . Expression
    (163) ExpressionOpt -> . epsilon
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (275) epsilon -> .
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    COLON           reduce using rule 275 (epsilon -> .)
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    ExpressionOpt                  shift and go to state 224
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    epsilon                        shift and go to state 225
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 226
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 178

    (134) Selector -> DOT . IDENTIFIER
    (138) TypeAssertion -> DOT . LPAREN Type RPAREN

    IDENTIFIER      shift and go to state 227
    LPAREN          shift and go to state 228


state 179

    (27) ArrayType -> LSQUARE ArrayLength RSQUARE . ElementType
    (29) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    TypeLit                        shift and go to state 59
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    ElementType                    shift and go to state 229
    Type                           shift and go to state 168
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 180

    (100) Operand -> LPAREN Expression . RPAREN
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RPAREN          shift and go to state 230
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 181

    (153) Expression -> Expression ANDXOR . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 231
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 182

    (146) Expression -> Expression NOTEQUALS . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 232
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 183

    (154) Expression -> Expression DIVIDE . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 233
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 184

    (161) Expression -> Expression AND . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 234
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 185

    (152) Expression -> Expression XOR . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 235
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 186

    (143) Expression -> Expression COMPARE_OR . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 236
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 187

    (157) Expression -> Expression RSHIFT . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 237
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 188

    (159) Expression -> Expression MINUS . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 238
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 189

    (145) Expression -> Expression EQEQ . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 239
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 190

    (149) Expression -> Expression LESSTHAN_EQUAL . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 240
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 191

    (158) Expression -> Expression PLUS . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 241
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 192

    (160) Expression -> Expression MULTIPLY . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 242
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 193

    (147) Expression -> Expression LESSTHAN . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 243
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 194

    (148) Expression -> Expression GREATERTHAN . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 244
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 195

    (156) Expression -> Expression LSHIFT . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 245
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 196

    (144) Expression -> Expression COMPARE_AND . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 246
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 197

    (155) Expression -> Expression MODULO . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 247
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 198

    (151) Expression -> Expression OR . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 248
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 199

    (150) Expression -> Expression GREATERTHAN_EQUAL . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 249
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 200

    (171) Conversion -> TYPECAST Type . LPAREN Expression RPAREN

    LPAREN          shift and go to state 250


state 201

    (103) CompositeLit -> LiteralType LiteralValue .

    DOT             reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    LSQUARE         reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    LPAREN          reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    COMPARE_OR      reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    COMPARE_AND     reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    EQEQ            reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    NOTEQUALS       reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    LESSTHAN        reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    GREATERTHAN     reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    LESSTHAN_EQUAL  reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    GREATERTHAN_EQUAL reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    OR              reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    XOR             reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    ANDXOR          reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    DIVIDE          reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    MODULO          reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    LSHIFT          reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    RSHIFT          reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    PLUS            reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    MINUS           reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    MULTIPLY        reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    AND             reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    RSQUARE         reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    COMMA           reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    SEMICOLON       reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    RPAREN          reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    COLON           reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    RCURL           reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    INCREMENT       reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    DECREMENT       reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    PLUSEQUAL       reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    MINUSEQUAL      reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    TIMESEQUAL      reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    DIVIDE_EQUAL    reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    MODEQUAL        reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    ANDEQUAL        reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    OREQUAL         reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    XOREQUAL        reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    ANDXOR_EQUAL    reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    LSHIFT_EQUAL    reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    RSHIFT_EQUAL    reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    EQUALS          reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    LCURL           reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    LEFT_ARROW      reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)
    DEFAULT         reduce using rule 103 (CompositeLit -> LiteralType LiteralValue .)


state 202

    (109) LiteralValue -> LCURL . RCURL
    (110) LiteralValue -> LCURL . ElementList RCURL
    (111) LiteralValue -> LCURL . ElementList COMMA RCURL
    (112) ElementList -> . KeyedElement
    (113) ElementList -> . ElementList COMMA KeyedElement
    (114) KeyedElement -> . Element
    (115) KeyedElement -> . Key COLON Element
    (116) KeyedElement -> . IDENTIFIER COLON Element
    (119) Element -> . Expression
    (120) Element -> . LiteralValue
    (117) Key -> . Expression
    (118) Key -> . LiteralValue
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (109) LiteralValue -> . LCURL RCURL
    (110) LiteralValue -> . LCURL ElementList RCURL
    (111) LiteralValue -> . LCURL ElementList COMMA RCURL
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    RCURL           shift and go to state 252
    IDENTIFIER      shift and go to state 254
    LCURL           shift and go to state 202
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    ElementList                    shift and go to state 251
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    Key                            shift and go to state 253
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    Element                        shift and go to state 255
    LiteralValue                   shift and go to state 256
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 257
    LiteralType                    shift and go to state 129
    KeyedElement                   shift and go to state 258
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 203

    (67) TypeExprListOpt -> TypeOpt EQUALS ExpressionList .

    SEMICOLON       reduce using rule 67 (TypeExprListOpt -> TypeOpt EQUALS ExpressionList .)


state 204

    (26) KeyType -> Type .

    RSQUARE         reduce using rule 26 (KeyType -> Type .)


state 205

    (25) MapType -> MAP LSQUARE KeyType . RSQUARE ElementType

    RSQUARE         shift and go to state 259


state 206

    (30) StructType -> STRUCT LCURL FieldDeclRep . RCURL
    (31) FieldDeclRep -> FieldDeclRep . FieldDecl SEMICOLON
    (33) FieldDecl -> . IdentifierList Type TagOpt
    (69) IdentifierList -> . IDENTIFIER
    (70) IdentifierList -> . IdentifierRep
    (71) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (72) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER

    RCURL           shift and go to state 261
    IDENTIFIER      shift and go to state 35

    FieldDecl                      shift and go to state 260
    IdentifierRep                  shift and go to state 32
    IdentifierList                 shift and go to state 262

state 207

    (32) FieldDeclRep -> epsilon .

    RCURL           reduce using rule 32 (FieldDeclRep -> epsilon .)
    IDENTIFIER      reduce using rule 32 (FieldDeclRep -> epsilon .)


state 208

    (54) StatementList -> StatementRep .
    (55) StatementRep -> StatementRep . Statement SEMICOLON
    (172) Statement -> . Declaration
    (173) Statement -> . LabeledStmt
    (174) Statement -> . SimpleStmt
    (175) Statement -> . ReturnStmt
    (176) Statement -> . BreakStmt
    (177) Statement -> . ContinueStmt
    (178) Statement -> . GotoStmt
    (179) Statement -> . Block
    (180) Statement -> . IfStmt
    (181) Statement -> . SwitchStmt
    (182) Statement -> . ForStmt
    (183) Statement -> . DeferStmt
    (184) Statement -> . SelectStmt
    (185) Statement -> . FallThroughStmt
    (186) Statement -> . GoStmt
    (57) Declaration -> . ConstDecl
    (58) Declaration -> . TypeDecl
    (59) Declaration -> . VarDecl
    (207) LabeledStmt -> . Label COLON Statement
    (202) SimpleStmt -> . epsilon
    (203) SimpleStmt -> . ExpressionStmt
    (204) SimpleStmt -> . IncDecStmt
    (205) SimpleStmt -> . Assignment
    (206) SimpleStmt -> . ShortVarDecl
    (251) ReturnStmt -> . RETURN ExpressionListPureOpt
    (254) BreakStmt -> . BREAK LabelOpt
    (255) ContinueStmt -> . CONTINUE LabelOpt
    (258) GotoStmt -> . GOTO Label
    (53) Block -> . LCURL StatementList RCURL
    (226) IfStmt -> . IF Expression Block ElseOpt
    (230) SwitchStmt -> . ExprSwitchStmt
    (238) ForStmt -> . FOR ConditionBlockOpt Block
    (201) DeferStmt -> . DEFER Expression
    (189) SelectStmt -> . SELECT LCURL CCX RCURL
    (190) SelectStmt -> . SELECT LCURL RCURL
    (187) FallThroughStmt -> . FALLTHROUGH
    (188) GoStmt -> . GO Expression
    (62) ConstDecl -> . CONST ConstSpec
    (63) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (76) TypeDecl -> . TYPE TypeSpec
    (77) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (84) VarDecl -> . VAR VarSpec
    (85) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (208) Label -> . IDENTIFIER
    (275) epsilon -> .
    (209) ExpressionStmt -> . Expression
    (210) IncDecStmt -> . Expression INCREMENT
    (211) IncDecStmt -> . Expression DECREMENT
    (212) Assignment -> . ExpressionList assign_op ExpressionList
    (92) ShortVarDecl -> . IDENTIFIER SHORT_ASSIGNMENT Expression
    (231) ExprSwitchStmt -> . SWITCH SimpleStmt SEMICOLON ExpressionOpt LCURL ExprCaseClauseList RCURL
    (232) ExprSwitchStmt -> . SWITCH ExpressionOpt LCURL ExprCaseClauseList RCURL
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (73) ExpressionList -> . Expression ExpressionRep
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    RCURL           reduce using rule 54 (StatementList -> StatementRep .)
    CASE            reduce using rule 54 (StatementList -> StatementRep .)
    DEFAULT         reduce using rule 54 (StatementList -> StatementRep .)
    RETURN          shift and go to state 273
    BREAK           shift and go to state 293
    CONTINUE        shift and go to state 285
    GOTO            shift and go to state 271
    LCURL           shift and go to state 146
    IF              shift and go to state 299
    FOR             shift and go to state 280
    DEFER           shift and go to state 268
    SELECT          shift and go to state 297
    FALLTHROUGH     shift and go to state 286
    GO              shift and go to state 264
    CONST           shift and go to state 14
    TYPE            shift and go to state 283
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 289
    SEMICOLON       reduce using rule 275 (epsilon -> .)
    SWITCH          shift and go to state 287
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72

    UnaryOp                        shift and go to state 105
    ContinueStmt                   shift and go to state 263
    Conversion                     shift and go to state 104
    SimpleStmt                     shift and go to state 294
    Label                          shift and go to state 274
    ExpressionStmt                 shift and go to state 265
    ForStmt                        shift and go to state 295
    ExprSwitchStmt                 shift and go to state 275
    Statement                      shift and go to state 266
    SelectStmt                     shift and go to state 296
    IfStmt                         shift and go to state 278
    GoStmt                         shift and go to state 276
    FallThroughStmt                shift and go to state 267
    OperandName                    shift and go to state 111
    ArrayType                      shift and go to state 106
    TypeToken                      shift and go to state 58
    Assignment                     shift and go to state 269
    MapType                        shift and go to state 123
    TypeName                       shift and go to state 113
    IncDecStmt                     shift and go to state 270
    CompositeLit                   shift and go to state 116
    Declaration                    shift and go to state 288
    DeferStmt                      shift and go to state 277
    GotoStmt                       shift and go to state 279
    StructType                     shift and go to state 133
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 272
    epsilon                        shift and go to state 290
    UnaryExpr                      shift and go to state 120
    Operand                        shift and go to state 130
    ExpressionList                 shift and go to state 291
    Expression                     shift and go to state 292
    ShortVarDecl                   shift and go to state 298
    Block                          shift and go to state 282
    LiteralType                    shift and go to state 129
    BreakStmt                      shift and go to state 300
    SwitchStmt                     shift and go to state 284
    Literal                        shift and go to state 125
    VarDecl                        shift and go to state 22
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 121
    ReturnStmt                     shift and go to state 281
    SliceType                      shift and go to state 118
    ConstDecl                      shift and go to state 18
    QualifiedIdent                 shift and go to state 82

state 209

    (56) StatementRep -> epsilon .

    RETURN          reduce using rule 56 (StatementRep -> epsilon .)
    BREAK           reduce using rule 56 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 56 (StatementRep -> epsilon .)
    GOTO            reduce using rule 56 (StatementRep -> epsilon .)
    LCURL           reduce using rule 56 (StatementRep -> epsilon .)
    IF              reduce using rule 56 (StatementRep -> epsilon .)
    FOR             reduce using rule 56 (StatementRep -> epsilon .)
    DEFER           reduce using rule 56 (StatementRep -> epsilon .)
    SELECT          reduce using rule 56 (StatementRep -> epsilon .)
    FALLTHROUGH     reduce using rule 56 (StatementRep -> epsilon .)
    GO              reduce using rule 56 (StatementRep -> epsilon .)
    CONST           reduce using rule 56 (StatementRep -> epsilon .)
    TYPE            reduce using rule 56 (StatementRep -> epsilon .)
    VAR             reduce using rule 56 (StatementRep -> epsilon .)
    IDENTIFIER      reduce using rule 56 (StatementRep -> epsilon .)
    SWITCH          reduce using rule 56 (StatementRep -> epsilon .)
    NOT             reduce using rule 56 (StatementRep -> epsilon .)
    PLUS            reduce using rule 56 (StatementRep -> epsilon .)
    MINUS           reduce using rule 56 (StatementRep -> epsilon .)
    MULTIPLY        reduce using rule 56 (StatementRep -> epsilon .)
    AND             reduce using rule 56 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 56 (StatementRep -> epsilon .)
    TYPECAST        reduce using rule 56 (StatementRep -> epsilon .)
    INT_LIT         reduce using rule 56 (StatementRep -> epsilon .)
    FLOAT_LIT       reduce using rule 56 (StatementRep -> epsilon .)
    IMAGINARY_LIT   reduce using rule 56 (StatementRep -> epsilon .)
    STRING_LIT      reduce using rule 56 (StatementRep -> epsilon .)
    STRUCT          reduce using rule 56 (StatementRep -> epsilon .)
    LSQUARE         reduce using rule 56 (StatementRep -> epsilon .)
    MAP             reduce using rule 56 (StatementRep -> epsilon .)
    INT_T           reduce using rule 56 (StatementRep -> epsilon .)
    INT             reduce using rule 56 (StatementRep -> epsilon .)
    FLOAT           reduce using rule 56 (StatementRep -> epsilon .)
    BOOL            reduce using rule 56 (StatementRep -> epsilon .)
    COMPLEX         reduce using rule 56 (StatementRep -> epsilon .)
    BOOL_T          reduce using rule 56 (StatementRep -> epsilon .)
    COMPLEX_T       reduce using rule 56 (StatementRep -> epsilon .)
    STRING          reduce using rule 56 (StatementRep -> epsilon .)
    FLOAT_T         reduce using rule 56 (StatementRep -> epsilon .)
    STRING_T        reduce using rule 56 (StatementRep -> epsilon .)
    SEMICOLON       reduce using rule 56 (StatementRep -> epsilon .)
    RCURL           reduce using rule 56 (StatementRep -> epsilon .)
    CASE            reduce using rule 56 (StatementRep -> epsilon .)
    DEFAULT         reduce using rule 56 (StatementRep -> epsilon .)


state 210

    (53) Block -> LCURL StatementList . RCURL

    RCURL           shift and go to state 301


state 211

    (50) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 50 (ParameterDecl -> IdentifierList Type .)
    COMMA           reduce using rule 50 (ParameterDecl -> IdentifierList Type .)


state 212

    (51) ParameterDecl -> IdentifierList DOTS . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    Type                           shift and go to state 302
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    TypeLit                        shift and go to state 59
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 213

    (45) Parameters -> LPAREN ParametersList COMMA . RPAREN
    (48) ParametersList -> ParametersList COMMA . ParameterDecl
    (49) ParameterDecl -> . DOTS Type
    (50) ParameterDecl -> . IdentifierList Type
    (51) ParameterDecl -> . IdentifierList DOTS Type
    (52) ParameterDecl -> . Type
    (69) IdentifierList -> . IDENTIFIER
    (70) IdentifierList -> . IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (71) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (72) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    RPAREN          shift and go to state 303
    DOTS            shift and go to state 153
    IDENTIFIER      shift and go to state 151
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    ParameterDecl                  shift and go to state 304
    ArrayType                      shift and go to state 54
    IdentifierRep                  shift and go to state 32
    TypeName                       shift and go to state 61
    TypeLit                        shift and go to state 59
    MapType                        shift and go to state 69
    IdentifierList                 shift and go to state 147
    PointerType                    shift and go to state 79
    Type                           shift and go to state 148
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 214

    (44) Parameters -> LPAREN ParametersList RPAREN .

    LPAREN          reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    INT_T           reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    INT             reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    FLOAT           reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    BOOL            reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    COMPLEX         reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    BOOL_T          reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    COMPLEX_T       reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    STRING          reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    FLOAT_T         reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    STRING_T        reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    TYPE            reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    IDENTIFIER      reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    LSQUARE         reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    STRUCT          reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    MULTIPLY        reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    MAP             reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    LCURL           reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)
    SEMICOLON       reduce using rule 44 (Parameters -> LPAREN ParametersList RPAREN .)


state 215

    (49) ParameterDecl -> DOTS Type .

    RPAREN          reduce using rule 49 (ParameterDecl -> DOTS Type .)
    COMMA           reduce using rule 49 (ParameterDecl -> DOTS Type .)


state 216

    (86) VarSpecRep -> VarSpecRep VarSpec SEMICOLON .

    RPAREN          reduce using rule 86 (VarSpecRep -> VarSpecRep VarSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 86 (VarSpecRep -> VarSpecRep VarSpec SEMICOLON .)


state 217

    (90) ExpressionListOpt -> EQUALS ExpressionList .

    SEMICOLON       reduce using rule 90 (ExpressionListOpt -> EQUALS ExpressionList .)


state 218

    (73) ExpressionList -> Expression ExpressionRep .
    (74) ExpressionRep -> ExpressionRep . COMMA Expression

    PLUSEQUAL       reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    MINUSEQUAL      reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    TIMESEQUAL      reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    DIVIDE_EQUAL    reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    MODEQUAL        reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    ANDEQUAL        reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    OREQUAL         reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    XOREQUAL        reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    ANDXOR_EQUAL    reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    LSHIFT_EQUAL    reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    RSHIFT_EQUAL    reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    EQUALS          reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    SEMICOLON       reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    LCURL           reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    COLON           reduce using rule 73 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 305


state 219

    (75) ExpressionRep -> epsilon .

    COMMA           reduce using rule 75 (ExpressionRep -> epsilon .)
    SEMICOLON       reduce using rule 75 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 75 (ExpressionRep -> epsilon .)
    LCURL           reduce using rule 75 (ExpressionRep -> epsilon .)
    COLON           reduce using rule 75 (ExpressionRep -> epsilon .)
    EQUALS          reduce using rule 75 (ExpressionRep -> epsilon .)
    PLUSEQUAL       reduce using rule 75 (ExpressionRep -> epsilon .)
    MINUSEQUAL      reduce using rule 75 (ExpressionRep -> epsilon .)
    TIMESEQUAL      reduce using rule 75 (ExpressionRep -> epsilon .)
    DIVIDE_EQUAL    reduce using rule 75 (ExpressionRep -> epsilon .)
    MODEQUAL        reduce using rule 75 (ExpressionRep -> epsilon .)
    ANDEQUAL        reduce using rule 75 (ExpressionRep -> epsilon .)
    OREQUAL         reduce using rule 75 (ExpressionRep -> epsilon .)
    XOREQUAL        reduce using rule 75 (ExpressionRep -> epsilon .)
    ANDXOR_EQUAL    reduce using rule 75 (ExpressionRep -> epsilon .)
    LSHIFT_EQUAL    reduce using rule 75 (ExpressionRep -> epsilon .)
    RSHIFT_EQUAL    reduce using rule 75 (ExpressionRep -> epsilon .)


state 220

    (78) TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .

    RPAREN          reduce using rule 78 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 78 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .)


state 221

    (141) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 141 (ExpressionListTypeOpt -> epsilon .)


state 222

    (139) Arguments -> LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 306


state 223

    (140) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 140 (ExpressionListTypeOpt -> ExpressionList .)


state 224

    (136) Slice -> LSQUARE ExpressionOpt . COLON ExpressionOpt RSQUARE
    (137) Slice -> LSQUARE ExpressionOpt . COLON Expression COLON Expression RSQUARE

    COLON           shift and go to state 307


state 225

    (163) ExpressionOpt -> epsilon .

    LCURL           reduce using rule 163 (ExpressionOpt -> epsilon .)
    RSQUARE         reduce using rule 163 (ExpressionOpt -> epsilon .)
    COLON           reduce using rule 163 (ExpressionOpt -> epsilon .)


state 226

    (135) Index -> LSQUARE Expression . RSQUARE
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression
    (162) ExpressionOpt -> Expression .

    RSQUARE         shift and go to state 308
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184
    COLON           reduce using rule 162 (ExpressionOpt -> Expression .)


state 227

    (134) Selector -> DOT IDENTIFIER .

    DOT             reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    LSQUARE         reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    LPAREN          reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    COMPARE_OR      reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    COMPARE_AND     reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    EQEQ            reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    NOTEQUALS       reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    LESSTHAN        reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    GREATERTHAN     reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    LESSTHAN_EQUAL  reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    GREATERTHAN_EQUAL reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    OR              reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    XOR             reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    ANDXOR          reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    DIVIDE          reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    MODULO          reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    LSHIFT          reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    RSHIFT          reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    PLUS            reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    MINUS           reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    AND             reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    RSQUARE         reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    COMMA           reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    RPAREN          reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    COLON           reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    RCURL           reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    INCREMENT       reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    DECREMENT       reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    PLUSEQUAL       reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    MINUSEQUAL      reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    TIMESEQUAL      reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    DIVIDE_EQUAL    reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    MODEQUAL        reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    ANDEQUAL        reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    OREQUAL         reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    XOREQUAL        reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    ANDXOR_EQUAL    reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    LSHIFT_EQUAL    reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    RSHIFT_EQUAL    reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    EQUALS          reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    LCURL           reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    LEFT_ARROW      reduce using rule 134 (Selector -> DOT IDENTIFIER .)
    DEFAULT         reduce using rule 134 (Selector -> DOT IDENTIFIER .)


state 228

    (138) TypeAssertion -> DOT LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    Type                           shift and go to state 309
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    TypeLit                        shift and go to state 59
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 229

    (27) ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .

    LCURL           reduce using rule 27 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    EQUALS          reduce using rule 27 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    SEMICOLON       reduce using rule 27 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    RPAREN          reduce using rule 27 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    COMMA           reduce using rule 27 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    RSQUARE         reduce using rule 27 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    LPAREN          reduce using rule 27 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    STRING_LIT      reduce using rule 27 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)


state 230

    (100) Operand -> LPAREN Expression RPAREN .

    DOT             reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    LSQUARE         reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    INCREMENT       reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    DECREMENT       reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    COMPARE_OR      reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    COMPARE_AND     reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    NOTEQUALS       reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    LESSTHAN        reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    GREATERTHAN     reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    LESSTHAN_EQUAL  reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    GREATERTHAN_EQUAL reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    ANDXOR          reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    MODULO          reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    MULTIPLY        reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    AND             reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    LCURL           reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    PLUSEQUAL       reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    MINUSEQUAL      reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    TIMESEQUAL      reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE_EQUAL    reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    MODEQUAL        reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    ANDEQUAL        reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    OREQUAL         reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    XOREQUAL        reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    ANDXOR_EQUAL    reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    LSHIFT_EQUAL    reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    RSHIFT_EQUAL    reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    RCURL           reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    LEFT_ARROW      reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)
    DEFAULT         reduce using rule 100 (Operand -> LPAREN Expression RPAREN .)


state 231

    (153) Expression -> Expression ANDXOR Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    COMPARE_OR      reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    COMPARE_AND     reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    EQEQ            reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    NOTEQUALS       reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    OR              reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    XOR             reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    ANDXOR          reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    AND             reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    COMMA           reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    SEMICOLON       reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    RPAREN          reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    COLON           reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    RCURL           reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    INCREMENT       reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    DECREMENT       reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    PLUSEQUAL       reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    MINUSEQUAL      reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    TIMESEQUAL      reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    DIVIDE_EQUAL    reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    MODEQUAL        reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    ANDEQUAL        reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    OREQUAL         reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    XOREQUAL        reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    ANDXOR_EQUAL    reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    LSHIFT_EQUAL    reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    RSHIFT_EQUAL    reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    EQUALS          reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    LCURL           reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    LEFT_ARROW      reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    DEFAULT         reduce using rule 153 (Expression -> Expression ANDXOR Expression .)
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192

  ! LESSTHAN        [ reduce using rule 153 (Expression -> Expression ANDXOR Expression .) ]
  ! GREATERTHAN     [ reduce using rule 153 (Expression -> Expression ANDXOR Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 153 (Expression -> Expression ANDXOR Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 153 (Expression -> Expression ANDXOR Expression .) ]
  ! DIVIDE          [ reduce using rule 153 (Expression -> Expression ANDXOR Expression .) ]
  ! MODULO          [ reduce using rule 153 (Expression -> Expression ANDXOR Expression .) ]
  ! LSHIFT          [ reduce using rule 153 (Expression -> Expression ANDXOR Expression .) ]
  ! RSHIFT          [ reduce using rule 153 (Expression -> Expression ANDXOR Expression .) ]
  ! PLUS            [ reduce using rule 153 (Expression -> Expression ANDXOR Expression .) ]
  ! MINUS           [ reduce using rule 153 (Expression -> Expression ANDXOR Expression .) ]
  ! MULTIPLY        [ reduce using rule 153 (Expression -> Expression ANDXOR Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! AND             [ shift and go to state 184 ]


state 232

    (146) Expression -> Expression NOTEQUALS Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    COMPARE_OR      reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    COMPARE_AND     reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    EQEQ            reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    NOTEQUALS       reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    COMMA           reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    SEMICOLON       reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    RPAREN          reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    COLON           reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    RCURL           reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    INCREMENT       reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    DECREMENT       reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    PLUSEQUAL       reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    MINUSEQUAL      reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    TIMESEQUAL      reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    DIVIDE_EQUAL    reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    MODEQUAL        reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    ANDEQUAL        reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    OREQUAL         reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    XOREQUAL        reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    ANDXOR_EQUAL    reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    LSHIFT_EQUAL    reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    RSHIFT_EQUAL    reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    EQUALS          reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    LCURL           reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    LEFT_ARROW      reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    DEFAULT         reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .)
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184

  ! LESSTHAN        [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! GREATERTHAN     [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! OR              [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! XOR             [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! ANDXOR          [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! DIVIDE          [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! MODULO          [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! LSHIFT          [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! RSHIFT          [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! PLUS            [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! MINUS           [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! MULTIPLY        [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! AND             [ reduce using rule 146 (Expression -> Expression NOTEQUALS Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]


state 233

    (154) Expression -> Expression DIVIDE Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    COMPARE_OR      reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    COMPARE_AND     reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    EQEQ            reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    NOTEQUALS       reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    LESSTHAN        reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    GREATERTHAN     reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    LESSTHAN_EQUAL  reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    GREATERTHAN_EQUAL reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    OR              reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    XOR             reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    ANDXOR          reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    DIVIDE          reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    MODULO          reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    LSHIFT          reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    RSHIFT          reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    PLUS            reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    MINUS           reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    MULTIPLY        reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    AND             reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    COMMA           reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    SEMICOLON       reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    RPAREN          reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    COLON           reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    RCURL           reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    INCREMENT       reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    DECREMENT       reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    PLUSEQUAL       reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    MINUSEQUAL      reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    TIMESEQUAL      reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    DIVIDE_EQUAL    reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    MODEQUAL        reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    ANDEQUAL        reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    OREQUAL         reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    XOREQUAL        reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    ANDXOR_EQUAL    reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    LSHIFT_EQUAL    reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    RSHIFT_EQUAL    reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    EQUALS          reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    LCURL           reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    LEFT_ARROW      reduce using rule 154 (Expression -> Expression DIVIDE Expression .)
    DEFAULT         reduce using rule 154 (Expression -> Expression DIVIDE Expression .)

  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! LESSTHAN        [ shift and go to state 193 ]
  ! GREATERTHAN     [ shift and go to state 194 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 190 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 199 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! DIVIDE          [ shift and go to state 183 ]
  ! MODULO          [ shift and go to state 197 ]
  ! LSHIFT          [ shift and go to state 195 ]
  ! RSHIFT          [ shift and go to state 187 ]
  ! PLUS            [ shift and go to state 191 ]
  ! MINUS           [ shift and go to state 188 ]
  ! MULTIPLY        [ shift and go to state 192 ]
  ! AND             [ shift and go to state 184 ]


state 234

    (161) Expression -> Expression AND Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 161 (Expression -> Expression AND Expression .)
    COMPARE_OR      reduce using rule 161 (Expression -> Expression AND Expression .)
    COMPARE_AND     reduce using rule 161 (Expression -> Expression AND Expression .)
    EQEQ            reduce using rule 161 (Expression -> Expression AND Expression .)
    NOTEQUALS       reduce using rule 161 (Expression -> Expression AND Expression .)
    OR              reduce using rule 161 (Expression -> Expression AND Expression .)
    XOR             reduce using rule 161 (Expression -> Expression AND Expression .)
    ANDXOR          reduce using rule 161 (Expression -> Expression AND Expression .)
    AND             reduce using rule 161 (Expression -> Expression AND Expression .)
    COMMA           reduce using rule 161 (Expression -> Expression AND Expression .)
    SEMICOLON       reduce using rule 161 (Expression -> Expression AND Expression .)
    RPAREN          reduce using rule 161 (Expression -> Expression AND Expression .)
    COLON           reduce using rule 161 (Expression -> Expression AND Expression .)
    RCURL           reduce using rule 161 (Expression -> Expression AND Expression .)
    INCREMENT       reduce using rule 161 (Expression -> Expression AND Expression .)
    DECREMENT       reduce using rule 161 (Expression -> Expression AND Expression .)
    PLUSEQUAL       reduce using rule 161 (Expression -> Expression AND Expression .)
    MINUSEQUAL      reduce using rule 161 (Expression -> Expression AND Expression .)
    TIMESEQUAL      reduce using rule 161 (Expression -> Expression AND Expression .)
    DIVIDE_EQUAL    reduce using rule 161 (Expression -> Expression AND Expression .)
    MODEQUAL        reduce using rule 161 (Expression -> Expression AND Expression .)
    ANDEQUAL        reduce using rule 161 (Expression -> Expression AND Expression .)
    OREQUAL         reduce using rule 161 (Expression -> Expression AND Expression .)
    XOREQUAL        reduce using rule 161 (Expression -> Expression AND Expression .)
    ANDXOR_EQUAL    reduce using rule 161 (Expression -> Expression AND Expression .)
    LSHIFT_EQUAL    reduce using rule 161 (Expression -> Expression AND Expression .)
    RSHIFT_EQUAL    reduce using rule 161 (Expression -> Expression AND Expression .)
    EQUALS          reduce using rule 161 (Expression -> Expression AND Expression .)
    LCURL           reduce using rule 161 (Expression -> Expression AND Expression .)
    LEFT_ARROW      reduce using rule 161 (Expression -> Expression AND Expression .)
    DEFAULT         reduce using rule 161 (Expression -> Expression AND Expression .)
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192

  ! LESSTHAN        [ reduce using rule 161 (Expression -> Expression AND Expression .) ]
  ! GREATERTHAN     [ reduce using rule 161 (Expression -> Expression AND Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 161 (Expression -> Expression AND Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 161 (Expression -> Expression AND Expression .) ]
  ! DIVIDE          [ reduce using rule 161 (Expression -> Expression AND Expression .) ]
  ! MODULO          [ reduce using rule 161 (Expression -> Expression AND Expression .) ]
  ! LSHIFT          [ reduce using rule 161 (Expression -> Expression AND Expression .) ]
  ! RSHIFT          [ reduce using rule 161 (Expression -> Expression AND Expression .) ]
  ! PLUS            [ reduce using rule 161 (Expression -> Expression AND Expression .) ]
  ! MINUS           [ reduce using rule 161 (Expression -> Expression AND Expression .) ]
  ! MULTIPLY        [ reduce using rule 161 (Expression -> Expression AND Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! AND             [ shift and go to state 184 ]


state 235

    (152) Expression -> Expression XOR Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 152 (Expression -> Expression XOR Expression .)
    COMPARE_OR      reduce using rule 152 (Expression -> Expression XOR Expression .)
    COMPARE_AND     reduce using rule 152 (Expression -> Expression XOR Expression .)
    EQEQ            reduce using rule 152 (Expression -> Expression XOR Expression .)
    NOTEQUALS       reduce using rule 152 (Expression -> Expression XOR Expression .)
    OR              reduce using rule 152 (Expression -> Expression XOR Expression .)
    XOR             reduce using rule 152 (Expression -> Expression XOR Expression .)
    COMMA           reduce using rule 152 (Expression -> Expression XOR Expression .)
    SEMICOLON       reduce using rule 152 (Expression -> Expression XOR Expression .)
    RPAREN          reduce using rule 152 (Expression -> Expression XOR Expression .)
    COLON           reduce using rule 152 (Expression -> Expression XOR Expression .)
    RCURL           reduce using rule 152 (Expression -> Expression XOR Expression .)
    INCREMENT       reduce using rule 152 (Expression -> Expression XOR Expression .)
    DECREMENT       reduce using rule 152 (Expression -> Expression XOR Expression .)
    PLUSEQUAL       reduce using rule 152 (Expression -> Expression XOR Expression .)
    MINUSEQUAL      reduce using rule 152 (Expression -> Expression XOR Expression .)
    TIMESEQUAL      reduce using rule 152 (Expression -> Expression XOR Expression .)
    DIVIDE_EQUAL    reduce using rule 152 (Expression -> Expression XOR Expression .)
    MODEQUAL        reduce using rule 152 (Expression -> Expression XOR Expression .)
    ANDEQUAL        reduce using rule 152 (Expression -> Expression XOR Expression .)
    OREQUAL         reduce using rule 152 (Expression -> Expression XOR Expression .)
    XOREQUAL        reduce using rule 152 (Expression -> Expression XOR Expression .)
    ANDXOR_EQUAL    reduce using rule 152 (Expression -> Expression XOR Expression .)
    LSHIFT_EQUAL    reduce using rule 152 (Expression -> Expression XOR Expression .)
    RSHIFT_EQUAL    reduce using rule 152 (Expression -> Expression XOR Expression .)
    EQUALS          reduce using rule 152 (Expression -> Expression XOR Expression .)
    LCURL           reduce using rule 152 (Expression -> Expression XOR Expression .)
    LEFT_ARROW      reduce using rule 152 (Expression -> Expression XOR Expression .)
    DEFAULT         reduce using rule 152 (Expression -> Expression XOR Expression .)
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184

  ! LESSTHAN        [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! GREATERTHAN     [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! ANDXOR          [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! DIVIDE          [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! MODULO          [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! LSHIFT          [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! RSHIFT          [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! PLUS            [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! MINUS           [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! MULTIPLY        [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! AND             [ reduce using rule 152 (Expression -> Expression XOR Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]


state 236

    (143) Expression -> Expression COMPARE_OR Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    COMPARE_OR      reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    COMMA           reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    SEMICOLON       reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    RPAREN          reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    COLON           reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    RCURL           reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    INCREMENT       reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    DECREMENT       reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    PLUSEQUAL       reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    MINUSEQUAL      reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    TIMESEQUAL      reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    DIVIDE_EQUAL    reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    MODEQUAL        reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    ANDEQUAL        reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    OREQUAL         reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    XOREQUAL        reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    ANDXOR_EQUAL    reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    LSHIFT_EQUAL    reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    RSHIFT_EQUAL    reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    EQUALS          reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    LCURL           reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    LEFT_ARROW      reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    DEFAULT         reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .)
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184

  ! COMPARE_AND     [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! EQEQ            [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! NOTEQUALS       [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! LESSTHAN        [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! GREATERTHAN     [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! OR              [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! XOR             [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! ANDXOR          [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! DIVIDE          [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! MODULO          [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! LSHIFT          [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! RSHIFT          [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! PLUS            [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! MINUS           [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! MULTIPLY        [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! AND             [ reduce using rule 143 (Expression -> Expression COMPARE_OR Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]


state 237

    (157) Expression -> Expression RSHIFT Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    COMPARE_OR      reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    COMPARE_AND     reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    EQEQ            reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    NOTEQUALS       reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    LESSTHAN        reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    GREATERTHAN     reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    LESSTHAN_EQUAL  reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    GREATERTHAN_EQUAL reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    OR              reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    XOR             reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    ANDXOR          reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    LSHIFT          reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    RSHIFT          reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    PLUS            reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    MINUS           reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    AND             reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    COMMA           reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    SEMICOLON       reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    RPAREN          reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    COLON           reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    RCURL           reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    INCREMENT       reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    DECREMENT       reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    PLUSEQUAL       reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    MINUSEQUAL      reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    TIMESEQUAL      reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    DIVIDE_EQUAL    reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    MODEQUAL        reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    ANDEQUAL        reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    OREQUAL         reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    XOREQUAL        reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    ANDXOR_EQUAL    reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    LSHIFT_EQUAL    reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    RSHIFT_EQUAL    reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    EQUALS          reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    LCURL           reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    LEFT_ARROW      reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    DEFAULT         reduce using rule 157 (Expression -> Expression RSHIFT Expression .)
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    MULTIPLY        shift and go to state 192

  ! DIVIDE          [ reduce using rule 157 (Expression -> Expression RSHIFT Expression .) ]
  ! MODULO          [ reduce using rule 157 (Expression -> Expression RSHIFT Expression .) ]
  ! MULTIPLY        [ reduce using rule 157 (Expression -> Expression RSHIFT Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! LESSTHAN        [ shift and go to state 193 ]
  ! GREATERTHAN     [ shift and go to state 194 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 190 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 199 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! LSHIFT          [ shift and go to state 195 ]
  ! RSHIFT          [ shift and go to state 187 ]
  ! PLUS            [ shift and go to state 191 ]
  ! MINUS           [ shift and go to state 188 ]
  ! AND             [ shift and go to state 184 ]


state 238

    (159) Expression -> Expression MINUS Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 159 (Expression -> Expression MINUS Expression .)
    COMPARE_OR      reduce using rule 159 (Expression -> Expression MINUS Expression .)
    COMPARE_AND     reduce using rule 159 (Expression -> Expression MINUS Expression .)
    EQEQ            reduce using rule 159 (Expression -> Expression MINUS Expression .)
    NOTEQUALS       reduce using rule 159 (Expression -> Expression MINUS Expression .)
    LESSTHAN        reduce using rule 159 (Expression -> Expression MINUS Expression .)
    GREATERTHAN     reduce using rule 159 (Expression -> Expression MINUS Expression .)
    LESSTHAN_EQUAL  reduce using rule 159 (Expression -> Expression MINUS Expression .)
    GREATERTHAN_EQUAL reduce using rule 159 (Expression -> Expression MINUS Expression .)
    OR              reduce using rule 159 (Expression -> Expression MINUS Expression .)
    XOR             reduce using rule 159 (Expression -> Expression MINUS Expression .)
    ANDXOR          reduce using rule 159 (Expression -> Expression MINUS Expression .)
    PLUS            reduce using rule 159 (Expression -> Expression MINUS Expression .)
    MINUS           reduce using rule 159 (Expression -> Expression MINUS Expression .)
    AND             reduce using rule 159 (Expression -> Expression MINUS Expression .)
    COMMA           reduce using rule 159 (Expression -> Expression MINUS Expression .)
    SEMICOLON       reduce using rule 159 (Expression -> Expression MINUS Expression .)
    RPAREN          reduce using rule 159 (Expression -> Expression MINUS Expression .)
    COLON           reduce using rule 159 (Expression -> Expression MINUS Expression .)
    RCURL           reduce using rule 159 (Expression -> Expression MINUS Expression .)
    INCREMENT       reduce using rule 159 (Expression -> Expression MINUS Expression .)
    DECREMENT       reduce using rule 159 (Expression -> Expression MINUS Expression .)
    PLUSEQUAL       reduce using rule 159 (Expression -> Expression MINUS Expression .)
    MINUSEQUAL      reduce using rule 159 (Expression -> Expression MINUS Expression .)
    TIMESEQUAL      reduce using rule 159 (Expression -> Expression MINUS Expression .)
    DIVIDE_EQUAL    reduce using rule 159 (Expression -> Expression MINUS Expression .)
    MODEQUAL        reduce using rule 159 (Expression -> Expression MINUS Expression .)
    ANDEQUAL        reduce using rule 159 (Expression -> Expression MINUS Expression .)
    OREQUAL         reduce using rule 159 (Expression -> Expression MINUS Expression .)
    XOREQUAL        reduce using rule 159 (Expression -> Expression MINUS Expression .)
    ANDXOR_EQUAL    reduce using rule 159 (Expression -> Expression MINUS Expression .)
    LSHIFT_EQUAL    reduce using rule 159 (Expression -> Expression MINUS Expression .)
    RSHIFT_EQUAL    reduce using rule 159 (Expression -> Expression MINUS Expression .)
    EQUALS          reduce using rule 159 (Expression -> Expression MINUS Expression .)
    LCURL           reduce using rule 159 (Expression -> Expression MINUS Expression .)
    LEFT_ARROW      reduce using rule 159 (Expression -> Expression MINUS Expression .)
    DEFAULT         reduce using rule 159 (Expression -> Expression MINUS Expression .)
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    MULTIPLY        shift and go to state 192

  ! DIVIDE          [ reduce using rule 159 (Expression -> Expression MINUS Expression .) ]
  ! MODULO          [ reduce using rule 159 (Expression -> Expression MINUS Expression .) ]
  ! LSHIFT          [ reduce using rule 159 (Expression -> Expression MINUS Expression .) ]
  ! RSHIFT          [ reduce using rule 159 (Expression -> Expression MINUS Expression .) ]
  ! MULTIPLY        [ reduce using rule 159 (Expression -> Expression MINUS Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! LESSTHAN        [ shift and go to state 193 ]
  ! GREATERTHAN     [ shift and go to state 194 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 190 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 199 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! PLUS            [ shift and go to state 191 ]
  ! MINUS           [ shift and go to state 188 ]
  ! AND             [ shift and go to state 184 ]


state 239

    (145) Expression -> Expression EQEQ Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    COMPARE_OR      reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    COMPARE_AND     reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    EQEQ            reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    NOTEQUALS       reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    COMMA           reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    SEMICOLON       reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    RPAREN          reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    COLON           reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    RCURL           reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    INCREMENT       reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    DECREMENT       reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    PLUSEQUAL       reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    MINUSEQUAL      reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    TIMESEQUAL      reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    DIVIDE_EQUAL    reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    MODEQUAL        reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    ANDEQUAL        reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    OREQUAL         reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    XOREQUAL        reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    ANDXOR_EQUAL    reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    LSHIFT_EQUAL    reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    RSHIFT_EQUAL    reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    EQUALS          reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    LCURL           reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    LEFT_ARROW      reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    DEFAULT         reduce using rule 145 (Expression -> Expression EQEQ Expression .)
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184

  ! LESSTHAN        [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! GREATERTHAN     [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! OR              [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! XOR             [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! ANDXOR          [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! MODULO          [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! LSHIFT          [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! RSHIFT          [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! PLUS            [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! MINUS           [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! MULTIPLY        [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! AND             [ reduce using rule 145 (Expression -> Expression EQEQ Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]


state 240

    (149) Expression -> Expression LESSTHAN_EQUAL Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    COMPARE_OR      reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    COMPARE_AND     reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    EQEQ            reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    NOTEQUALS       reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    LESSTHAN        reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    GREATERTHAN     reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    LESSTHAN_EQUAL  reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    GREATERTHAN_EQUAL reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    OR              reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    XOR             reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    ANDXOR          reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    AND             reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    COMMA           reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    SEMICOLON       reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    RPAREN          reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    COLON           reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    RCURL           reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    INCREMENT       reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    DECREMENT       reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    PLUSEQUAL       reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    MINUSEQUAL      reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    TIMESEQUAL      reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    DIVIDE_EQUAL    reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    MODEQUAL        reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    ANDEQUAL        reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    OREQUAL         reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    XOREQUAL        reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    ANDXOR_EQUAL    reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    LSHIFT_EQUAL    reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    RSHIFT_EQUAL    reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    EQUALS          reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    LCURL           reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    LEFT_ARROW      reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    DEFAULT         reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192

  ! DIVIDE          [ reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! MODULO          [ reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! LSHIFT          [ reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! RSHIFT          [ reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! PLUS            [ reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! MINUS           [ reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! MULTIPLY        [ reduce using rule 149 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! LESSTHAN        [ shift and go to state 193 ]
  ! GREATERTHAN     [ shift and go to state 194 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 190 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 199 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! AND             [ shift and go to state 184 ]


state 241

    (158) Expression -> Expression PLUS Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 158 (Expression -> Expression PLUS Expression .)
    COMPARE_OR      reduce using rule 158 (Expression -> Expression PLUS Expression .)
    COMPARE_AND     reduce using rule 158 (Expression -> Expression PLUS Expression .)
    EQEQ            reduce using rule 158 (Expression -> Expression PLUS Expression .)
    NOTEQUALS       reduce using rule 158 (Expression -> Expression PLUS Expression .)
    LESSTHAN        reduce using rule 158 (Expression -> Expression PLUS Expression .)
    GREATERTHAN     reduce using rule 158 (Expression -> Expression PLUS Expression .)
    LESSTHAN_EQUAL  reduce using rule 158 (Expression -> Expression PLUS Expression .)
    GREATERTHAN_EQUAL reduce using rule 158 (Expression -> Expression PLUS Expression .)
    OR              reduce using rule 158 (Expression -> Expression PLUS Expression .)
    XOR             reduce using rule 158 (Expression -> Expression PLUS Expression .)
    ANDXOR          reduce using rule 158 (Expression -> Expression PLUS Expression .)
    PLUS            reduce using rule 158 (Expression -> Expression PLUS Expression .)
    MINUS           reduce using rule 158 (Expression -> Expression PLUS Expression .)
    AND             reduce using rule 158 (Expression -> Expression PLUS Expression .)
    COMMA           reduce using rule 158 (Expression -> Expression PLUS Expression .)
    SEMICOLON       reduce using rule 158 (Expression -> Expression PLUS Expression .)
    RPAREN          reduce using rule 158 (Expression -> Expression PLUS Expression .)
    COLON           reduce using rule 158 (Expression -> Expression PLUS Expression .)
    RCURL           reduce using rule 158 (Expression -> Expression PLUS Expression .)
    INCREMENT       reduce using rule 158 (Expression -> Expression PLUS Expression .)
    DECREMENT       reduce using rule 158 (Expression -> Expression PLUS Expression .)
    PLUSEQUAL       reduce using rule 158 (Expression -> Expression PLUS Expression .)
    MINUSEQUAL      reduce using rule 158 (Expression -> Expression PLUS Expression .)
    TIMESEQUAL      reduce using rule 158 (Expression -> Expression PLUS Expression .)
    DIVIDE_EQUAL    reduce using rule 158 (Expression -> Expression PLUS Expression .)
    MODEQUAL        reduce using rule 158 (Expression -> Expression PLUS Expression .)
    ANDEQUAL        reduce using rule 158 (Expression -> Expression PLUS Expression .)
    OREQUAL         reduce using rule 158 (Expression -> Expression PLUS Expression .)
    XOREQUAL        reduce using rule 158 (Expression -> Expression PLUS Expression .)
    ANDXOR_EQUAL    reduce using rule 158 (Expression -> Expression PLUS Expression .)
    LSHIFT_EQUAL    reduce using rule 158 (Expression -> Expression PLUS Expression .)
    RSHIFT_EQUAL    reduce using rule 158 (Expression -> Expression PLUS Expression .)
    EQUALS          reduce using rule 158 (Expression -> Expression PLUS Expression .)
    LCURL           reduce using rule 158 (Expression -> Expression PLUS Expression .)
    LEFT_ARROW      reduce using rule 158 (Expression -> Expression PLUS Expression .)
    DEFAULT         reduce using rule 158 (Expression -> Expression PLUS Expression .)
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    MULTIPLY        shift and go to state 192

  ! DIVIDE          [ reduce using rule 158 (Expression -> Expression PLUS Expression .) ]
  ! MODULO          [ reduce using rule 158 (Expression -> Expression PLUS Expression .) ]
  ! LSHIFT          [ reduce using rule 158 (Expression -> Expression PLUS Expression .) ]
  ! RSHIFT          [ reduce using rule 158 (Expression -> Expression PLUS Expression .) ]
  ! MULTIPLY        [ reduce using rule 158 (Expression -> Expression PLUS Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! LESSTHAN        [ shift and go to state 193 ]
  ! GREATERTHAN     [ shift and go to state 194 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 190 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 199 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! PLUS            [ shift and go to state 191 ]
  ! MINUS           [ shift and go to state 188 ]
  ! AND             [ shift and go to state 184 ]


state 242

    (160) Expression -> Expression MULTIPLY Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    COMPARE_OR      reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    COMPARE_AND     reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    EQEQ            reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    NOTEQUALS       reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    LESSTHAN        reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    GREATERTHAN     reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    LESSTHAN_EQUAL  reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    GREATERTHAN_EQUAL reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    OR              reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    XOR             reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    ANDXOR          reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    DIVIDE          reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    MODULO          reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    LSHIFT          reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    RSHIFT          reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    PLUS            reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    MINUS           reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    MULTIPLY        reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    AND             reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    COMMA           reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    SEMICOLON       reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    RPAREN          reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    COLON           reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    RCURL           reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    INCREMENT       reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    DECREMENT       reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    PLUSEQUAL       reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    MINUSEQUAL      reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    TIMESEQUAL      reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    DIVIDE_EQUAL    reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    MODEQUAL        reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    ANDEQUAL        reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    OREQUAL         reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    XOREQUAL        reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    ANDXOR_EQUAL    reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    LSHIFT_EQUAL    reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    RSHIFT_EQUAL    reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    EQUALS          reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    LCURL           reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    LEFT_ARROW      reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)
    DEFAULT         reduce using rule 160 (Expression -> Expression MULTIPLY Expression .)

  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! LESSTHAN        [ shift and go to state 193 ]
  ! GREATERTHAN     [ shift and go to state 194 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 190 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 199 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! DIVIDE          [ shift and go to state 183 ]
  ! MODULO          [ shift and go to state 197 ]
  ! LSHIFT          [ shift and go to state 195 ]
  ! RSHIFT          [ shift and go to state 187 ]
  ! PLUS            [ shift and go to state 191 ]
  ! MINUS           [ shift and go to state 188 ]
  ! MULTIPLY        [ shift and go to state 192 ]
  ! AND             [ shift and go to state 184 ]


state 243

    (147) Expression -> Expression LESSTHAN Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    COMPARE_OR      reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    COMPARE_AND     reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    EQEQ            reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    NOTEQUALS       reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    LESSTHAN        reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    GREATERTHAN     reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    LESSTHAN_EQUAL  reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    GREATERTHAN_EQUAL reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    OR              reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    XOR             reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    ANDXOR          reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    AND             reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    COMMA           reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    SEMICOLON       reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    RPAREN          reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    COLON           reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    RCURL           reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    INCREMENT       reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    DECREMENT       reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    PLUSEQUAL       reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    MINUSEQUAL      reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    TIMESEQUAL      reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    DIVIDE_EQUAL    reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    MODEQUAL        reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    ANDEQUAL        reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    OREQUAL         reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    XOREQUAL        reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    ANDXOR_EQUAL    reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    LSHIFT_EQUAL    reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    RSHIFT_EQUAL    reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    EQUALS          reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    LCURL           reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    LEFT_ARROW      reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    DEFAULT         reduce using rule 147 (Expression -> Expression LESSTHAN Expression .)
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192

  ! DIVIDE          [ reduce using rule 147 (Expression -> Expression LESSTHAN Expression .) ]
  ! MODULO          [ reduce using rule 147 (Expression -> Expression LESSTHAN Expression .) ]
  ! LSHIFT          [ reduce using rule 147 (Expression -> Expression LESSTHAN Expression .) ]
  ! RSHIFT          [ reduce using rule 147 (Expression -> Expression LESSTHAN Expression .) ]
  ! PLUS            [ reduce using rule 147 (Expression -> Expression LESSTHAN Expression .) ]
  ! MINUS           [ reduce using rule 147 (Expression -> Expression LESSTHAN Expression .) ]
  ! MULTIPLY        [ reduce using rule 147 (Expression -> Expression LESSTHAN Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! LESSTHAN        [ shift and go to state 193 ]
  ! GREATERTHAN     [ shift and go to state 194 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 190 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 199 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! AND             [ shift and go to state 184 ]


state 244

    (148) Expression -> Expression GREATERTHAN Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    COMPARE_OR      reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    COMPARE_AND     reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    EQEQ            reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    NOTEQUALS       reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    LESSTHAN        reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    GREATERTHAN     reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    LESSTHAN_EQUAL  reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    GREATERTHAN_EQUAL reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    OR              reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    XOR             reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    ANDXOR          reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    AND             reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    COMMA           reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    SEMICOLON       reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    RPAREN          reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    COLON           reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    RCURL           reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    INCREMENT       reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    DECREMENT       reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    PLUSEQUAL       reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    MINUSEQUAL      reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    TIMESEQUAL      reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    DIVIDE_EQUAL    reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    MODEQUAL        reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    ANDEQUAL        reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    OREQUAL         reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    XOREQUAL        reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    ANDXOR_EQUAL    reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    LSHIFT_EQUAL    reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    RSHIFT_EQUAL    reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    EQUALS          reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    LCURL           reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    LEFT_ARROW      reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    DEFAULT         reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .)
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192

  ! DIVIDE          [ reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .) ]
  ! MODULO          [ reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .) ]
  ! LSHIFT          [ reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .) ]
  ! RSHIFT          [ reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .) ]
  ! PLUS            [ reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .) ]
  ! MINUS           [ reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .) ]
  ! MULTIPLY        [ reduce using rule 148 (Expression -> Expression GREATERTHAN Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! LESSTHAN        [ shift and go to state 193 ]
  ! GREATERTHAN     [ shift and go to state 194 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 190 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 199 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! AND             [ shift and go to state 184 ]


state 245

    (156) Expression -> Expression LSHIFT Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    COMPARE_OR      reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    COMPARE_AND     reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    EQEQ            reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    NOTEQUALS       reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    LESSTHAN        reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    GREATERTHAN     reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    LESSTHAN_EQUAL  reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    GREATERTHAN_EQUAL reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    OR              reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    XOR             reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    ANDXOR          reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    LSHIFT          reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    RSHIFT          reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    PLUS            reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    MINUS           reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    AND             reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    COMMA           reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    SEMICOLON       reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    RPAREN          reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    COLON           reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    RCURL           reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    INCREMENT       reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    DECREMENT       reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    PLUSEQUAL       reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    MINUSEQUAL      reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    TIMESEQUAL      reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    DIVIDE_EQUAL    reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    MODEQUAL        reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    ANDEQUAL        reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    OREQUAL         reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    XOREQUAL        reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    ANDXOR_EQUAL    reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    LSHIFT_EQUAL    reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    RSHIFT_EQUAL    reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    EQUALS          reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    LCURL           reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    LEFT_ARROW      reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    DEFAULT         reduce using rule 156 (Expression -> Expression LSHIFT Expression .)
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    MULTIPLY        shift and go to state 192

  ! DIVIDE          [ reduce using rule 156 (Expression -> Expression LSHIFT Expression .) ]
  ! MODULO          [ reduce using rule 156 (Expression -> Expression LSHIFT Expression .) ]
  ! MULTIPLY        [ reduce using rule 156 (Expression -> Expression LSHIFT Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! LESSTHAN        [ shift and go to state 193 ]
  ! GREATERTHAN     [ shift and go to state 194 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 190 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 199 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! LSHIFT          [ shift and go to state 195 ]
  ! RSHIFT          [ shift and go to state 187 ]
  ! PLUS            [ shift and go to state 191 ]
  ! MINUS           [ shift and go to state 188 ]
  ! AND             [ shift and go to state 184 ]


state 246

    (144) Expression -> Expression COMPARE_AND Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    COMPARE_OR      reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    COMPARE_AND     reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    COMMA           reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    SEMICOLON       reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    RPAREN          reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    COLON           reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    RCURL           reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    INCREMENT       reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    DECREMENT       reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    PLUSEQUAL       reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    MINUSEQUAL      reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    TIMESEQUAL      reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    DIVIDE_EQUAL    reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    MODEQUAL        reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    ANDEQUAL        reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    OREQUAL         reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    XOREQUAL        reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    ANDXOR_EQUAL    reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    LSHIFT_EQUAL    reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    RSHIFT_EQUAL    reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    EQUALS          reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    LCURL           reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    LEFT_ARROW      reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    DEFAULT         reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .)
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184

  ! EQEQ            [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! NOTEQUALS       [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! LESSTHAN        [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! GREATERTHAN     [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! OR              [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! XOR             [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! ANDXOR          [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! DIVIDE          [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! MODULO          [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! LSHIFT          [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! RSHIFT          [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! PLUS            [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! MINUS           [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! MULTIPLY        [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! AND             [ reduce using rule 144 (Expression -> Expression COMPARE_AND Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]


state 247

    (155) Expression -> Expression MODULO Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 155 (Expression -> Expression MODULO Expression .)
    COMPARE_OR      reduce using rule 155 (Expression -> Expression MODULO Expression .)
    COMPARE_AND     reduce using rule 155 (Expression -> Expression MODULO Expression .)
    EQEQ            reduce using rule 155 (Expression -> Expression MODULO Expression .)
    NOTEQUALS       reduce using rule 155 (Expression -> Expression MODULO Expression .)
    LESSTHAN        reduce using rule 155 (Expression -> Expression MODULO Expression .)
    GREATERTHAN     reduce using rule 155 (Expression -> Expression MODULO Expression .)
    LESSTHAN_EQUAL  reduce using rule 155 (Expression -> Expression MODULO Expression .)
    GREATERTHAN_EQUAL reduce using rule 155 (Expression -> Expression MODULO Expression .)
    OR              reduce using rule 155 (Expression -> Expression MODULO Expression .)
    XOR             reduce using rule 155 (Expression -> Expression MODULO Expression .)
    ANDXOR          reduce using rule 155 (Expression -> Expression MODULO Expression .)
    DIVIDE          reduce using rule 155 (Expression -> Expression MODULO Expression .)
    MODULO          reduce using rule 155 (Expression -> Expression MODULO Expression .)
    LSHIFT          reduce using rule 155 (Expression -> Expression MODULO Expression .)
    RSHIFT          reduce using rule 155 (Expression -> Expression MODULO Expression .)
    PLUS            reduce using rule 155 (Expression -> Expression MODULO Expression .)
    MINUS           reduce using rule 155 (Expression -> Expression MODULO Expression .)
    MULTIPLY        reduce using rule 155 (Expression -> Expression MODULO Expression .)
    AND             reduce using rule 155 (Expression -> Expression MODULO Expression .)
    COMMA           reduce using rule 155 (Expression -> Expression MODULO Expression .)
    SEMICOLON       reduce using rule 155 (Expression -> Expression MODULO Expression .)
    RPAREN          reduce using rule 155 (Expression -> Expression MODULO Expression .)
    COLON           reduce using rule 155 (Expression -> Expression MODULO Expression .)
    RCURL           reduce using rule 155 (Expression -> Expression MODULO Expression .)
    INCREMENT       reduce using rule 155 (Expression -> Expression MODULO Expression .)
    DECREMENT       reduce using rule 155 (Expression -> Expression MODULO Expression .)
    PLUSEQUAL       reduce using rule 155 (Expression -> Expression MODULO Expression .)
    MINUSEQUAL      reduce using rule 155 (Expression -> Expression MODULO Expression .)
    TIMESEQUAL      reduce using rule 155 (Expression -> Expression MODULO Expression .)
    DIVIDE_EQUAL    reduce using rule 155 (Expression -> Expression MODULO Expression .)
    MODEQUAL        reduce using rule 155 (Expression -> Expression MODULO Expression .)
    ANDEQUAL        reduce using rule 155 (Expression -> Expression MODULO Expression .)
    OREQUAL         reduce using rule 155 (Expression -> Expression MODULO Expression .)
    XOREQUAL        reduce using rule 155 (Expression -> Expression MODULO Expression .)
    ANDXOR_EQUAL    reduce using rule 155 (Expression -> Expression MODULO Expression .)
    LSHIFT_EQUAL    reduce using rule 155 (Expression -> Expression MODULO Expression .)
    RSHIFT_EQUAL    reduce using rule 155 (Expression -> Expression MODULO Expression .)
    EQUALS          reduce using rule 155 (Expression -> Expression MODULO Expression .)
    LCURL           reduce using rule 155 (Expression -> Expression MODULO Expression .)
    LEFT_ARROW      reduce using rule 155 (Expression -> Expression MODULO Expression .)
    DEFAULT         reduce using rule 155 (Expression -> Expression MODULO Expression .)

  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! LESSTHAN        [ shift and go to state 193 ]
  ! GREATERTHAN     [ shift and go to state 194 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 190 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 199 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! DIVIDE          [ shift and go to state 183 ]
  ! MODULO          [ shift and go to state 197 ]
  ! LSHIFT          [ shift and go to state 195 ]
  ! RSHIFT          [ shift and go to state 187 ]
  ! PLUS            [ shift and go to state 191 ]
  ! MINUS           [ shift and go to state 188 ]
  ! MULTIPLY        [ shift and go to state 192 ]
  ! AND             [ shift and go to state 184 ]


state 248

    (151) Expression -> Expression OR Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 151 (Expression -> Expression OR Expression .)
    COMPARE_OR      reduce using rule 151 (Expression -> Expression OR Expression .)
    COMPARE_AND     reduce using rule 151 (Expression -> Expression OR Expression .)
    EQEQ            reduce using rule 151 (Expression -> Expression OR Expression .)
    NOTEQUALS       reduce using rule 151 (Expression -> Expression OR Expression .)
    OR              reduce using rule 151 (Expression -> Expression OR Expression .)
    COMMA           reduce using rule 151 (Expression -> Expression OR Expression .)
    SEMICOLON       reduce using rule 151 (Expression -> Expression OR Expression .)
    RPAREN          reduce using rule 151 (Expression -> Expression OR Expression .)
    COLON           reduce using rule 151 (Expression -> Expression OR Expression .)
    RCURL           reduce using rule 151 (Expression -> Expression OR Expression .)
    INCREMENT       reduce using rule 151 (Expression -> Expression OR Expression .)
    DECREMENT       reduce using rule 151 (Expression -> Expression OR Expression .)
    PLUSEQUAL       reduce using rule 151 (Expression -> Expression OR Expression .)
    MINUSEQUAL      reduce using rule 151 (Expression -> Expression OR Expression .)
    TIMESEQUAL      reduce using rule 151 (Expression -> Expression OR Expression .)
    DIVIDE_EQUAL    reduce using rule 151 (Expression -> Expression OR Expression .)
    MODEQUAL        reduce using rule 151 (Expression -> Expression OR Expression .)
    ANDEQUAL        reduce using rule 151 (Expression -> Expression OR Expression .)
    OREQUAL         reduce using rule 151 (Expression -> Expression OR Expression .)
    XOREQUAL        reduce using rule 151 (Expression -> Expression OR Expression .)
    ANDXOR_EQUAL    reduce using rule 151 (Expression -> Expression OR Expression .)
    LSHIFT_EQUAL    reduce using rule 151 (Expression -> Expression OR Expression .)
    RSHIFT_EQUAL    reduce using rule 151 (Expression -> Expression OR Expression .)
    EQUALS          reduce using rule 151 (Expression -> Expression OR Expression .)
    LCURL           reduce using rule 151 (Expression -> Expression OR Expression .)
    LEFT_ARROW      reduce using rule 151 (Expression -> Expression OR Expression .)
    DEFAULT         reduce using rule 151 (Expression -> Expression OR Expression .)
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184

  ! LESSTHAN        [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! GREATERTHAN     [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! XOR             [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! ANDXOR          [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! DIVIDE          [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! MODULO          [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! LSHIFT          [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! RSHIFT          [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! PLUS            [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! MINUS           [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! MULTIPLY        [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! AND             [ reduce using rule 151 (Expression -> Expression OR Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! OR              [ shift and go to state 198 ]


state 249

    (150) Expression -> Expression GREATERTHAN_EQUAL Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    COMPARE_OR      reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    COMPARE_AND     reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    EQEQ            reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    NOTEQUALS       reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    LESSTHAN        reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    GREATERTHAN     reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    LESSTHAN_EQUAL  reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    GREATERTHAN_EQUAL reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    OR              reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    XOR             reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    ANDXOR          reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    AND             reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    COMMA           reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    SEMICOLON       reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    RPAREN          reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    COLON           reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    RCURL           reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    INCREMENT       reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    DECREMENT       reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    PLUSEQUAL       reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    MINUSEQUAL      reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    TIMESEQUAL      reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    DIVIDE_EQUAL    reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    MODEQUAL        reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    ANDEQUAL        reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    OREQUAL         reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    XOREQUAL        reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    ANDXOR_EQUAL    reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    LSHIFT_EQUAL    reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    RSHIFT_EQUAL    reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    EQUALS          reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    LCURL           reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    LEFT_ARROW      reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    DEFAULT         reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192

  ! DIVIDE          [ reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! MODULO          [ reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! LSHIFT          [ reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! RSHIFT          [ reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! PLUS            [ reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! MINUS           [ reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! MULTIPLY        [ reduce using rule 150 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! COMPARE_OR      [ shift and go to state 186 ]
  ! COMPARE_AND     [ shift and go to state 196 ]
  ! EQEQ            [ shift and go to state 189 ]
  ! NOTEQUALS       [ shift and go to state 182 ]
  ! LESSTHAN        [ shift and go to state 193 ]
  ! GREATERTHAN     [ shift and go to state 194 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 190 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 199 ]
  ! OR              [ shift and go to state 198 ]
  ! XOR             [ shift and go to state 185 ]
  ! ANDXOR          [ shift and go to state 181 ]
  ! AND             [ shift and go to state 184 ]


state 250

    (171) Conversion -> TYPECAST Type LPAREN . Expression RPAREN
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 310
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 251

    (110) LiteralValue -> LCURL ElementList . RCURL
    (111) LiteralValue -> LCURL ElementList . COMMA RCURL
    (113) ElementList -> ElementList . COMMA KeyedElement

    RCURL           shift and go to state 312
    COMMA           shift and go to state 311


state 252

    (109) LiteralValue -> LCURL RCURL .

    RCURL           reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    COMMA           reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    DOT             reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    LSQUARE         reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    LPAREN          reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    COMPARE_OR      reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    COMPARE_AND     reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    EQEQ            reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    NOTEQUALS       reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    LESSTHAN        reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    GREATERTHAN     reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    LESSTHAN_EQUAL  reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    GREATERTHAN_EQUAL reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    OR              reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    XOR             reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    ANDXOR          reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    DIVIDE          reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    MODULO          reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    LSHIFT          reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    RSHIFT          reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    PLUS            reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    MINUS           reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    MULTIPLY        reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    AND             reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    RSQUARE         reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    SEMICOLON       reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    RPAREN          reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    COLON           reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    INCREMENT       reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    DECREMENT       reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    PLUSEQUAL       reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    MINUSEQUAL      reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    TIMESEQUAL      reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    DIVIDE_EQUAL    reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    MODEQUAL        reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    ANDEQUAL        reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    OREQUAL         reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    XOREQUAL        reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    ANDXOR_EQUAL    reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    LSHIFT_EQUAL    reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    RSHIFT_EQUAL    reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    EQUALS          reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    LCURL           reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    LEFT_ARROW      reduce using rule 109 (LiteralValue -> LCURL RCURL .)
    DEFAULT         reduce using rule 109 (LiteralValue -> LCURL RCURL .)


state 253

    (115) KeyedElement -> Key . COLON Element

    COLON           shift and go to state 313


state 254

    (116) KeyedElement -> IDENTIFIER . COLON Element
    (125) OperandName -> IDENTIFIER .
    (126) QualifiedIdent -> IDENTIFIER . DOT TypeName

    DOT             reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSQUARE         reduce using rule 125 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMPARE_OR      reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMPARE_AND     reduce using rule 125 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 125 (OperandName -> IDENTIFIER .)
    NOTEQUALS       reduce using rule 125 (OperandName -> IDENTIFIER .)
    LESSTHAN        reduce using rule 125 (OperandName -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 125 (OperandName -> IDENTIFIER .)
    LESSTHAN_EQUAL  reduce using rule 125 (OperandName -> IDENTIFIER .)
    GREATERTHAN_EQUAL reduce using rule 125 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 125 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 125 (OperandName -> IDENTIFIER .)
    ANDXOR          reduce using rule 125 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 125 (OperandName -> IDENTIFIER .)
    MODULO          reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 125 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 125 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 125 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 125 (OperandName -> IDENTIFIER .)
    MULTIPLY        reduce using rule 125 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 125 (OperandName -> IDENTIFIER .)
    RCURL           reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 125 (OperandName -> IDENTIFIER .)
    COLON           reduce using rule 125 (OperandName -> IDENTIFIER .)

  ! COLON           [ shift and go to state 314 ]
  ! DOT             [ shift and go to state 103 ]


state 255

    (114) KeyedElement -> Element .

    RCURL           reduce using rule 114 (KeyedElement -> Element .)
    COMMA           reduce using rule 114 (KeyedElement -> Element .)


state 256

    (120) Element -> LiteralValue .
    (118) Key -> LiteralValue .

    RCURL           reduce using rule 120 (Element -> LiteralValue .)
    COMMA           reduce using rule 120 (Element -> LiteralValue .)
    COLON           reduce using rule 118 (Key -> LiteralValue .)


state 257

    (119) Element -> Expression .
    (117) Key -> Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RCURL           reduce using rule 119 (Element -> Expression .)
    COMMA           reduce using rule 119 (Element -> Expression .)
    COLON           reduce using rule 117 (Key -> Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 258

    (112) ElementList -> KeyedElement .

    RCURL           reduce using rule 112 (ElementList -> KeyedElement .)
    COMMA           reduce using rule 112 (ElementList -> KeyedElement .)


state 259

    (25) MapType -> MAP LSQUARE KeyType RSQUARE . ElementType
    (29) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    TypeLit                        shift and go to state 59
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    ElementType                    shift and go to state 315
    Type                           shift and go to state 168
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 260

    (31) FieldDeclRep -> FieldDeclRep FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 316


state 261

    (30) StructType -> STRUCT LCURL FieldDeclRep RCURL .

    LCURL           reduce using rule 30 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    EQUALS          reduce using rule 30 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    SEMICOLON       reduce using rule 30 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    RPAREN          reduce using rule 30 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    COMMA           reduce using rule 30 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    LPAREN          reduce using rule 30 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    RSQUARE         reduce using rule 30 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)
    STRING_LIT      reduce using rule 30 (StructType -> STRUCT LCURL FieldDeclRep RCURL .)


state 262

    (33) FieldDecl -> IdentifierList . Type TagOpt
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    Type                           shift and go to state 317
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    PointerType                    shift and go to state 79
    SliceType                      shift and go to state 80
    TypeLit                        shift and go to state 59
    QualifiedIdent                 shift and go to state 82
    MapType                        shift and go to state 69

state 263

    (177) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 177 (Statement -> ContinueStmt .)


state 264

    (188) GoStmt -> GO . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 318
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 265

    (203) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 203 (SimpleStmt -> ExpressionStmt .)
    LCURL           reduce using rule 203 (SimpleStmt -> ExpressionStmt .)


state 266

    (55) StatementRep -> StatementRep Statement . SEMICOLON

    SEMICOLON       shift and go to state 319


state 267

    (185) Statement -> FallThroughStmt .

    SEMICOLON       reduce using rule 185 (Statement -> FallThroughStmt .)


state 268

    (201) DeferStmt -> DEFER . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 320
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 269

    (205) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 205 (SimpleStmt -> Assignment .)
    LCURL           reduce using rule 205 (SimpleStmt -> Assignment .)


state 270

    (204) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 204 (SimpleStmt -> IncDecStmt .)
    LCURL           reduce using rule 204 (SimpleStmt -> IncDecStmt .)


state 271

    (258) GotoStmt -> GOTO . Label
    (208) Label -> . IDENTIFIER

    IDENTIFIER      shift and go to state 321

    Label                          shift and go to state 322

state 272

    (173) Statement -> LabeledStmt .

    SEMICOLON       reduce using rule 173 (Statement -> LabeledStmt .)


state 273

    (251) ReturnStmt -> RETURN . ExpressionListPureOpt
    (252) ExpressionListPureOpt -> . ExpressionList
    (253) ExpressionListPureOpt -> . epsilon
    (73) ExpressionList -> . Expression ExpressionRep
    (275) epsilon -> .
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    SEMICOLON       reduce using rule 275 (epsilon -> .)
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    Conversion                     shift and go to state 104
    ExpressionListPureOpt          shift and go to state 323
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    epsilon                        shift and go to state 324
    UnaryExpr                      shift and go to state 120
    ExpressionList                 shift and go to state 325
    ArrayType                      shift and go to state 106
    Expression                     shift and go to state 160
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    CompositeLit                   shift and go to state 116
    QualifiedIdent                 shift and go to state 82
    MapType                        shift and go to state 123

state 274

    (207) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 326


state 275

    (230) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 230 (SwitchStmt -> ExprSwitchStmt .)


state 276

    (186) Statement -> GoStmt .

    SEMICOLON       reduce using rule 186 (Statement -> GoStmt .)


state 277

    (183) Statement -> DeferStmt .

    SEMICOLON       reduce using rule 183 (Statement -> DeferStmt .)


state 278

    (180) Statement -> IfStmt .

    SEMICOLON       reduce using rule 180 (Statement -> IfStmt .)


state 279

    (178) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 178 (Statement -> GotoStmt .)


state 280

    (238) ForStmt -> FOR . ConditionBlockOpt Block
    (239) ConditionBlockOpt -> . epsilon
    (240) ConditionBlockOpt -> . Condition
    (241) ConditionBlockOpt -> . ForClause
    (242) ConditionBlockOpt -> . RangeClause
    (275) epsilon -> .
    (243) Condition -> . Expression
    (244) ForClause -> . SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
    (247) RangeClause -> . ExpressionIdentListOpt RANGE Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (202) SimpleStmt -> . epsilon
    (203) SimpleStmt -> . ExpressionStmt
    (204) SimpleStmt -> . IncDecStmt
    (205) SimpleStmt -> . Assignment
    (206) SimpleStmt -> . ShortVarDecl
    (248) ExpressionIdentListOpt -> . epsilon
    (249) ExpressionIdentListOpt -> . ExpressionIdentifier
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (209) ExpressionStmt -> . Expression
    (210) IncDecStmt -> . Expression INCREMENT
    (211) IncDecStmt -> . Expression DECREMENT
    (212) Assignment -> . ExpressionList assign_op ExpressionList
    (92) ShortVarDecl -> . IDENTIFIER SHORT_ASSIGNMENT Expression
    (250) ExpressionIdentifier -> . ExpressionList EQUALS
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (73) ExpressionList -> . Expression ExpressionRep
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    LCURL           reduce using rule 275 (epsilon -> .)
    SEMICOLON       reduce using rule 275 (epsilon -> .)
    RANGE           reduce using rule 275 (epsilon -> .)
    NOT             shift and go to state 114
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    SimpleStmt                     shift and go to state 336
    ExpressionStmt                 shift and go to state 265
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    Assignment                     shift and go to state 269
    MapType                        shift and go to state 123
    TypeName                       shift and go to state 113
    RangeClause                    shift and go to state 327
    IncDecStmt                     shift and go to state 270
    Condition                      shift and go to state 330
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    epsilon                        shift and go to state 331
    UnaryExpr                      shift and go to state 120
    ConditionBlockOpt              shift and go to state 332
    ExpressionIdentListOpt         shift and go to state 328
    ExpressionList                 shift and go to state 333
    ArrayType                      shift and go to state 106
    ForClause                      shift and go to state 337
    Expression                     shift and go to state 334
    ShortVarDecl                   shift and go to state 298
    LiteralType                    shift and go to state 129
    Literal                        shift and go to state 125
    BasicLit                       shift and go to state 112
    Operand                        shift and go to state 130
    CompositeLit                   shift and go to state 116
    QualifiedIdent                 shift and go to state 82
    ExpressionIdentifier           shift and go to state 335

state 281

    (175) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 175 (Statement -> ReturnStmt .)


state 282

    (179) Statement -> Block .

    SEMICOLON       reduce using rule 179 (Statement -> Block .)


state 283

    (76) TypeDecl -> TYPE . TypeSpec
    (77) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (16) TypeToken -> TYPE . IDENTIFIER
    (80) TypeSpec -> . AliasDecl
    (81) TypeSpec -> . TypeDef
    (82) AliasDecl -> . IDENTIFIER EQUALS Type
    (83) TypeDef -> . IDENTIFIER Type

    LPAREN          shift and go to state 44
    IDENTIFIER      shift and go to state 338

    TypeSpec                       shift and go to state 45
    TypeDef                        shift and go to state 42
    AliasDecl                      shift and go to state 43

state 284

    (181) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 181 (Statement -> SwitchStmt .)


state 285

    (255) ContinueStmt -> CONTINUE . LabelOpt
    (256) LabelOpt -> . Label
    (257) LabelOpt -> . epsilon
    (208) Label -> . IDENTIFIER
    (275) epsilon -> .

    IDENTIFIER      shift and go to state 321
    SEMICOLON       reduce using rule 275 (epsilon -> .)

    epsilon                        shift and go to state 339
    LabelOpt                       shift and go to state 340
    Label                          shift and go to state 341

state 286

    (187) FallThroughStmt -> FALLTHROUGH .

    SEMICOLON       reduce using rule 187 (FallThroughStmt -> FALLTHROUGH .)


state 287

    (231) ExprSwitchStmt -> SWITCH . SimpleStmt SEMICOLON ExpressionOpt LCURL ExprCaseClauseList RCURL
    (232) ExprSwitchStmt -> SWITCH . ExpressionOpt LCURL ExprCaseClauseList RCURL
    (202) SimpleStmt -> . epsilon
    (203) SimpleStmt -> . ExpressionStmt
    (204) SimpleStmt -> . IncDecStmt
    (205) SimpleStmt -> . Assignment
    (206) SimpleStmt -> . ShortVarDecl
    (162) ExpressionOpt -> . Expression
    (163) ExpressionOpt -> . epsilon
    (275) epsilon -> .
    (209) ExpressionStmt -> . Expression
    (210) IncDecStmt -> . Expression INCREMENT
    (211) IncDecStmt -> . Expression DECREMENT
    (212) Assignment -> . ExpressionList assign_op ExpressionList
    (92) ShortVarDecl -> . IDENTIFIER SHORT_ASSIGNMENT Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (73) ExpressionList -> . Expression ExpressionRep
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    SEMICOLON       reduce using rule 275 (epsilon -> .)
    LCURL           reduce using rule 275 (epsilon -> .)
    IDENTIFIER      shift and go to state 329
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    UnaryOp                        shift and go to state 105
    Conversion                     shift and go to state 104
    SimpleStmt                     shift and go to state 345
    ExpressionStmt                 shift and go to state 265
    Operand                        shift and go to state 130
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    Assignment                     shift and go to state 269
    TypeName                       shift and go to state 113
    IncDecStmt                     shift and go to state 270
    ExpressionOpt                  shift and go to state 342
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    epsilon                        shift and go to state 343
    UnaryExpr                      shift and go to state 120
    ExpressionList                 shift and go to state 291
    ArrayType                      shift and go to state 106
    Expression                     shift and go to state 344
    ShortVarDecl                   shift and go to state 298
    LiteralType                    shift and go to state 129
    Literal                        shift and go to state 125
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 121
    CompositeLit                   shift and go to state 116
    QualifiedIdent                 shift and go to state 82
    MapType                        shift and go to state 123

state 288

    (172) Statement -> Declaration .

    SEMICOLON       reduce using rule 172 (Statement -> Declaration .)


state 289

    (208) Label -> IDENTIFIER .
    (92) ShortVarDecl -> IDENTIFIER . SHORT_ASSIGNMENT Expression
    (125) OperandName -> IDENTIFIER .
    (126) QualifiedIdent -> IDENTIFIER . DOT TypeName

    COLON           reduce using rule 208 (Label -> IDENTIFIER .)
    SHORT_ASSIGNMENT shift and go to state 346
    DOT             reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSQUARE         reduce using rule 125 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 125 (OperandName -> IDENTIFIER .)
    INCREMENT       reduce using rule 125 (OperandName -> IDENTIFIER .)
    DECREMENT       reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMPARE_OR      reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMPARE_AND     reduce using rule 125 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 125 (OperandName -> IDENTIFIER .)
    NOTEQUALS       reduce using rule 125 (OperandName -> IDENTIFIER .)
    LESSTHAN        reduce using rule 125 (OperandName -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 125 (OperandName -> IDENTIFIER .)
    LESSTHAN_EQUAL  reduce using rule 125 (OperandName -> IDENTIFIER .)
    GREATERTHAN_EQUAL reduce using rule 125 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 125 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 125 (OperandName -> IDENTIFIER .)
    ANDXOR          reduce using rule 125 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 125 (OperandName -> IDENTIFIER .)
    MODULO          reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 125 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 125 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 125 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 125 (OperandName -> IDENTIFIER .)
    MULTIPLY        reduce using rule 125 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 125 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 125 (OperandName -> IDENTIFIER .)
    PLUSEQUAL       reduce using rule 125 (OperandName -> IDENTIFIER .)
    MINUSEQUAL      reduce using rule 125 (OperandName -> IDENTIFIER .)
    TIMESEQUAL      reduce using rule 125 (OperandName -> IDENTIFIER .)
    DIVIDE_EQUAL    reduce using rule 125 (OperandName -> IDENTIFIER .)
    MODEQUAL        reduce using rule 125 (OperandName -> IDENTIFIER .)
    ANDEQUAL        reduce using rule 125 (OperandName -> IDENTIFIER .)
    OREQUAL         reduce using rule 125 (OperandName -> IDENTIFIER .)
    XOREQUAL        reduce using rule 125 (OperandName -> IDENTIFIER .)
    ANDXOR_EQUAL    reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSHIFT_EQUAL    reduce using rule 125 (OperandName -> IDENTIFIER .)
    RSHIFT_EQUAL    reduce using rule 125 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 125 (OperandName -> IDENTIFIER .)

  ! DOT             [ shift and go to state 103 ]


state 290

    (202) SimpleStmt -> epsilon .

    SEMICOLON       reduce using rule 202 (SimpleStmt -> epsilon .)
    LCURL           reduce using rule 202 (SimpleStmt -> epsilon .)


state 291

    (212) Assignment -> ExpressionList . assign_op ExpressionList
    (213) assign_op -> . AssignOp
    (214) AssignOp -> . PLUSEQUAL
    (215) AssignOp -> . MINUSEQUAL
    (216) AssignOp -> . TIMESEQUAL
    (217) AssignOp -> . DIVIDE_EQUAL
    (218) AssignOp -> . MODEQUAL
    (219) AssignOp -> . ANDEQUAL
    (220) AssignOp -> . OREQUAL
    (221) AssignOp -> . XOREQUAL
    (222) AssignOp -> . ANDXOR_EQUAL
    (223) AssignOp -> . LSHIFT_EQUAL
    (224) AssignOp -> . RSHIFT_EQUAL
    (225) AssignOp -> . EQUALS

    PLUSEQUAL       shift and go to state 354
    MINUSEQUAL      shift and go to state 350
    TIMESEQUAL      shift and go to state 359
    DIVIDE_EQUAL    shift and go to state 360
    MODEQUAL        shift and go to state 351
    ANDEQUAL        shift and go to state 357
    OREQUAL         shift and go to state 358
    XOREQUAL        shift and go to state 352
    ANDXOR_EQUAL    shift and go to state 355
    LSHIFT_EQUAL    shift and go to state 347
    RSHIFT_EQUAL    shift and go to state 349
    EQUALS          shift and go to state 353

    AssignOp                       shift and go to state 348
    assign_op                      shift and go to state 356

state 292

    (209) ExpressionStmt -> Expression .
    (210) IncDecStmt -> Expression . INCREMENT
    (211) IncDecStmt -> Expression . DECREMENT
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression
    (73) ExpressionList -> Expression . ExpressionRep
    (74) ExpressionRep -> . ExpressionRep COMMA Expression
    (75) ExpressionRep -> . epsilon
    (275) epsilon -> .

    SEMICOLON       reduce using rule 209 (ExpressionStmt -> Expression .)
    LCURL           reduce using rule 209 (ExpressionStmt -> Expression .)
    INCREMENT       shift and go to state 361
    DECREMENT       shift and go to state 362
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184
    COMMA           reduce using rule 275 (epsilon -> .)
    PLUSEQUAL       reduce using rule 275 (epsilon -> .)
    MINUSEQUAL      reduce using rule 275 (epsilon -> .)
    TIMESEQUAL      reduce using rule 275 (epsilon -> .)
    DIVIDE_EQUAL    reduce using rule 275 (epsilon -> .)
    MODEQUAL        reduce using rule 275 (epsilon -> .)
    ANDEQUAL        reduce using rule 275 (epsilon -> .)
    OREQUAL         reduce using rule 275 (epsilon -> .)
    XOREQUAL        reduce using rule 275 (epsilon -> .)
    ANDXOR_EQUAL    reduce using rule 275 (epsilon -> .)
    LSHIFT_EQUAL    reduce using rule 275 (epsilon -> .)
    RSHIFT_EQUAL    reduce using rule 275 (epsilon -> .)
    EQUALS          reduce using rule 275 (epsilon -> .)

    epsilon                        shift and go to state 219
    ExpressionRep                  shift and go to state 218

state 293

    (254) BreakStmt -> BREAK . LabelOpt
    (256) LabelOpt -> . Label
    (257) LabelOpt -> . epsilon
    (208) Label -> . IDENTIFIER
    (275) epsilon -> .

    IDENTIFIER      shift and go to state 321
    SEMICOLON       reduce using rule 275 (epsilon -> .)

    epsilon                        shift and go to state 339
    LabelOpt                       shift and go to state 363
    Label                          shift and go to state 341

state 294

    (174) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 174 (Statement -> SimpleStmt .)


state 295

    (182) Statement -> ForStmt .

    SEMICOLON       reduce using rule 182 (Statement -> ForStmt .)


state 296

    (184) Statement -> SelectStmt .

    SEMICOLON       reduce using rule 184 (Statement -> SelectStmt .)


state 297

    (189) SelectStmt -> SELECT . LCURL CCX RCURL
    (190) SelectStmt -> SELECT . LCURL RCURL

    LCURL           shift and go to state 364


state 298

    (206) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 206 (SimpleStmt -> ShortVarDecl .)
    LCURL           reduce using rule 206 (SimpleStmt -> ShortVarDecl .)


state 299

    (226) IfStmt -> IF . Expression Block ElseOpt
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 365
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 300

    (176) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 176 (Statement -> BreakStmt .)


state 301

    (53) Block -> LCURL StatementList RCURL .

    SEMICOLON       reduce using rule 53 (Block -> LCURL StatementList RCURL .)
    ELSE            reduce using rule 53 (Block -> LCURL StatementList RCURL .)


state 302

    (51) ParameterDecl -> IdentifierList DOTS Type .

    RPAREN          reduce using rule 51 (ParameterDecl -> IdentifierList DOTS Type .)
    COMMA           reduce using rule 51 (ParameterDecl -> IdentifierList DOTS Type .)


state 303

    (45) Parameters -> LPAREN ParametersList COMMA RPAREN .

    LPAREN          reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    INT_T           reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    INT             reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    FLOAT           reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    BOOL            reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    COMPLEX         reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    BOOL_T          reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    COMPLEX_T       reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    STRING          reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    FLOAT_T         reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    STRING_T        reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    TYPE            reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    IDENTIFIER      reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    LSQUARE         reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    STRUCT          reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    MULTIPLY        reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    MAP             reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    LCURL           reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)
    SEMICOLON       reduce using rule 45 (Parameters -> LPAREN ParametersList COMMA RPAREN .)


state 304

    (48) ParametersList -> ParametersList COMMA ParameterDecl .

    RPAREN          reduce using rule 48 (ParametersList -> ParametersList COMMA ParameterDecl .)
    COMMA           reduce using rule 48 (ParametersList -> ParametersList COMMA ParameterDecl .)


state 305

    (74) ExpressionRep -> ExpressionRep COMMA . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    Conversion                     shift and go to state 104
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 366
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 306

    (139) Arguments -> LPAREN ExpressionListTypeOpt RPAREN .

    DOT             reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LSQUARE         reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COMPARE_OR      reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COMPARE_AND     reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQEQ            reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    NOTEQUALS       reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LESSTHAN        reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GREATERTHAN     reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LESSTHAN_EQUAL  reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    GREATERTHAN_EQUAL reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    XOR             reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    ANDXOR          reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE          reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MODULO          reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LSHIFT          reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RSHIFT          reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS            reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS           reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MULTIPLY        reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    AND             reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RSQUARE         reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOLON       reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RCURL           reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    INCREMENT       reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DECREMENT       reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSEQUAL       reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSEQUAL      reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    TIMESEQUAL      reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE_EQUAL    reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    MODEQUAL        reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    ANDEQUAL        reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    OREQUAL         reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    XOREQUAL        reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    ANDXOR_EQUAL    reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LSHIFT_EQUAL    reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    RSHIFT_EQUAL    reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    EQUALS          reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LCURL           reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    LEFT_ARROW      reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)
    DEFAULT         reduce using rule 139 (Arguments -> LPAREN ExpressionListTypeOpt RPAREN .)


state 307

    (136) Slice -> LSQUARE ExpressionOpt COLON . ExpressionOpt RSQUARE
    (137) Slice -> LSQUARE ExpressionOpt COLON . Expression COLON Expression RSQUARE
    (162) ExpressionOpt -> . Expression
    (163) ExpressionOpt -> . epsilon
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (275) epsilon -> .
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    RSQUARE         reduce using rule 275 (epsilon -> .)
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    ExpressionOpt                  shift and go to state 367
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    epsilon                        shift and go to state 225
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 368
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 308

    (135) Index -> LSQUARE Expression RSQUARE .

    DOT             reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    LSQUARE         reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    LPAREN          reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    COMPARE_OR      reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    COMPARE_AND     reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    EQEQ            reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    NOTEQUALS       reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    LESSTHAN        reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    GREATERTHAN     reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    LESSTHAN_EQUAL  reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    GREATERTHAN_EQUAL reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    OR              reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    XOR             reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    ANDXOR          reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    DIVIDE          reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    MODULO          reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    LSHIFT          reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    RSHIFT          reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    PLUS            reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    MINUS           reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    MULTIPLY        reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    AND             reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    RSQUARE         reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    COMMA           reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    SEMICOLON       reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    RPAREN          reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    COLON           reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    RCURL           reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    INCREMENT       reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    DECREMENT       reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    PLUSEQUAL       reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    MINUSEQUAL      reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    TIMESEQUAL      reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    DIVIDE_EQUAL    reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    MODEQUAL        reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    ANDEQUAL        reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    OREQUAL         reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    XOREQUAL        reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    ANDXOR_EQUAL    reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    LSHIFT_EQUAL    reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    RSHIFT_EQUAL    reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    EQUALS          reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    LCURL           reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    LEFT_ARROW      reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)
    DEFAULT         reduce using rule 135 (Index -> LSQUARE Expression RSQUARE .)


state 309

    (138) TypeAssertion -> DOT LPAREN Type . RPAREN

    RPAREN          shift and go to state 369


state 310

    (171) Conversion -> TYPECAST Type LPAREN Expression . RPAREN
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RPAREN          shift and go to state 370
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 311

    (111) LiteralValue -> LCURL ElementList COMMA . RCURL
    (113) ElementList -> ElementList COMMA . KeyedElement
    (114) KeyedElement -> . Element
    (115) KeyedElement -> . Key COLON Element
    (116) KeyedElement -> . IDENTIFIER COLON Element
    (119) Element -> . Expression
    (120) Element -> . LiteralValue
    (117) Key -> . Expression
    (118) Key -> . LiteralValue
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (109) LiteralValue -> . LCURL RCURL
    (110) LiteralValue -> . LCURL ElementList RCURL
    (111) LiteralValue -> . LCURL ElementList COMMA RCURL
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    RCURL           shift and go to state 371
    IDENTIFIER      shift and go to state 254
    LCURL           shift and go to state 202
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    Key                            shift and go to state 253
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    Element                        shift and go to state 255
    LiteralValue                   shift and go to state 256
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 257
    LiteralType                    shift and go to state 129
    KeyedElement                   shift and go to state 372
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 312

    (110) LiteralValue -> LCURL ElementList RCURL .

    RCURL           reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    COMMA           reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    DOT             reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    LSQUARE         reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    LPAREN          reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    COMPARE_OR      reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    COMPARE_AND     reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    EQEQ            reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    NOTEQUALS       reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    LESSTHAN        reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    GREATERTHAN     reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    LESSTHAN_EQUAL  reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    GREATERTHAN_EQUAL reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    OR              reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    XOR             reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    ANDXOR          reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    DIVIDE          reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    MODULO          reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    LSHIFT          reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    RSHIFT          reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    PLUS            reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    MINUS           reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    MULTIPLY        reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    AND             reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    RSQUARE         reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    SEMICOLON       reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    RPAREN          reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    COLON           reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    INCREMENT       reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    DECREMENT       reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    PLUSEQUAL       reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    MINUSEQUAL      reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    TIMESEQUAL      reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    DIVIDE_EQUAL    reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    MODEQUAL        reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    ANDEQUAL        reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    OREQUAL         reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    XOREQUAL        reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    ANDXOR_EQUAL    reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    LSHIFT_EQUAL    reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    RSHIFT_EQUAL    reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    EQUALS          reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    LCURL           reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    LEFT_ARROW      reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)
    DEFAULT         reduce using rule 110 (LiteralValue -> LCURL ElementList RCURL .)


state 313

    (115) KeyedElement -> Key COLON . Element
    (119) Element -> . Expression
    (120) Element -> . LiteralValue
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (109) LiteralValue -> . LCURL RCURL
    (110) LiteralValue -> . LCURL ElementList RCURL
    (111) LiteralValue -> . LCURL ElementList COMMA RCURL
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    LCURL           shift and go to state 202
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    Element                        shift and go to state 373
    LiteralValue                   shift and go to state 374
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 375
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 314

    (116) KeyedElement -> IDENTIFIER COLON . Element
    (119) Element -> . Expression
    (120) Element -> . LiteralValue
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (109) LiteralValue -> . LCURL RCURL
    (110) LiteralValue -> . LCURL ElementList RCURL
    (111) LiteralValue -> . LCURL ElementList COMMA RCURL
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    LCURL           shift and go to state 202
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    Element                        shift and go to state 376
    LiteralValue                   shift and go to state 374
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 375
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 315

    (25) MapType -> MAP LSQUARE KeyType RSQUARE ElementType .

    LCURL           reduce using rule 25 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    EQUALS          reduce using rule 25 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    SEMICOLON       reduce using rule 25 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    RPAREN          reduce using rule 25 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    COMMA           reduce using rule 25 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    LPAREN          reduce using rule 25 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    RSQUARE         reduce using rule 25 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    STRING_LIT      reduce using rule 25 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)


state 316

    (31) FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .

    RCURL           reduce using rule 31 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .)
    IDENTIFIER      reduce using rule 31 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .)


state 317

    (33) FieldDecl -> IdentifierList Type . TagOpt
    (34) TagOpt -> . Tag
    (35) TagOpt -> . epsilon
    (36) Tag -> . STRING_LIT
    (275) epsilon -> .

    STRING_LIT      shift and go to state 380
    SEMICOLON       reduce using rule 275 (epsilon -> .)

    epsilon                        shift and go to state 377
    Tag                            shift and go to state 378
    TagOpt                         shift and go to state 379

state 318

    (188) GoStmt -> GO Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 188 (GoStmt -> GO Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 319

    (55) StatementRep -> StatementRep Statement SEMICOLON .

    RETURN          reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    BREAK           reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    CONTINUE        reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    GOTO            reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    LCURL           reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    IF              reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    FOR             reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    DEFER           reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    SELECT          reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    FALLTHROUGH     reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    GO              reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    CONST           reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    TYPE            reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    VAR             reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    IDENTIFIER      reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    SWITCH          reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    NOT             reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    PLUS            reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    MINUS           reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    MULTIPLY        reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    AND             reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    LPAREN          reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    TYPECAST        reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    INT_LIT         reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    FLOAT_LIT       reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    IMAGINARY_LIT   reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    STRING_LIT      reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    STRUCT          reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    LSQUARE         reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    MAP             reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    INT_T           reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    INT             reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    FLOAT           reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    BOOL            reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    COMPLEX         reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    BOOL_T          reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    COMPLEX_T       reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    STRING          reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    FLOAT_T         reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    STRING_T        reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    SEMICOLON       reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    RCURL           reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    CASE            reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)
    DEFAULT         reduce using rule 55 (StatementRep -> StatementRep Statement SEMICOLON .)


state 320

    (201) DeferStmt -> DEFER Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 201 (DeferStmt -> DEFER Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 321

    (208) Label -> IDENTIFIER .

    SEMICOLON       reduce using rule 208 (Label -> IDENTIFIER .)


state 322

    (258) GotoStmt -> GOTO Label .

    SEMICOLON       reduce using rule 258 (GotoStmt -> GOTO Label .)


state 323

    (251) ReturnStmt -> RETURN ExpressionListPureOpt .

    SEMICOLON       reduce using rule 251 (ReturnStmt -> RETURN ExpressionListPureOpt .)


state 324

    (253) ExpressionListPureOpt -> epsilon .

    SEMICOLON       reduce using rule 253 (ExpressionListPureOpt -> epsilon .)


state 325

    (252) ExpressionListPureOpt -> ExpressionList .

    SEMICOLON       reduce using rule 252 (ExpressionListPureOpt -> ExpressionList .)


state 326

    (207) LabeledStmt -> Label COLON . Statement
    (172) Statement -> . Declaration
    (173) Statement -> . LabeledStmt
    (174) Statement -> . SimpleStmt
    (175) Statement -> . ReturnStmt
    (176) Statement -> . BreakStmt
    (177) Statement -> . ContinueStmt
    (178) Statement -> . GotoStmt
    (179) Statement -> . Block
    (180) Statement -> . IfStmt
    (181) Statement -> . SwitchStmt
    (182) Statement -> . ForStmt
    (183) Statement -> . DeferStmt
    (184) Statement -> . SelectStmt
    (185) Statement -> . FallThroughStmt
    (186) Statement -> . GoStmt
    (57) Declaration -> . ConstDecl
    (58) Declaration -> . TypeDecl
    (59) Declaration -> . VarDecl
    (207) LabeledStmt -> . Label COLON Statement
    (202) SimpleStmt -> . epsilon
    (203) SimpleStmt -> . ExpressionStmt
    (204) SimpleStmt -> . IncDecStmt
    (205) SimpleStmt -> . Assignment
    (206) SimpleStmt -> . ShortVarDecl
    (251) ReturnStmt -> . RETURN ExpressionListPureOpt
    (254) BreakStmt -> . BREAK LabelOpt
    (255) ContinueStmt -> . CONTINUE LabelOpt
    (258) GotoStmt -> . GOTO Label
    (53) Block -> . LCURL StatementList RCURL
    (226) IfStmt -> . IF Expression Block ElseOpt
    (230) SwitchStmt -> . ExprSwitchStmt
    (238) ForStmt -> . FOR ConditionBlockOpt Block
    (201) DeferStmt -> . DEFER Expression
    (189) SelectStmt -> . SELECT LCURL CCX RCURL
    (190) SelectStmt -> . SELECT LCURL RCURL
    (187) FallThroughStmt -> . FALLTHROUGH
    (188) GoStmt -> . GO Expression
    (62) ConstDecl -> . CONST ConstSpec
    (63) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (76) TypeDecl -> . TYPE TypeSpec
    (77) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (84) VarDecl -> . VAR VarSpec
    (85) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (208) Label -> . IDENTIFIER
    (275) epsilon -> .
    (209) ExpressionStmt -> . Expression
    (210) IncDecStmt -> . Expression INCREMENT
    (211) IncDecStmt -> . Expression DECREMENT
    (212) Assignment -> . ExpressionList assign_op ExpressionList
    (92) ShortVarDecl -> . IDENTIFIER SHORT_ASSIGNMENT Expression
    (231) ExprSwitchStmt -> . SWITCH SimpleStmt SEMICOLON ExpressionOpt LCURL ExprCaseClauseList RCURL
    (232) ExprSwitchStmt -> . SWITCH ExpressionOpt LCURL ExprCaseClauseList RCURL
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (73) ExpressionList -> . Expression ExpressionRep
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    RETURN          shift and go to state 273
    BREAK           shift and go to state 293
    CONTINUE        shift and go to state 285
    GOTO            shift and go to state 271
    LCURL           shift and go to state 146
    IF              shift and go to state 299
    FOR             shift and go to state 280
    DEFER           shift and go to state 268
    SELECT          shift and go to state 297
    FALLTHROUGH     shift and go to state 286
    GO              shift and go to state 264
    CONST           shift and go to state 14
    TYPE            shift and go to state 283
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 289
    SEMICOLON       reduce using rule 275 (epsilon -> .)
    SWITCH          shift and go to state 287
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72

    UnaryOp                        shift and go to state 105
    ContinueStmt                   shift and go to state 263
    Conversion                     shift and go to state 104
    SimpleStmt                     shift and go to state 294
    Label                          shift and go to state 274
    ExpressionStmt                 shift and go to state 265
    ForStmt                        shift and go to state 295
    ExprSwitchStmt                 shift and go to state 275
    Statement                      shift and go to state 381
    SelectStmt                     shift and go to state 296
    IfStmt                         shift and go to state 278
    GoStmt                         shift and go to state 276
    FallThroughStmt                shift and go to state 267
    OperandName                    shift and go to state 111
    CompositeLit                   shift and go to state 116
    ArrayType                      shift and go to state 106
    TypeToken                      shift and go to state 58
    Assignment                     shift and go to state 269
    MapType                        shift and go to state 123
    TypeName                       shift and go to state 113
    IncDecStmt                     shift and go to state 270
    Declaration                    shift and go to state 288
    DeferStmt                      shift and go to state 277
    GotoStmt                       shift and go to state 279
    StructType                     shift and go to state 133
    TypeDecl                       shift and go to state 19
    LabeledStmt                    shift and go to state 272
    epsilon                        shift and go to state 290
    UnaryExpr                      shift and go to state 120
    Operand                        shift and go to state 130
    ExpressionList                 shift and go to state 291
    Expression                     shift and go to state 292
    ShortVarDecl                   shift and go to state 298
    Block                          shift and go to state 282
    LiteralType                    shift and go to state 129
    BreakStmt                      shift and go to state 300
    SwitchStmt                     shift and go to state 284
    Literal                        shift and go to state 125
    VarDecl                        shift and go to state 22
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 121
    ReturnStmt                     shift and go to state 281
    SliceType                      shift and go to state 118
    ConstDecl                      shift and go to state 18
    QualifiedIdent                 shift and go to state 82

state 327

    (242) ConditionBlockOpt -> RangeClause .

    LCURL           reduce using rule 242 (ConditionBlockOpt -> RangeClause .)


state 328

    (247) RangeClause -> ExpressionIdentListOpt . RANGE Expression

    RANGE           shift and go to state 382


state 329

    (92) ShortVarDecl -> IDENTIFIER . SHORT_ASSIGNMENT Expression
    (125) OperandName -> IDENTIFIER .
    (126) QualifiedIdent -> IDENTIFIER . DOT TypeName

    SHORT_ASSIGNMENT shift and go to state 346
    DOT             reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSQUARE         reduce using rule 125 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 125 (OperandName -> IDENTIFIER .)
    INCREMENT       reduce using rule 125 (OperandName -> IDENTIFIER .)
    DECREMENT       reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMPARE_OR      reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMPARE_AND     reduce using rule 125 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 125 (OperandName -> IDENTIFIER .)
    NOTEQUALS       reduce using rule 125 (OperandName -> IDENTIFIER .)
    LESSTHAN        reduce using rule 125 (OperandName -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 125 (OperandName -> IDENTIFIER .)
    LESSTHAN_EQUAL  reduce using rule 125 (OperandName -> IDENTIFIER .)
    GREATERTHAN_EQUAL reduce using rule 125 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 125 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 125 (OperandName -> IDENTIFIER .)
    ANDXOR          reduce using rule 125 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 125 (OperandName -> IDENTIFIER .)
    MODULO          reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 125 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 125 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 125 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 125 (OperandName -> IDENTIFIER .)
    MULTIPLY        reduce using rule 125 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 125 (OperandName -> IDENTIFIER .)
    LCURL           reduce using rule 125 (OperandName -> IDENTIFIER .)
    PLUSEQUAL       reduce using rule 125 (OperandName -> IDENTIFIER .)
    MINUSEQUAL      reduce using rule 125 (OperandName -> IDENTIFIER .)
    TIMESEQUAL      reduce using rule 125 (OperandName -> IDENTIFIER .)
    DIVIDE_EQUAL    reduce using rule 125 (OperandName -> IDENTIFIER .)
    MODEQUAL        reduce using rule 125 (OperandName -> IDENTIFIER .)
    ANDEQUAL        reduce using rule 125 (OperandName -> IDENTIFIER .)
    OREQUAL         reduce using rule 125 (OperandName -> IDENTIFIER .)
    XOREQUAL        reduce using rule 125 (OperandName -> IDENTIFIER .)
    ANDXOR_EQUAL    reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSHIFT_EQUAL    reduce using rule 125 (OperandName -> IDENTIFIER .)
    RSHIFT_EQUAL    reduce using rule 125 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 125 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 125 (OperandName -> IDENTIFIER .)

  ! DOT             [ shift and go to state 103 ]


state 330

    (240) ConditionBlockOpt -> Condition .

    LCURL           reduce using rule 240 (ConditionBlockOpt -> Condition .)


state 331

    (239) ConditionBlockOpt -> epsilon .
    (202) SimpleStmt -> epsilon .
    (248) ExpressionIdentListOpt -> epsilon .

    LCURL           reduce using rule 239 (ConditionBlockOpt -> epsilon .)
    SEMICOLON       reduce using rule 202 (SimpleStmt -> epsilon .)
    RANGE           reduce using rule 248 (ExpressionIdentListOpt -> epsilon .)


state 332

    (238) ForStmt -> FOR ConditionBlockOpt . Block
    (53) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 146

    Block                          shift and go to state 383

state 333

    (212) Assignment -> ExpressionList . assign_op ExpressionList
    (250) ExpressionIdentifier -> ExpressionList . EQUALS
    (213) assign_op -> . AssignOp
    (214) AssignOp -> . PLUSEQUAL
    (215) AssignOp -> . MINUSEQUAL
    (216) AssignOp -> . TIMESEQUAL
    (217) AssignOp -> . DIVIDE_EQUAL
    (218) AssignOp -> . MODEQUAL
    (219) AssignOp -> . ANDEQUAL
    (220) AssignOp -> . OREQUAL
    (221) AssignOp -> . XOREQUAL
    (222) AssignOp -> . ANDXOR_EQUAL
    (223) AssignOp -> . LSHIFT_EQUAL
    (224) AssignOp -> . RSHIFT_EQUAL
    (225) AssignOp -> . EQUALS

    EQUALS          shift and go to state 384
    PLUSEQUAL       shift and go to state 354
    MINUSEQUAL      shift and go to state 350
    TIMESEQUAL      shift and go to state 359
    DIVIDE_EQUAL    shift and go to state 360
    MODEQUAL        shift and go to state 351
    ANDEQUAL        shift and go to state 357
    OREQUAL         shift and go to state 358
    XOREQUAL        shift and go to state 352
    ANDXOR_EQUAL    shift and go to state 355
    LSHIFT_EQUAL    shift and go to state 347
    RSHIFT_EQUAL    shift and go to state 349

    AssignOp                       shift and go to state 348
    assign_op                      shift and go to state 356

state 334

    (243) Condition -> Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression
    (209) ExpressionStmt -> Expression .
    (210) IncDecStmt -> Expression . INCREMENT
    (211) IncDecStmt -> Expression . DECREMENT
    (73) ExpressionList -> Expression . ExpressionRep
    (74) ExpressionRep -> . ExpressionRep COMMA Expression
    (75) ExpressionRep -> . epsilon
    (275) epsilon -> .

    LCURL           reduce using rule 243 (Condition -> Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184
    SEMICOLON       reduce using rule 209 (ExpressionStmt -> Expression .)
    INCREMENT       shift and go to state 361
    DECREMENT       shift and go to state 362
    COMMA           reduce using rule 275 (epsilon -> .)
    EQUALS          reduce using rule 275 (epsilon -> .)
    PLUSEQUAL       reduce using rule 275 (epsilon -> .)
    MINUSEQUAL      reduce using rule 275 (epsilon -> .)
    TIMESEQUAL      reduce using rule 275 (epsilon -> .)
    DIVIDE_EQUAL    reduce using rule 275 (epsilon -> .)
    MODEQUAL        reduce using rule 275 (epsilon -> .)
    ANDEQUAL        reduce using rule 275 (epsilon -> .)
    OREQUAL         reduce using rule 275 (epsilon -> .)
    XOREQUAL        reduce using rule 275 (epsilon -> .)
    ANDXOR_EQUAL    reduce using rule 275 (epsilon -> .)
    LSHIFT_EQUAL    reduce using rule 275 (epsilon -> .)
    RSHIFT_EQUAL    reduce using rule 275 (epsilon -> .)

    epsilon                        shift and go to state 219
    ExpressionRep                  shift and go to state 218

state 335

    (249) ExpressionIdentListOpt -> ExpressionIdentifier .

    RANGE           reduce using rule 249 (ExpressionIdentListOpt -> ExpressionIdentifier .)


state 336

    (244) ForClause -> SimpleStmt . SEMICOLON ConditionOpt SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 385


state 337

    (241) ConditionBlockOpt -> ForClause .

    LCURL           reduce using rule 241 (ConditionBlockOpt -> ForClause .)


state 338

    (16) TypeToken -> TYPE IDENTIFIER .
    (82) AliasDecl -> IDENTIFIER . EQUALS Type
    (83) TypeDef -> IDENTIFIER . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (17) TypeLit -> . ArrayType
    (18) TypeLit -> . StructType
    (19) TypeLit -> . PointerType
    (20) TypeLit -> . MapType
    (21) TypeLit -> . SliceType
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (37) PointerType -> . MULTIPLY BaseType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType

    LCURL           reduce using rule 16 (TypeToken -> TYPE IDENTIFIER .)
    EQUALS          shift and go to state 95
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 70
    STRUCT          shift and go to state 74
    MULTIPLY        shift and go to state 56
    MAP             shift and go to state 73

    StructType                     shift and go to state 65
    TypeToken                      shift and go to state 58
    Type                           shift and go to state 94
    ArrayType                      shift and go to state 54
    TypeName                       shift and go to state 61
    MapType                        shift and go to state 69
    PointerType                    shift and go to state 79
    TypeLit                        shift and go to state 59
    QualifiedIdent                 shift and go to state 82
    SliceType                      shift and go to state 80

state 339

    (257) LabelOpt -> epsilon .

    SEMICOLON       reduce using rule 257 (LabelOpt -> epsilon .)


state 340

    (255) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOLON       reduce using rule 255 (ContinueStmt -> CONTINUE LabelOpt .)


state 341

    (256) LabelOpt -> Label .

    SEMICOLON       reduce using rule 256 (LabelOpt -> Label .)


state 342

    (232) ExprSwitchStmt -> SWITCH ExpressionOpt . LCURL ExprCaseClauseList RCURL

    LCURL           shift and go to state 386


state 343

    (202) SimpleStmt -> epsilon .
    (163) ExpressionOpt -> epsilon .

    SEMICOLON       reduce using rule 202 (SimpleStmt -> epsilon .)
    LCURL           reduce using rule 163 (ExpressionOpt -> epsilon .)


state 344

    (162) ExpressionOpt -> Expression .
    (209) ExpressionStmt -> Expression .
    (210) IncDecStmt -> Expression . INCREMENT
    (211) IncDecStmt -> Expression . DECREMENT
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression
    (73) ExpressionList -> Expression . ExpressionRep
    (74) ExpressionRep -> . ExpressionRep COMMA Expression
    (75) ExpressionRep -> . epsilon
    (275) epsilon -> .

    LCURL           reduce using rule 162 (ExpressionOpt -> Expression .)
    SEMICOLON       reduce using rule 209 (ExpressionStmt -> Expression .)
    INCREMENT       shift and go to state 361
    DECREMENT       shift and go to state 362
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184
    COMMA           reduce using rule 275 (epsilon -> .)
    PLUSEQUAL       reduce using rule 275 (epsilon -> .)
    MINUSEQUAL      reduce using rule 275 (epsilon -> .)
    TIMESEQUAL      reduce using rule 275 (epsilon -> .)
    DIVIDE_EQUAL    reduce using rule 275 (epsilon -> .)
    MODEQUAL        reduce using rule 275 (epsilon -> .)
    ANDEQUAL        reduce using rule 275 (epsilon -> .)
    OREQUAL         reduce using rule 275 (epsilon -> .)
    XOREQUAL        reduce using rule 275 (epsilon -> .)
    ANDXOR_EQUAL    reduce using rule 275 (epsilon -> .)
    LSHIFT_EQUAL    reduce using rule 275 (epsilon -> .)
    RSHIFT_EQUAL    reduce using rule 275 (epsilon -> .)
    EQUALS          reduce using rule 275 (epsilon -> .)

    epsilon                        shift and go to state 219
    ExpressionRep                  shift and go to state 218

state 345

    (231) ExprSwitchStmt -> SWITCH SimpleStmt . SEMICOLON ExpressionOpt LCURL ExprCaseClauseList RCURL

    SEMICOLON       shift and go to state 387


state 346

    (92) ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 388
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 347

    (223) AssignOp -> LSHIFT_EQUAL .

    NOT             reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    PLUS            reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    MINUS           reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    MULTIPLY        reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    AND             reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    LPAREN          reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    TYPECAST        reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    IDENTIFIER      reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    INT_LIT         reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    FLOAT_LIT       reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    IMAGINARY_LIT   reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    STRING_LIT      reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    STRUCT          reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    LSQUARE         reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    MAP             reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    INT_T           reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    INT             reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    FLOAT           reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    BOOL            reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    COMPLEX         reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    BOOL_T          reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    COMPLEX_T       reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    STRING          reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    FLOAT_T         reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    STRING_T        reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)
    TYPE            reduce using rule 223 (AssignOp -> LSHIFT_EQUAL .)


state 348

    (213) assign_op -> AssignOp .

    NOT             reduce using rule 213 (assign_op -> AssignOp .)
    PLUS            reduce using rule 213 (assign_op -> AssignOp .)
    MINUS           reduce using rule 213 (assign_op -> AssignOp .)
    MULTIPLY        reduce using rule 213 (assign_op -> AssignOp .)
    AND             reduce using rule 213 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 213 (assign_op -> AssignOp .)
    TYPECAST        reduce using rule 213 (assign_op -> AssignOp .)
    IDENTIFIER      reduce using rule 213 (assign_op -> AssignOp .)
    INT_LIT         reduce using rule 213 (assign_op -> AssignOp .)
    FLOAT_LIT       reduce using rule 213 (assign_op -> AssignOp .)
    IMAGINARY_LIT   reduce using rule 213 (assign_op -> AssignOp .)
    STRING_LIT      reduce using rule 213 (assign_op -> AssignOp .)
    STRUCT          reduce using rule 213 (assign_op -> AssignOp .)
    LSQUARE         reduce using rule 213 (assign_op -> AssignOp .)
    MAP             reduce using rule 213 (assign_op -> AssignOp .)
    INT_T           reduce using rule 213 (assign_op -> AssignOp .)
    INT             reduce using rule 213 (assign_op -> AssignOp .)
    FLOAT           reduce using rule 213 (assign_op -> AssignOp .)
    BOOL            reduce using rule 213 (assign_op -> AssignOp .)
    COMPLEX         reduce using rule 213 (assign_op -> AssignOp .)
    BOOL_T          reduce using rule 213 (assign_op -> AssignOp .)
    COMPLEX_T       reduce using rule 213 (assign_op -> AssignOp .)
    STRING          reduce using rule 213 (assign_op -> AssignOp .)
    FLOAT_T         reduce using rule 213 (assign_op -> AssignOp .)
    STRING_T        reduce using rule 213 (assign_op -> AssignOp .)
    TYPE            reduce using rule 213 (assign_op -> AssignOp .)


state 349

    (224) AssignOp -> RSHIFT_EQUAL .

    NOT             reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    PLUS            reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    MINUS           reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    MULTIPLY        reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    AND             reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    LPAREN          reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    TYPECAST        reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    IDENTIFIER      reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    INT_LIT         reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    FLOAT_LIT       reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    IMAGINARY_LIT   reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    STRING_LIT      reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    STRUCT          reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    LSQUARE         reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    MAP             reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    INT_T           reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    INT             reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    FLOAT           reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    BOOL            reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    COMPLEX         reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    BOOL_T          reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    COMPLEX_T       reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    STRING          reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    FLOAT_T         reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    STRING_T        reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)
    TYPE            reduce using rule 224 (AssignOp -> RSHIFT_EQUAL .)


state 350

    (215) AssignOp -> MINUSEQUAL .

    NOT             reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    PLUS            reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    MINUS           reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    MULTIPLY        reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    AND             reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    LPAREN          reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    TYPECAST        reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    IDENTIFIER      reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    INT_LIT         reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    FLOAT_LIT       reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    IMAGINARY_LIT   reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    STRING_LIT      reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    STRUCT          reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    LSQUARE         reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    MAP             reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    INT_T           reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    INT             reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    FLOAT           reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    BOOL            reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    COMPLEX         reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    BOOL_T          reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    COMPLEX_T       reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    STRING          reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    FLOAT_T         reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    STRING_T        reduce using rule 215 (AssignOp -> MINUSEQUAL .)
    TYPE            reduce using rule 215 (AssignOp -> MINUSEQUAL .)


state 351

    (218) AssignOp -> MODEQUAL .

    NOT             reduce using rule 218 (AssignOp -> MODEQUAL .)
    PLUS            reduce using rule 218 (AssignOp -> MODEQUAL .)
    MINUS           reduce using rule 218 (AssignOp -> MODEQUAL .)
    MULTIPLY        reduce using rule 218 (AssignOp -> MODEQUAL .)
    AND             reduce using rule 218 (AssignOp -> MODEQUAL .)
    LPAREN          reduce using rule 218 (AssignOp -> MODEQUAL .)
    TYPECAST        reduce using rule 218 (AssignOp -> MODEQUAL .)
    IDENTIFIER      reduce using rule 218 (AssignOp -> MODEQUAL .)
    INT_LIT         reduce using rule 218 (AssignOp -> MODEQUAL .)
    FLOAT_LIT       reduce using rule 218 (AssignOp -> MODEQUAL .)
    IMAGINARY_LIT   reduce using rule 218 (AssignOp -> MODEQUAL .)
    STRING_LIT      reduce using rule 218 (AssignOp -> MODEQUAL .)
    STRUCT          reduce using rule 218 (AssignOp -> MODEQUAL .)
    LSQUARE         reduce using rule 218 (AssignOp -> MODEQUAL .)
    MAP             reduce using rule 218 (AssignOp -> MODEQUAL .)
    INT_T           reduce using rule 218 (AssignOp -> MODEQUAL .)
    INT             reduce using rule 218 (AssignOp -> MODEQUAL .)
    FLOAT           reduce using rule 218 (AssignOp -> MODEQUAL .)
    BOOL            reduce using rule 218 (AssignOp -> MODEQUAL .)
    COMPLEX         reduce using rule 218 (AssignOp -> MODEQUAL .)
    BOOL_T          reduce using rule 218 (AssignOp -> MODEQUAL .)
    COMPLEX_T       reduce using rule 218 (AssignOp -> MODEQUAL .)
    STRING          reduce using rule 218 (AssignOp -> MODEQUAL .)
    FLOAT_T         reduce using rule 218 (AssignOp -> MODEQUAL .)
    STRING_T        reduce using rule 218 (AssignOp -> MODEQUAL .)
    TYPE            reduce using rule 218 (AssignOp -> MODEQUAL .)


state 352

    (221) AssignOp -> XOREQUAL .

    NOT             reduce using rule 221 (AssignOp -> XOREQUAL .)
    PLUS            reduce using rule 221 (AssignOp -> XOREQUAL .)
    MINUS           reduce using rule 221 (AssignOp -> XOREQUAL .)
    MULTIPLY        reduce using rule 221 (AssignOp -> XOREQUAL .)
    AND             reduce using rule 221 (AssignOp -> XOREQUAL .)
    LPAREN          reduce using rule 221 (AssignOp -> XOREQUAL .)
    TYPECAST        reduce using rule 221 (AssignOp -> XOREQUAL .)
    IDENTIFIER      reduce using rule 221 (AssignOp -> XOREQUAL .)
    INT_LIT         reduce using rule 221 (AssignOp -> XOREQUAL .)
    FLOAT_LIT       reduce using rule 221 (AssignOp -> XOREQUAL .)
    IMAGINARY_LIT   reduce using rule 221 (AssignOp -> XOREQUAL .)
    STRING_LIT      reduce using rule 221 (AssignOp -> XOREQUAL .)
    STRUCT          reduce using rule 221 (AssignOp -> XOREQUAL .)
    LSQUARE         reduce using rule 221 (AssignOp -> XOREQUAL .)
    MAP             reduce using rule 221 (AssignOp -> XOREQUAL .)
    INT_T           reduce using rule 221 (AssignOp -> XOREQUAL .)
    INT             reduce using rule 221 (AssignOp -> XOREQUAL .)
    FLOAT           reduce using rule 221 (AssignOp -> XOREQUAL .)
    BOOL            reduce using rule 221 (AssignOp -> XOREQUAL .)
    COMPLEX         reduce using rule 221 (AssignOp -> XOREQUAL .)
    BOOL_T          reduce using rule 221 (AssignOp -> XOREQUAL .)
    COMPLEX_T       reduce using rule 221 (AssignOp -> XOREQUAL .)
    STRING          reduce using rule 221 (AssignOp -> XOREQUAL .)
    FLOAT_T         reduce using rule 221 (AssignOp -> XOREQUAL .)
    STRING_T        reduce using rule 221 (AssignOp -> XOREQUAL .)
    TYPE            reduce using rule 221 (AssignOp -> XOREQUAL .)


state 353

    (225) AssignOp -> EQUALS .

    NOT             reduce using rule 225 (AssignOp -> EQUALS .)
    PLUS            reduce using rule 225 (AssignOp -> EQUALS .)
    MINUS           reduce using rule 225 (AssignOp -> EQUALS .)
    MULTIPLY        reduce using rule 225 (AssignOp -> EQUALS .)
    AND             reduce using rule 225 (AssignOp -> EQUALS .)
    LPAREN          reduce using rule 225 (AssignOp -> EQUALS .)
    TYPECAST        reduce using rule 225 (AssignOp -> EQUALS .)
    IDENTIFIER      reduce using rule 225 (AssignOp -> EQUALS .)
    INT_LIT         reduce using rule 225 (AssignOp -> EQUALS .)
    FLOAT_LIT       reduce using rule 225 (AssignOp -> EQUALS .)
    IMAGINARY_LIT   reduce using rule 225 (AssignOp -> EQUALS .)
    STRING_LIT      reduce using rule 225 (AssignOp -> EQUALS .)
    STRUCT          reduce using rule 225 (AssignOp -> EQUALS .)
    LSQUARE         reduce using rule 225 (AssignOp -> EQUALS .)
    MAP             reduce using rule 225 (AssignOp -> EQUALS .)
    INT_T           reduce using rule 225 (AssignOp -> EQUALS .)
    INT             reduce using rule 225 (AssignOp -> EQUALS .)
    FLOAT           reduce using rule 225 (AssignOp -> EQUALS .)
    BOOL            reduce using rule 225 (AssignOp -> EQUALS .)
    COMPLEX         reduce using rule 225 (AssignOp -> EQUALS .)
    BOOL_T          reduce using rule 225 (AssignOp -> EQUALS .)
    COMPLEX_T       reduce using rule 225 (AssignOp -> EQUALS .)
    STRING          reduce using rule 225 (AssignOp -> EQUALS .)
    FLOAT_T         reduce using rule 225 (AssignOp -> EQUALS .)
    STRING_T        reduce using rule 225 (AssignOp -> EQUALS .)
    TYPE            reduce using rule 225 (AssignOp -> EQUALS .)


state 354

    (214) AssignOp -> PLUSEQUAL .

    NOT             reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    PLUS            reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    MINUS           reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    MULTIPLY        reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    AND             reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    LPAREN          reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    TYPECAST        reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    IDENTIFIER      reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    INT_LIT         reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    FLOAT_LIT       reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    IMAGINARY_LIT   reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    STRING_LIT      reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    STRUCT          reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    LSQUARE         reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    MAP             reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    INT_T           reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    INT             reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    FLOAT           reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    BOOL            reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    COMPLEX         reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    BOOL_T          reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    COMPLEX_T       reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    STRING          reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    FLOAT_T         reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    STRING_T        reduce using rule 214 (AssignOp -> PLUSEQUAL .)
    TYPE            reduce using rule 214 (AssignOp -> PLUSEQUAL .)


state 355

    (222) AssignOp -> ANDXOR_EQUAL .

    NOT             reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    PLUS            reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    MINUS           reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    MULTIPLY        reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    AND             reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    LPAREN          reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    TYPECAST        reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    IDENTIFIER      reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    INT_LIT         reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    FLOAT_LIT       reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    IMAGINARY_LIT   reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    STRING_LIT      reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    STRUCT          reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    LSQUARE         reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    MAP             reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    INT_T           reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    INT             reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    FLOAT           reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    BOOL            reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    COMPLEX         reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    BOOL_T          reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    COMPLEX_T       reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    STRING          reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    FLOAT_T         reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    STRING_T        reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)
    TYPE            reduce using rule 222 (AssignOp -> ANDXOR_EQUAL .)


state 356

    (212) Assignment -> ExpressionList assign_op . ExpressionList
    (73) ExpressionList -> . Expression ExpressionRep
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    Conversion                     shift and go to state 104
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    ExpressionList                 shift and go to state 389
    MapType                        shift and go to state 123
    Expression                     shift and go to state 160
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    CompositeLit                   shift and go to state 116
    QualifiedIdent                 shift and go to state 82

state 357

    (219) AssignOp -> ANDEQUAL .

    NOT             reduce using rule 219 (AssignOp -> ANDEQUAL .)
    PLUS            reduce using rule 219 (AssignOp -> ANDEQUAL .)
    MINUS           reduce using rule 219 (AssignOp -> ANDEQUAL .)
    MULTIPLY        reduce using rule 219 (AssignOp -> ANDEQUAL .)
    AND             reduce using rule 219 (AssignOp -> ANDEQUAL .)
    LPAREN          reduce using rule 219 (AssignOp -> ANDEQUAL .)
    TYPECAST        reduce using rule 219 (AssignOp -> ANDEQUAL .)
    IDENTIFIER      reduce using rule 219 (AssignOp -> ANDEQUAL .)
    INT_LIT         reduce using rule 219 (AssignOp -> ANDEQUAL .)
    FLOAT_LIT       reduce using rule 219 (AssignOp -> ANDEQUAL .)
    IMAGINARY_LIT   reduce using rule 219 (AssignOp -> ANDEQUAL .)
    STRING_LIT      reduce using rule 219 (AssignOp -> ANDEQUAL .)
    STRUCT          reduce using rule 219 (AssignOp -> ANDEQUAL .)
    LSQUARE         reduce using rule 219 (AssignOp -> ANDEQUAL .)
    MAP             reduce using rule 219 (AssignOp -> ANDEQUAL .)
    INT_T           reduce using rule 219 (AssignOp -> ANDEQUAL .)
    INT             reduce using rule 219 (AssignOp -> ANDEQUAL .)
    FLOAT           reduce using rule 219 (AssignOp -> ANDEQUAL .)
    BOOL            reduce using rule 219 (AssignOp -> ANDEQUAL .)
    COMPLEX         reduce using rule 219 (AssignOp -> ANDEQUAL .)
    BOOL_T          reduce using rule 219 (AssignOp -> ANDEQUAL .)
    COMPLEX_T       reduce using rule 219 (AssignOp -> ANDEQUAL .)
    STRING          reduce using rule 219 (AssignOp -> ANDEQUAL .)
    FLOAT_T         reduce using rule 219 (AssignOp -> ANDEQUAL .)
    STRING_T        reduce using rule 219 (AssignOp -> ANDEQUAL .)
    TYPE            reduce using rule 219 (AssignOp -> ANDEQUAL .)


state 358

    (220) AssignOp -> OREQUAL .

    NOT             reduce using rule 220 (AssignOp -> OREQUAL .)
    PLUS            reduce using rule 220 (AssignOp -> OREQUAL .)
    MINUS           reduce using rule 220 (AssignOp -> OREQUAL .)
    MULTIPLY        reduce using rule 220 (AssignOp -> OREQUAL .)
    AND             reduce using rule 220 (AssignOp -> OREQUAL .)
    LPAREN          reduce using rule 220 (AssignOp -> OREQUAL .)
    TYPECAST        reduce using rule 220 (AssignOp -> OREQUAL .)
    IDENTIFIER      reduce using rule 220 (AssignOp -> OREQUAL .)
    INT_LIT         reduce using rule 220 (AssignOp -> OREQUAL .)
    FLOAT_LIT       reduce using rule 220 (AssignOp -> OREQUAL .)
    IMAGINARY_LIT   reduce using rule 220 (AssignOp -> OREQUAL .)
    STRING_LIT      reduce using rule 220 (AssignOp -> OREQUAL .)
    STRUCT          reduce using rule 220 (AssignOp -> OREQUAL .)
    LSQUARE         reduce using rule 220 (AssignOp -> OREQUAL .)
    MAP             reduce using rule 220 (AssignOp -> OREQUAL .)
    INT_T           reduce using rule 220 (AssignOp -> OREQUAL .)
    INT             reduce using rule 220 (AssignOp -> OREQUAL .)
    FLOAT           reduce using rule 220 (AssignOp -> OREQUAL .)
    BOOL            reduce using rule 220 (AssignOp -> OREQUAL .)
    COMPLEX         reduce using rule 220 (AssignOp -> OREQUAL .)
    BOOL_T          reduce using rule 220 (AssignOp -> OREQUAL .)
    COMPLEX_T       reduce using rule 220 (AssignOp -> OREQUAL .)
    STRING          reduce using rule 220 (AssignOp -> OREQUAL .)
    FLOAT_T         reduce using rule 220 (AssignOp -> OREQUAL .)
    STRING_T        reduce using rule 220 (AssignOp -> OREQUAL .)
    TYPE            reduce using rule 220 (AssignOp -> OREQUAL .)


state 359

    (216) AssignOp -> TIMESEQUAL .

    NOT             reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    PLUS            reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    MINUS           reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    MULTIPLY        reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    AND             reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    LPAREN          reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    TYPECAST        reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    IDENTIFIER      reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    INT_LIT         reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    FLOAT_LIT       reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    IMAGINARY_LIT   reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    STRING_LIT      reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    STRUCT          reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    LSQUARE         reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    MAP             reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    INT_T           reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    INT             reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    FLOAT           reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    BOOL            reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    COMPLEX         reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    BOOL_T          reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    COMPLEX_T       reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    STRING          reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    FLOAT_T         reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    STRING_T        reduce using rule 216 (AssignOp -> TIMESEQUAL .)
    TYPE            reduce using rule 216 (AssignOp -> TIMESEQUAL .)


state 360

    (217) AssignOp -> DIVIDE_EQUAL .

    NOT             reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    PLUS            reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    MINUS           reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    MULTIPLY        reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    AND             reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    LPAREN          reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    TYPECAST        reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    IDENTIFIER      reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    INT_LIT         reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    FLOAT_LIT       reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    IMAGINARY_LIT   reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    STRING_LIT      reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    STRUCT          reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    LSQUARE         reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    MAP             reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    INT_T           reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    INT             reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    FLOAT           reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    BOOL            reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    COMPLEX         reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    BOOL_T          reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    COMPLEX_T       reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    STRING          reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    FLOAT_T         reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    STRING_T        reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)
    TYPE            reduce using rule 217 (AssignOp -> DIVIDE_EQUAL .)


state 361

    (210) IncDecStmt -> Expression INCREMENT .

    SEMICOLON       reduce using rule 210 (IncDecStmt -> Expression INCREMENT .)
    LCURL           reduce using rule 210 (IncDecStmt -> Expression INCREMENT .)


state 362

    (211) IncDecStmt -> Expression DECREMENT .

    SEMICOLON       reduce using rule 211 (IncDecStmt -> Expression DECREMENT .)
    LCURL           reduce using rule 211 (IncDecStmt -> Expression DECREMENT .)


state 363

    (254) BreakStmt -> BREAK LabelOpt .

    SEMICOLON       reduce using rule 254 (BreakStmt -> BREAK LabelOpt .)


state 364

    (189) SelectStmt -> SELECT LCURL . CCX RCURL
    (190) SelectStmt -> SELECT LCURL . RCURL
    (191) CCX -> . CommClause
    (192) CCX -> . CCX CommClause
    (193) CommClause -> . CommCase COLON StatementList
    (194) CommCase -> . CASE SendStmt DEFAULT
    (195) CommCase -> . CASE RecvStmt DEFAULT

    RCURL           shift and go to state 392
    CASE            shift and go to state 390

    CCX                            shift and go to state 391
    CommClause                     shift and go to state 393
    CommCase                       shift and go to state 394

state 365

    (226) IfStmt -> IF Expression . Block ElseOpt
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression
    (53) Block -> . LCURL StatementList RCURL

    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184
    LCURL           shift and go to state 146

    Block                          shift and go to state 395

state 366

    (74) ExpressionRep -> ExpressionRep COMMA Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    COMMA           reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOLON       reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LCURL           reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    COLON           reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    EQUALS          reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PLUSEQUAL       reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MINUSEQUAL      reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    TIMESEQUAL      reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    DIVIDE_EQUAL    reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MODEQUAL        reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    ANDEQUAL        reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OREQUAL         reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    XOREQUAL        reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    ANDXOR_EQUAL    reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LSHIFT_EQUAL    reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RSHIFT_EQUAL    reduce using rule 74 (ExpressionRep -> ExpressionRep COMMA Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 367

    (136) Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt . RSQUARE

    RSQUARE         shift and go to state 396


state 368

    (137) Slice -> LSQUARE ExpressionOpt COLON Expression . COLON Expression RSQUARE
    (162) ExpressionOpt -> Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    COLON           shift and go to state 397
    RSQUARE         reduce using rule 162 (ExpressionOpt -> Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 369

    (138) TypeAssertion -> DOT LPAREN Type RPAREN .

    DOT             reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSQUARE         reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LPAREN          reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COMPARE_OR      reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COMPARE_AND     reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    EQEQ            reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    NOTEQUALS       reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LESSTHAN        reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    GREATERTHAN     reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LESSTHAN_EQUAL  reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    GREATERTHAN_EQUAL reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OR              reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    XOR             reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    ANDXOR          reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DIVIDE          reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MODULO          reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSHIFT          reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSHIFT          reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUS            reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUS           reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MULTIPLY        reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    AND             reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSQUARE         reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COMMA           reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RPAREN          reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COLON           reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RCURL           reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    INCREMENT       reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DECREMENT       reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUSEQUAL       reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUSEQUAL      reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    TIMESEQUAL      reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DIVIDE_EQUAL    reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MODEQUAL        reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    ANDEQUAL        reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OREQUAL         reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    XOREQUAL        reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    ANDXOR_EQUAL    reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSHIFT_EQUAL    reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSHIFT_EQUAL    reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    EQUALS          reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LCURL           reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LEFT_ARROW      reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DEFAULT         reduce using rule 138 (TypeAssertion -> DOT LPAREN Type RPAREN .)


state 370

    (171) Conversion -> TYPECAST Type LPAREN Expression RPAREN .

    DOT             reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSQUARE         reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COMPARE_OR      reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COMPARE_AND     reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    NOTEQUALS       reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LESSTHAN        reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    GREATERTHAN     reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LESSTHAN_EQUAL  reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    GREATERTHAN_EQUAL reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    OR              reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    XOR             reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    ANDXOR          reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MODULO          reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    PLUS            reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MINUS           reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MULTIPLY        reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    AND             reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COMMA           reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COLON           reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RCURL           reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    INCREMENT       reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DECREMENT       reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    PLUSEQUAL       reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MINUSEQUAL      reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    TIMESEQUAL      reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DIVIDE_EQUAL    reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MODEQUAL        reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    ANDEQUAL        reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    OREQUAL         reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    XOREQUAL        reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    ANDXOR_EQUAL    reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSHIFT_EQUAL    reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSHIFT_EQUAL    reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LCURL           reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LEFT_ARROW      reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DEFAULT         reduce using rule 171 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)


state 371

    (111) LiteralValue -> LCURL ElementList COMMA RCURL .

    RCURL           reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    COMMA           reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    DOT             reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    LSQUARE         reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    LPAREN          reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    COMPARE_OR      reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    COMPARE_AND     reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    EQEQ            reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    NOTEQUALS       reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    LESSTHAN        reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    GREATERTHAN     reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    LESSTHAN_EQUAL  reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    GREATERTHAN_EQUAL reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    OR              reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    XOR             reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    ANDXOR          reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    DIVIDE          reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    MODULO          reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    LSHIFT          reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    RSHIFT          reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    PLUS            reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    MINUS           reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    MULTIPLY        reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    AND             reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    RSQUARE         reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    SEMICOLON       reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    RPAREN          reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    COLON           reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    INCREMENT       reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    DECREMENT       reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    PLUSEQUAL       reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    MINUSEQUAL      reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    TIMESEQUAL      reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    DIVIDE_EQUAL    reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    MODEQUAL        reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    ANDEQUAL        reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    OREQUAL         reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    XOREQUAL        reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    ANDXOR_EQUAL    reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    LSHIFT_EQUAL    reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    RSHIFT_EQUAL    reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    EQUALS          reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    LCURL           reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    LEFT_ARROW      reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)
    DEFAULT         reduce using rule 111 (LiteralValue -> LCURL ElementList COMMA RCURL .)


state 372

    (113) ElementList -> ElementList COMMA KeyedElement .

    RCURL           reduce using rule 113 (ElementList -> ElementList COMMA KeyedElement .)
    COMMA           reduce using rule 113 (ElementList -> ElementList COMMA KeyedElement .)


state 373

    (115) KeyedElement -> Key COLON Element .

    RCURL           reduce using rule 115 (KeyedElement -> Key COLON Element .)
    COMMA           reduce using rule 115 (KeyedElement -> Key COLON Element .)


state 374

    (120) Element -> LiteralValue .

    RCURL           reduce using rule 120 (Element -> LiteralValue .)
    COMMA           reduce using rule 120 (Element -> LiteralValue .)


state 375

    (119) Element -> Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RCURL           reduce using rule 119 (Element -> Expression .)
    COMMA           reduce using rule 119 (Element -> Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 376

    (116) KeyedElement -> IDENTIFIER COLON Element .

    RCURL           reduce using rule 116 (KeyedElement -> IDENTIFIER COLON Element .)
    COMMA           reduce using rule 116 (KeyedElement -> IDENTIFIER COLON Element .)


state 377

    (35) TagOpt -> epsilon .

    SEMICOLON       reduce using rule 35 (TagOpt -> epsilon .)


state 378

    (34) TagOpt -> Tag .

    SEMICOLON       reduce using rule 34 (TagOpt -> Tag .)


state 379

    (33) FieldDecl -> IdentifierList Type TagOpt .

    SEMICOLON       reduce using rule 33 (FieldDecl -> IdentifierList Type TagOpt .)


state 380

    (36) Tag -> STRING_LIT .

    SEMICOLON       reduce using rule 36 (Tag -> STRING_LIT .)


state 381

    (207) LabeledStmt -> Label COLON Statement .

    SEMICOLON       reduce using rule 207 (LabeledStmt -> Label COLON Statement .)


state 382

    (247) RangeClause -> ExpressionIdentListOpt RANGE . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    Operand                        shift and go to state 130
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 398
    LiteralType                    shift and go to state 129
    PrimaryExpr                    shift and go to state 121
    QualifiedIdent                 shift and go to state 82

state 383

    (238) ForStmt -> FOR ConditionBlockOpt Block .

    SEMICOLON       reduce using rule 238 (ForStmt -> FOR ConditionBlockOpt Block .)


state 384

    (250) ExpressionIdentifier -> ExpressionList EQUALS .
    (225) AssignOp -> EQUALS .

    RANGE           reduce using rule 250 (ExpressionIdentifier -> ExpressionList EQUALS .)
    NOT             reduce using rule 225 (AssignOp -> EQUALS .)
    PLUS            reduce using rule 225 (AssignOp -> EQUALS .)
    MINUS           reduce using rule 225 (AssignOp -> EQUALS .)
    MULTIPLY        reduce using rule 225 (AssignOp -> EQUALS .)
    AND             reduce using rule 225 (AssignOp -> EQUALS .)
    LPAREN          reduce using rule 225 (AssignOp -> EQUALS .)
    TYPECAST        reduce using rule 225 (AssignOp -> EQUALS .)
    IDENTIFIER      reduce using rule 225 (AssignOp -> EQUALS .)
    INT_LIT         reduce using rule 225 (AssignOp -> EQUALS .)
    FLOAT_LIT       reduce using rule 225 (AssignOp -> EQUALS .)
    IMAGINARY_LIT   reduce using rule 225 (AssignOp -> EQUALS .)
    STRING_LIT      reduce using rule 225 (AssignOp -> EQUALS .)
    STRUCT          reduce using rule 225 (AssignOp -> EQUALS .)
    LSQUARE         reduce using rule 225 (AssignOp -> EQUALS .)
    MAP             reduce using rule 225 (AssignOp -> EQUALS .)
    INT_T           reduce using rule 225 (AssignOp -> EQUALS .)
    INT             reduce using rule 225 (AssignOp -> EQUALS .)
    FLOAT           reduce using rule 225 (AssignOp -> EQUALS .)
    BOOL            reduce using rule 225 (AssignOp -> EQUALS .)
    COMPLEX         reduce using rule 225 (AssignOp -> EQUALS .)
    BOOL_T          reduce using rule 225 (AssignOp -> EQUALS .)
    COMPLEX_T       reduce using rule 225 (AssignOp -> EQUALS .)
    STRING          reduce using rule 225 (AssignOp -> EQUALS .)
    FLOAT_T         reduce using rule 225 (AssignOp -> EQUALS .)
    STRING_T        reduce using rule 225 (AssignOp -> EQUALS .)
    TYPE            reduce using rule 225 (AssignOp -> EQUALS .)


state 385

    (244) ForClause -> SimpleStmt SEMICOLON . ConditionOpt SEMICOLON SimpleStmt
    (245) ConditionOpt -> . epsilon
    (246) ConditionOpt -> . Condition
    (275) epsilon -> .
    (243) Condition -> . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    SEMICOLON       reduce using rule 275 (epsilon -> .)
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    Condition                      shift and go to state 399
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    epsilon                        shift and go to state 400
    UnaryExpr                      shift and go to state 120
    ConditionOpt                   shift and go to state 401
    CompositeLit                   shift and go to state 116
    ArrayType                      shift and go to state 106
    Expression                     shift and go to state 402
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82
    MapType                        shift and go to state 123

state 386

    (232) ExprSwitchStmt -> SWITCH ExpressionOpt LCURL . ExprCaseClauseList RCURL
    (233) ExprCaseClauseList -> . epsilon
    (234) ExprCaseClauseList -> . ExprCaseClauseList ExprCaseClause
    (275) epsilon -> .

    RCURL           reduce using rule 275 (epsilon -> .)
    CASE            reduce using rule 275 (epsilon -> .)
    DEFAULT         reduce using rule 275 (epsilon -> .)

    ExprCaseClauseList             shift and go to state 404
    epsilon                        shift and go to state 403

state 387

    (231) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON . ExpressionOpt LCURL ExprCaseClauseList RCURL
    (162) ExpressionOpt -> . Expression
    (163) ExpressionOpt -> . epsilon
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (275) epsilon -> .
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    LCURL           reduce using rule 275 (epsilon -> .)
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    ExpressionOpt                  shift and go to state 405
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    epsilon                        shift and go to state 225
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    ArrayType                      shift and go to state 106
    Expression                     shift and go to state 406
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82
    MapType                        shift and go to state 123

state 388

    (92) ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 92 (ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression .)
    LCURL           reduce using rule 92 (ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 389

    (212) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOLON       reduce using rule 212 (Assignment -> ExpressionList assign_op ExpressionList .)
    LCURL           reduce using rule 212 (Assignment -> ExpressionList assign_op ExpressionList .)


state 390

    (194) CommCase -> CASE . SendStmt DEFAULT
    (195) CommCase -> CASE . RecvStmt DEFAULT
    (196) SendStmt -> . Channel LEFT_ARROW Expression
    (198) RecvStmt -> . ExpressionList EQUALS RecvExpr
    (199) RecvStmt -> . IdentifierList SHORT_ASSIGNMENT RecvExpr
    (197) Channel -> . Expression
    (73) ExpressionList -> . Expression ExpressionRep
    (69) IdentifierList -> . IDENTIFIER
    (70) IdentifierList -> . IdentifierRep
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (71) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (72) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    IDENTIFIER      shift and go to state 410
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    SendStmt                       shift and go to state 407
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    Conversion                     shift and go to state 104
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    IdentifierList                 shift and go to state 408
    Channel                        shift and go to state 409
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    ExpressionList                 shift and go to state 411
    MapType                        shift and go to state 123
    RecvStmt                       shift and go to state 412
    Expression                     shift and go to state 413
    LiteralType                    shift and go to state 129
    IdentifierRep                  shift and go to state 32
    Operand                        shift and go to state 130
    CompositeLit                   shift and go to state 116
    QualifiedIdent                 shift and go to state 82

state 391

    (189) SelectStmt -> SELECT LCURL CCX . RCURL
    (192) CCX -> CCX . CommClause
    (193) CommClause -> . CommCase COLON StatementList
    (194) CommCase -> . CASE SendStmt DEFAULT
    (195) CommCase -> . CASE RecvStmt DEFAULT

    RCURL           shift and go to state 414
    CASE            shift and go to state 390

    CommClause                     shift and go to state 415
    CommCase                       shift and go to state 394

state 392

    (190) SelectStmt -> SELECT LCURL RCURL .

    SEMICOLON       reduce using rule 190 (SelectStmt -> SELECT LCURL RCURL .)


state 393

    (191) CCX -> CommClause .

    RCURL           reduce using rule 191 (CCX -> CommClause .)
    CASE            reduce using rule 191 (CCX -> CommClause .)


state 394

    (193) CommClause -> CommCase . COLON StatementList

    COLON           shift and go to state 416


state 395

    (226) IfStmt -> IF Expression Block . ElseOpt
    (227) ElseOpt -> . ELSE IfStmt
    (228) ElseOpt -> . ELSE Block
    (229) ElseOpt -> . epsilon
    (275) epsilon -> .

    ELSE            shift and go to state 418
    SEMICOLON       reduce using rule 275 (epsilon -> .)

    epsilon                        shift and go to state 417
    ElseOpt                        shift and go to state 419

state 396

    (136) Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .

    DOT             reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSQUARE         reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LPAREN          reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COMPARE_OR      reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COMPARE_AND     reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    EQEQ            reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    NOTEQUALS       reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LESSTHAN        reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    GREATERTHAN     reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LESSTHAN_EQUAL  reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    GREATERTHAN_EQUAL reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    OR              reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    XOR             reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    ANDXOR          reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DIVIDE          reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MODULO          reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSHIFT          reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSHIFT          reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    PLUS            reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MINUS           reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MULTIPLY        reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    AND             reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSQUARE         reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COMMA           reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    SEMICOLON       reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RPAREN          reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COLON           reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RCURL           reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    INCREMENT       reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DECREMENT       reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    PLUSEQUAL       reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MINUSEQUAL      reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    TIMESEQUAL      reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DIVIDE_EQUAL    reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MODEQUAL        reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    ANDEQUAL        reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    OREQUAL         reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    XOREQUAL        reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    ANDXOR_EQUAL    reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSHIFT_EQUAL    reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSHIFT_EQUAL    reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    EQUALS          reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LCURL           reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LEFT_ARROW      reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DEFAULT         reduce using rule 136 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)


state 397

    (137) Slice -> LSQUARE ExpressionOpt COLON Expression COLON . Expression RSQUARE
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 420
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 398

    (247) RangeClause -> ExpressionIdentListOpt RANGE Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    LCURL           reduce using rule 247 (RangeClause -> ExpressionIdentListOpt RANGE Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 399

    (246) ConditionOpt -> Condition .

    SEMICOLON       reduce using rule 246 (ConditionOpt -> Condition .)


state 400

    (245) ConditionOpt -> epsilon .

    SEMICOLON       reduce using rule 245 (ConditionOpt -> epsilon .)


state 401

    (244) ForClause -> SimpleStmt SEMICOLON ConditionOpt . SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 421


state 402

    (243) Condition -> Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 243 (Condition -> Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 403

    (233) ExprCaseClauseList -> epsilon .

    RCURL           reduce using rule 233 (ExprCaseClauseList -> epsilon .)
    CASE            reduce using rule 233 (ExprCaseClauseList -> epsilon .)
    DEFAULT         reduce using rule 233 (ExprCaseClauseList -> epsilon .)


state 404

    (232) ExprSwitchStmt -> SWITCH ExpressionOpt LCURL ExprCaseClauseList . RCURL
    (234) ExprCaseClauseList -> ExprCaseClauseList . ExprCaseClause
    (235) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (236) ExprSwitchCase -> . CASE ExpressionList
    (237) ExprSwitchCase -> . DEFAULT

    RCURL           shift and go to state 425
    CASE            shift and go to state 422
    DEFAULT         shift and go to state 424

    ExprSwitchCase                 shift and go to state 423
    ExprCaseClause                 shift and go to state 426

state 405

    (231) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionOpt . LCURL ExprCaseClauseList RCURL

    LCURL           shift and go to state 427


state 406

    (162) ExpressionOpt -> Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    LCURL           reduce using rule 162 (ExpressionOpt -> Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 407

    (194) CommCase -> CASE SendStmt . DEFAULT

    DEFAULT         shift and go to state 428


state 408

    (199) RecvStmt -> IdentifierList . SHORT_ASSIGNMENT RecvExpr

    SHORT_ASSIGNMENT shift and go to state 429


state 409

    (196) SendStmt -> Channel . LEFT_ARROW Expression

    LEFT_ARROW      shift and go to state 430


state 410

    (69) IdentifierList -> IDENTIFIER .
    (72) IdentifierRep -> IDENTIFIER . COMMA IDENTIFIER
    (125) OperandName -> IDENTIFIER .
    (126) QualifiedIdent -> IDENTIFIER . DOT TypeName

    SHORT_ASSIGNMENT reduce using rule 69 (IdentifierList -> IDENTIFIER .)
    DOT             reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSQUARE         reduce using rule 125 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMPARE_OR      reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMPARE_AND     reduce using rule 125 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 125 (OperandName -> IDENTIFIER .)
    NOTEQUALS       reduce using rule 125 (OperandName -> IDENTIFIER .)
    LESSTHAN        reduce using rule 125 (OperandName -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 125 (OperandName -> IDENTIFIER .)
    LESSTHAN_EQUAL  reduce using rule 125 (OperandName -> IDENTIFIER .)
    GREATERTHAN_EQUAL reduce using rule 125 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 125 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 125 (OperandName -> IDENTIFIER .)
    ANDXOR          reduce using rule 125 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 125 (OperandName -> IDENTIFIER .)
    MODULO          reduce using rule 125 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 125 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 125 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 125 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 125 (OperandName -> IDENTIFIER .)
    MULTIPLY        reduce using rule 125 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 125 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 125 (OperandName -> IDENTIFIER .)
    LEFT_ARROW      reduce using rule 125 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 125 (OperandName -> IDENTIFIER .)

  ! COMMA           [ shift and go to state 83 ]
  ! DOT             [ shift and go to state 103 ]


state 411

    (198) RecvStmt -> ExpressionList . EQUALS RecvExpr

    EQUALS          shift and go to state 431


state 412

    (195) CommCase -> CASE RecvStmt . DEFAULT

    DEFAULT         shift and go to state 432


state 413

    (197) Channel -> Expression .
    (73) ExpressionList -> Expression . ExpressionRep
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression
    (74) ExpressionRep -> . ExpressionRep COMMA Expression
    (75) ExpressionRep -> . epsilon
    (275) epsilon -> .

    LEFT_ARROW      reduce using rule 197 (Channel -> Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184
    COMMA           reduce using rule 275 (epsilon -> .)
    EQUALS          reduce using rule 275 (epsilon -> .)

    epsilon                        shift and go to state 219
    ExpressionRep                  shift and go to state 218

state 414

    (189) SelectStmt -> SELECT LCURL CCX RCURL .

    SEMICOLON       reduce using rule 189 (SelectStmt -> SELECT LCURL CCX RCURL .)


state 415

    (192) CCX -> CCX CommClause .

    RCURL           reduce using rule 192 (CCX -> CCX CommClause .)
    CASE            reduce using rule 192 (CCX -> CCX CommClause .)


state 416

    (193) CommClause -> CommCase COLON . StatementList
    (54) StatementList -> . StatementRep
    (55) StatementRep -> . StatementRep Statement SEMICOLON
    (56) StatementRep -> . epsilon
    (275) epsilon -> .

    RETURN          reduce using rule 275 (epsilon -> .)
    BREAK           reduce using rule 275 (epsilon -> .)
    CONTINUE        reduce using rule 275 (epsilon -> .)
    GOTO            reduce using rule 275 (epsilon -> .)
    LCURL           reduce using rule 275 (epsilon -> .)
    IF              reduce using rule 275 (epsilon -> .)
    FOR             reduce using rule 275 (epsilon -> .)
    DEFER           reduce using rule 275 (epsilon -> .)
    SELECT          reduce using rule 275 (epsilon -> .)
    FALLTHROUGH     reduce using rule 275 (epsilon -> .)
    GO              reduce using rule 275 (epsilon -> .)
    CONST           reduce using rule 275 (epsilon -> .)
    TYPE            reduce using rule 275 (epsilon -> .)
    VAR             reduce using rule 275 (epsilon -> .)
    IDENTIFIER      reduce using rule 275 (epsilon -> .)
    SWITCH          reduce using rule 275 (epsilon -> .)
    NOT             reduce using rule 275 (epsilon -> .)
    PLUS            reduce using rule 275 (epsilon -> .)
    MINUS           reduce using rule 275 (epsilon -> .)
    MULTIPLY        reduce using rule 275 (epsilon -> .)
    AND             reduce using rule 275 (epsilon -> .)
    LPAREN          reduce using rule 275 (epsilon -> .)
    TYPECAST        reduce using rule 275 (epsilon -> .)
    INT_LIT         reduce using rule 275 (epsilon -> .)
    FLOAT_LIT       reduce using rule 275 (epsilon -> .)
    IMAGINARY_LIT   reduce using rule 275 (epsilon -> .)
    STRING_LIT      reduce using rule 275 (epsilon -> .)
    STRUCT          reduce using rule 275 (epsilon -> .)
    LSQUARE         reduce using rule 275 (epsilon -> .)
    MAP             reduce using rule 275 (epsilon -> .)
    INT_T           reduce using rule 275 (epsilon -> .)
    INT             reduce using rule 275 (epsilon -> .)
    FLOAT           reduce using rule 275 (epsilon -> .)
    BOOL            reduce using rule 275 (epsilon -> .)
    COMPLEX         reduce using rule 275 (epsilon -> .)
    BOOL_T          reduce using rule 275 (epsilon -> .)
    COMPLEX_T       reduce using rule 275 (epsilon -> .)
    STRING          reduce using rule 275 (epsilon -> .)
    FLOAT_T         reduce using rule 275 (epsilon -> .)
    STRING_T        reduce using rule 275 (epsilon -> .)
    SEMICOLON       reduce using rule 275 (epsilon -> .)
    RCURL           reduce using rule 275 (epsilon -> .)
    CASE            reduce using rule 275 (epsilon -> .)

    StatementRep                   shift and go to state 208
    StatementList                  shift and go to state 433
    epsilon                        shift and go to state 209

state 417

    (229) ElseOpt -> epsilon .

    SEMICOLON       reduce using rule 229 (ElseOpt -> epsilon .)


state 418

    (227) ElseOpt -> ELSE . IfStmt
    (228) ElseOpt -> ELSE . Block
    (226) IfStmt -> . IF Expression Block ElseOpt
    (53) Block -> . LCURL StatementList RCURL

    IF              shift and go to state 299
    LCURL           shift and go to state 146

    IfStmt                         shift and go to state 434
    Block                          shift and go to state 435

state 419

    (226) IfStmt -> IF Expression Block ElseOpt .

    SEMICOLON       reduce using rule 226 (IfStmt -> IF Expression Block ElseOpt .)


state 420

    (137) Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression . RSQUARE
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    RSQUARE         shift and go to state 436
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 421

    (244) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON . SimpleStmt
    (202) SimpleStmt -> . epsilon
    (203) SimpleStmt -> . ExpressionStmt
    (204) SimpleStmt -> . IncDecStmt
    (205) SimpleStmt -> . Assignment
    (206) SimpleStmt -> . ShortVarDecl
    (275) epsilon -> .
    (209) ExpressionStmt -> . Expression
    (210) IncDecStmt -> . Expression INCREMENT
    (211) IncDecStmt -> . Expression DECREMENT
    (212) Assignment -> . ExpressionList assign_op ExpressionList
    (92) ShortVarDecl -> . IDENTIFIER SHORT_ASSIGNMENT Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (73) ExpressionList -> . Expression ExpressionRep
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    LCURL           reduce using rule 275 (epsilon -> .)
    IDENTIFIER      shift and go to state 329
    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    Conversion                     shift and go to state 104
    SimpleStmt                     shift and go to state 437
    ExpressionStmt                 shift and go to state 265
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    Assignment                     shift and go to state 269
    TypeName                       shift and go to state 113
    IncDecStmt                     shift and go to state 270
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    epsilon                        shift and go to state 290
    UnaryExpr                      shift and go to state 120
    ExpressionList                 shift and go to state 291
    ArrayType                      shift and go to state 106
    Expression                     shift and go to state 292
    ShortVarDecl                   shift and go to state 298
    LiteralType                    shift and go to state 129
    Literal                        shift and go to state 125
    BasicLit                       shift and go to state 112
    Operand                        shift and go to state 130
    CompositeLit                   shift and go to state 116
    QualifiedIdent                 shift and go to state 82
    MapType                        shift and go to state 123

state 422

    (236) ExprSwitchCase -> CASE . ExpressionList
    (73) ExpressionList -> . Expression ExpressionRep
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    Conversion                     shift and go to state 104
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    ExpressionList                 shift and go to state 438
    MapType                        shift and go to state 123
    Expression                     shift and go to state 160
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    CompositeLit                   shift and go to state 116
    QualifiedIdent                 shift and go to state 82

state 423

    (235) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 439


state 424

    (237) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 237 (ExprSwitchCase -> DEFAULT .)


state 425

    (232) ExprSwitchStmt -> SWITCH ExpressionOpt LCURL ExprCaseClauseList RCURL .

    SEMICOLON       reduce using rule 232 (ExprSwitchStmt -> SWITCH ExpressionOpt LCURL ExprCaseClauseList RCURL .)


state 426

    (234) ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .

    RCURL           reduce using rule 234 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)
    CASE            reduce using rule 234 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)
    DEFAULT         reduce using rule 234 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)


state 427

    (231) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionOpt LCURL . ExprCaseClauseList RCURL
    (233) ExprCaseClauseList -> . epsilon
    (234) ExprCaseClauseList -> . ExprCaseClauseList ExprCaseClause
    (275) epsilon -> .

    RCURL           reduce using rule 275 (epsilon -> .)
    CASE            reduce using rule 275 (epsilon -> .)
    DEFAULT         reduce using rule 275 (epsilon -> .)

    ExprCaseClauseList             shift and go to state 440
    epsilon                        shift and go to state 403

state 428

    (194) CommCase -> CASE SendStmt DEFAULT .

    COLON           reduce using rule 194 (CommCase -> CASE SendStmt DEFAULT .)


state 429

    (199) RecvStmt -> IdentifierList SHORT_ASSIGNMENT . RecvExpr
    (200) RecvExpr -> . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 441
    RecvExpr                       shift and go to state 442
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 430

    (196) SendStmt -> Channel LEFT_ARROW . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    CompositeLit                   shift and go to state 116
    MapType                        shift and go to state 123
    Expression                     shift and go to state 443
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    QualifiedIdent                 shift and go to state 82

state 431

    (198) RecvStmt -> ExpressionList EQUALS . RecvExpr
    (200) RecvExpr -> . Expression
    (142) Expression -> . UnaryExpr
    (143) Expression -> . Expression COMPARE_OR Expression
    (144) Expression -> . Expression COMPARE_AND Expression
    (145) Expression -> . Expression EQEQ Expression
    (146) Expression -> . Expression NOTEQUALS Expression
    (147) Expression -> . Expression LESSTHAN Expression
    (148) Expression -> . Expression GREATERTHAN Expression
    (149) Expression -> . Expression LESSTHAN_EQUAL Expression
    (150) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (151) Expression -> . Expression OR Expression
    (152) Expression -> . Expression XOR Expression
    (153) Expression -> . Expression ANDXOR Expression
    (154) Expression -> . Expression DIVIDE Expression
    (155) Expression -> . Expression MODULO Expression
    (156) Expression -> . Expression LSHIFT Expression
    (157) Expression -> . Expression RSHIFT Expression
    (158) Expression -> . Expression PLUS Expression
    (159) Expression -> . Expression MINUS Expression
    (160) Expression -> . Expression MULTIPLY Expression
    (161) Expression -> . Expression AND Expression
    (164) UnaryExpr -> . PrimaryExpr
    (165) UnaryExpr -> . UnaryOp UnaryExpr
    (166) UnaryExpr -> . NOT UnaryExpr
    (127) PrimaryExpr -> . Operand
    (128) PrimaryExpr -> . PrimaryExpr Selector
    (129) PrimaryExpr -> . Conversion
    (130) PrimaryExpr -> . PrimaryExpr Index
    (131) PrimaryExpr -> . PrimaryExpr Slice
    (132) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (133) PrimaryExpr -> . PrimaryExpr Arguments
    (167) UnaryOp -> . PLUS
    (168) UnaryOp -> . MINUS
    (169) UnaryOp -> . MULTIPLY
    (170) UnaryOp -> . AND
    (98) Operand -> . Literal
    (99) Operand -> . OperandName
    (100) Operand -> . LPAREN Expression RPAREN
    (171) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (101) Literal -> . BasicLit
    (102) Literal -> . CompositeLit
    (125) OperandName -> . IDENTIFIER
    (121) BasicLit -> . INT_LIT
    (122) BasicLit -> . FLOAT_LIT
    (123) BasicLit -> . IMAGINARY_LIT
    (124) BasicLit -> . STRING_LIT
    (103) CompositeLit -> . LiteralType LiteralValue
    (104) LiteralType -> . StructType
    (105) LiteralType -> . ArrayType
    (106) LiteralType -> . SliceType
    (107) LiteralType -> . MapType
    (108) LiteralType -> . TypeName
    (30) StructType -> . STRUCT LCURL FieldDeclRep RCURL
    (27) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (24) SliceType -> . LSQUARE RSQUARE ElementType
    (25) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT_T
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . BOOL
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . BOOL_T
    (12) TypeToken -> . COMPLEX_T
    (13) TypeToken -> . STRING
    (14) TypeToken -> . FLOAT_T
    (15) TypeToken -> . STRING_T
    (16) TypeToken -> . TYPE IDENTIFIER
    (126) QualifiedIdent -> . IDENTIFIER DOT TypeName

    NOT             shift and go to state 114
    PLUS            shift and go to state 115
    MINUS           shift and go to state 109
    MULTIPLY        shift and go to state 108
    AND             shift and go to state 127
    LPAREN          shift and go to state 124
    TYPECAST        shift and go to state 128
    IDENTIFIER      shift and go to state 117
    INT_LIT         shift and go to state 131
    FLOAT_LIT       shift and go to state 107
    IMAGINARY_LIT   shift and go to state 119
    STRING_LIT      shift and go to state 132
    STRUCT          shift and go to state 74
    LSQUARE         shift and go to state 70
    MAP             shift and go to state 73
    INT_T           shift and go to state 68
    INT             shift and go to state 75
    FLOAT           shift and go to state 76
    BOOL            shift and go to state 78
    COMPLEX         shift and go to state 55
    BOOL_T          shift and go to state 64
    COMPLEX_T       shift and go to state 62
    STRING          shift and go to state 66
    FLOAT_T         shift and go to state 60
    STRING_T        shift and go to state 72
    TYPE            shift and go to state 81

    Conversion                     shift and go to state 104
    UnaryOp                        shift and go to state 105
    PrimaryExpr                    shift and go to state 121
    ArrayType                      shift and go to state 106
    Literal                        shift and go to state 125
    OperandName                    shift and go to state 111
    TypeToken                      shift and go to state 58
    BasicLit                       shift and go to state 112
    TypeName                       shift and go to state 113
    SliceType                      shift and go to state 118
    StructType                     shift and go to state 133
    UnaryExpr                      shift and go to state 120
    MapType                        shift and go to state 123
    Expression                     shift and go to state 441
    RecvExpr                       shift and go to state 444
    LiteralType                    shift and go to state 129
    Operand                        shift and go to state 130
    CompositeLit                   shift and go to state 116
    QualifiedIdent                 shift and go to state 82

state 432

    (195) CommCase -> CASE RecvStmt DEFAULT .

    COLON           reduce using rule 195 (CommCase -> CASE RecvStmt DEFAULT .)


state 433

    (193) CommClause -> CommCase COLON StatementList .

    RCURL           reduce using rule 193 (CommClause -> CommCase COLON StatementList .)
    CASE            reduce using rule 193 (CommClause -> CommCase COLON StatementList .)


state 434

    (227) ElseOpt -> ELSE IfStmt .

    SEMICOLON       reduce using rule 227 (ElseOpt -> ELSE IfStmt .)


state 435

    (228) ElseOpt -> ELSE Block .

    SEMICOLON       reduce using rule 228 (ElseOpt -> ELSE Block .)


state 436

    (137) Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .

    DOT             reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSQUARE         reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LPAREN          reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COMPARE_OR      reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COMPARE_AND     reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    EQEQ            reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    NOTEQUALS       reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LESSTHAN        reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    GREATERTHAN     reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LESSTHAN_EQUAL  reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    GREATERTHAN_EQUAL reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    OR              reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    XOR             reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    ANDXOR          reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DIVIDE          reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MODULO          reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSHIFT          reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSHIFT          reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    PLUS            reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MINUS           reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MULTIPLY        reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    AND             reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSQUARE         reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COMMA           reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    SEMICOLON       reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RPAREN          reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COLON           reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RCURL           reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    INCREMENT       reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DECREMENT       reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    PLUSEQUAL       reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MINUSEQUAL      reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    TIMESEQUAL      reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DIVIDE_EQUAL    reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MODEQUAL        reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    ANDEQUAL        reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    OREQUAL         reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    XOREQUAL        reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    ANDXOR_EQUAL    reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSHIFT_EQUAL    reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSHIFT_EQUAL    reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    EQUALS          reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LCURL           reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LEFT_ARROW      reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DEFAULT         reduce using rule 137 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)


state 437

    (244) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .

    LCURL           reduce using rule 244 (ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .)


state 438

    (236) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 236 (ExprSwitchCase -> CASE ExpressionList .)


state 439

    (235) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (54) StatementList -> . StatementRep
    (55) StatementRep -> . StatementRep Statement SEMICOLON
    (56) StatementRep -> . epsilon
    (275) epsilon -> .

    RETURN          reduce using rule 275 (epsilon -> .)
    BREAK           reduce using rule 275 (epsilon -> .)
    CONTINUE        reduce using rule 275 (epsilon -> .)
    GOTO            reduce using rule 275 (epsilon -> .)
    LCURL           reduce using rule 275 (epsilon -> .)
    IF              reduce using rule 275 (epsilon -> .)
    FOR             reduce using rule 275 (epsilon -> .)
    DEFER           reduce using rule 275 (epsilon -> .)
    SELECT          reduce using rule 275 (epsilon -> .)
    FALLTHROUGH     reduce using rule 275 (epsilon -> .)
    GO              reduce using rule 275 (epsilon -> .)
    CONST           reduce using rule 275 (epsilon -> .)
    TYPE            reduce using rule 275 (epsilon -> .)
    VAR             reduce using rule 275 (epsilon -> .)
    IDENTIFIER      reduce using rule 275 (epsilon -> .)
    SWITCH          reduce using rule 275 (epsilon -> .)
    NOT             reduce using rule 275 (epsilon -> .)
    PLUS            reduce using rule 275 (epsilon -> .)
    MINUS           reduce using rule 275 (epsilon -> .)
    MULTIPLY        reduce using rule 275 (epsilon -> .)
    AND             reduce using rule 275 (epsilon -> .)
    LPAREN          reduce using rule 275 (epsilon -> .)
    TYPECAST        reduce using rule 275 (epsilon -> .)
    INT_LIT         reduce using rule 275 (epsilon -> .)
    FLOAT_LIT       reduce using rule 275 (epsilon -> .)
    IMAGINARY_LIT   reduce using rule 275 (epsilon -> .)
    STRING_LIT      reduce using rule 275 (epsilon -> .)
    STRUCT          reduce using rule 275 (epsilon -> .)
    LSQUARE         reduce using rule 275 (epsilon -> .)
    MAP             reduce using rule 275 (epsilon -> .)
    INT_T           reduce using rule 275 (epsilon -> .)
    INT             reduce using rule 275 (epsilon -> .)
    FLOAT           reduce using rule 275 (epsilon -> .)
    BOOL            reduce using rule 275 (epsilon -> .)
    COMPLEX         reduce using rule 275 (epsilon -> .)
    BOOL_T          reduce using rule 275 (epsilon -> .)
    COMPLEX_T       reduce using rule 275 (epsilon -> .)
    STRING          reduce using rule 275 (epsilon -> .)
    FLOAT_T         reduce using rule 275 (epsilon -> .)
    STRING_T        reduce using rule 275 (epsilon -> .)
    SEMICOLON       reduce using rule 275 (epsilon -> .)
    RCURL           reduce using rule 275 (epsilon -> .)
    CASE            reduce using rule 275 (epsilon -> .)
    DEFAULT         reduce using rule 275 (epsilon -> .)

    epsilon                        shift and go to state 209
    StatementRep                   shift and go to state 208
    StatementList                  shift and go to state 445

state 440

    (231) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionOpt LCURL ExprCaseClauseList . RCURL
    (234) ExprCaseClauseList -> ExprCaseClauseList . ExprCaseClause
    (235) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (236) ExprSwitchCase -> . CASE ExpressionList
    (237) ExprSwitchCase -> . DEFAULT

    RCURL           shift and go to state 446
    CASE            shift and go to state 422
    DEFAULT         shift and go to state 424

    ExprSwitchCase                 shift and go to state 423
    ExprCaseClause                 shift and go to state 426

state 441

    (200) RecvExpr -> Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    DEFAULT         reduce using rule 200 (RecvExpr -> Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 442

    (199) RecvStmt -> IdentifierList SHORT_ASSIGNMENT RecvExpr .

    DEFAULT         reduce using rule 199 (RecvStmt -> IdentifierList SHORT_ASSIGNMENT RecvExpr .)


state 443

    (196) SendStmt -> Channel LEFT_ARROW Expression .
    (143) Expression -> Expression . COMPARE_OR Expression
    (144) Expression -> Expression . COMPARE_AND Expression
    (145) Expression -> Expression . EQEQ Expression
    (146) Expression -> Expression . NOTEQUALS Expression
    (147) Expression -> Expression . LESSTHAN Expression
    (148) Expression -> Expression . GREATERTHAN Expression
    (149) Expression -> Expression . LESSTHAN_EQUAL Expression
    (150) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (151) Expression -> Expression . OR Expression
    (152) Expression -> Expression . XOR Expression
    (153) Expression -> Expression . ANDXOR Expression
    (154) Expression -> Expression . DIVIDE Expression
    (155) Expression -> Expression . MODULO Expression
    (156) Expression -> Expression . LSHIFT Expression
    (157) Expression -> Expression . RSHIFT Expression
    (158) Expression -> Expression . PLUS Expression
    (159) Expression -> Expression . MINUS Expression
    (160) Expression -> Expression . MULTIPLY Expression
    (161) Expression -> Expression . AND Expression

    DEFAULT         reduce using rule 196 (SendStmt -> Channel LEFT_ARROW Expression .)
    COMPARE_OR      shift and go to state 186
    COMPARE_AND     shift and go to state 196
    EQEQ            shift and go to state 189
    NOTEQUALS       shift and go to state 182
    LESSTHAN        shift and go to state 193
    GREATERTHAN     shift and go to state 194
    LESSTHAN_EQUAL  shift and go to state 190
    GREATERTHAN_EQUAL shift and go to state 199
    OR              shift and go to state 198
    XOR             shift and go to state 185
    ANDXOR          shift and go to state 181
    DIVIDE          shift and go to state 183
    MODULO          shift and go to state 197
    LSHIFT          shift and go to state 195
    RSHIFT          shift and go to state 187
    PLUS            shift and go to state 191
    MINUS           shift and go to state 188
    MULTIPLY        shift and go to state 192
    AND             shift and go to state 184


state 444

    (198) RecvStmt -> ExpressionList EQUALS RecvExpr .

    DEFAULT         reduce using rule 198 (RecvStmt -> ExpressionList EQUALS RecvExpr .)


state 445

    (235) ExprCaseClause -> ExprSwitchCase COLON StatementList .

    RCURL           reduce using rule 235 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 235 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 235 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)


state 446

    (231) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionOpt LCURL ExprCaseClauseList RCURL .

    SEMICOLON       reduce using rule 231 (ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionOpt LCURL ExprCaseClauseList RCURL .)

