Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     TypeName -> TypeToken
Rule 5     TypeName -> QualifiedIdent
Rule 6     TypeToken -> INT
Rule 7     TypeToken -> FLOAT
Rule 8     TypeToken -> BOOL
Rule 9     TypeToken -> STRING
Rule 10    TypeToken -> TYPE IDENTIFIER
Rule 11    TypeLit -> ArrayType
Rule 12    TypeLit -> ST StructType
Rule 13    TypeLit -> PointerType
Rule 14    TypeLit -> MapType
Rule 15    TypeLit -> SliceType
Rule 16    ST -> <empty>
Rule 17    SliceType -> LSQUARE RSQUARE ElementType
Rule 18    MapType -> MAP LSQUARE KeyType RSQUARE ElementType
Rule 19    KeyType -> Type
Rule 20    ArrayType -> LSQUARE ArrayLength RSQUARE ElementType
Rule 21    ArrayLength -> I INT_LIT
Rule 22    ElementType -> Type
Rule 23    StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
Rule 24    FuncScope -> <empty>
Rule 25    FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON
Rule 26    FieldDeclRep -> epsilon
Rule 27    FieldDecl -> IdentifierList Type
Rule 28    PointerType -> MULTIPLY BaseType
Rule 29    BaseType -> Type
Rule 30    Signature -> Parameters ResultOpt
Rule 31    ResultOpt -> Result
Rule 32    ResultOpt -> epsilon
Rule 33    Result -> Parameters
Rule 34    Result -> Type
Rule 35    Parameters -> LPAREN ParametersList RPAREN
Rule 36    Parameters -> LPAREN RPAREN
Rule 37    ParametersList -> ParameterDecl
Rule 38    ParametersList -> ParametersList COMMA ParameterDecl
Rule 39    ParameterDecl -> IdentifierList Type
Rule 40    ParameterDecl -> Type
Rule 41    Block -> LCURL StatementList RCURL
Rule 42    StatementList -> StatementRep
Rule 43    StatementRep -> StatementRep Statement SEMICOLON
Rule 44    StatementRep -> epsilon
Rule 45    Declaration -> ConstDecl
Rule 46    Declaration -> TypeDecl
Rule 47    Declaration -> VarDecl
Rule 48    TopLevelDecl -> Declaration
Rule 49    TopLevelDecl -> FunctionDecl
Rule 50    ConstDecl -> CONST ConstSpec
Rule 51    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 52    ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON
Rule 53    ConstSpecRep -> epsilon
Rule 54    ConstSpec -> IdentifierList TypeExprListOpt
Rule 55    TypeExprListOpt -> Type EQUALS ExpressionList
Rule 56    IdentifierList -> IDENTIFIER
Rule 57    IdentifierList -> IdentifierRep
Rule 58    IdentifierRep -> IdentifierRep COMMA IDENTIFIER
Rule 59    IdentifierRep -> IDENTIFIER COMMA IDENTIFIER
Rule 60    ExpressionList -> Expression ExpressionRep
Rule 61    ExpressionRep -> ExpressionRep COMMA Expression
Rule 62    ExpressionRep -> epsilon
Rule 63    TypeDecl -> TYPE TypeSpec
Rule 64    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 65    TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON
Rule 66    TypeSpecRep -> epsilon
Rule 67    TypeSpec -> AliasDecl
Rule 68    TypeSpec -> TypeDef
Rule 69    AliasDecl -> IDENTIFIER EQUALS Type
Rule 70    TypeDef -> IDENTIFIER Type
Rule 71    VarDecl -> VAR VarSpec
Rule 72    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 73    VarSpecRep -> VarSpecRep VarSpec SEMICOLON
Rule 74    VarSpecRep -> epsilon
Rule 75    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 76    ExpressionListOpt -> EQUALS ExpressionList
Rule 77    ExpressionListOpt -> epsilon
Rule 78    ExpressionListOpt -> EQUALS MALLOC LPAREN I INT_LIT RPAREN
Rule 79    ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression
Rule 80    FunctionDecl -> FUNC FunctionName CreateScope Function EndScope
Rule 81    FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope
Rule 82    CreateScope -> <empty>
Rule 83    EndScope -> <empty>
Rule 84    FunctionName -> IDENTIFIER
Rule 85    Function -> Signature RetTypeSet FunctionBody
Rule 86    RetTypeSet -> <empty>
Rule 87    FunctionBody -> Block
Rule 88    Operand -> Literal
Rule 89    Operand -> OperandName
Rule 90    Operand -> LPAREN Expression RPAREN
Rule 91    Literal -> BasicLit
Rule 92    BasicLit -> I INT_LIT
Rule 93    BasicLit -> F FLOAT_LIT
Rule 94    BasicLit -> C IMAGINARY_LIT
Rule 95    BasicLit -> S STRING_LIT
Rule 96    I -> <empty>
Rule 97    F -> <empty>
Rule 98    C -> <empty>
Rule 99    S -> <empty>
Rule 100   OperandName -> IDENTIFIER
Rule 101   QualifiedIdent -> IDENTIFIER DOT TypeName
Rule 102   PrimaryExpr -> Operand
Rule 103   PrimaryExpr -> PrimaryExpr DOT IDENTIFIER
Rule 104   PrimaryExpr -> Conversion
Rule 105   PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE
Rule 106   PrimaryExpr -> PrimaryExpr Slice
Rule 107   PrimaryExpr -> PrimaryExpr TypeAssertion
Rule 108   PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
Rule 109   Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE
Rule 110   Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE
Rule 111   TypeAssertion -> DOT LPAREN Type RPAREN
Rule 112   ExpressionListTypeOpt -> ExpressionList
Rule 113   ExpressionListTypeOpt -> epsilon
Rule 114   Expression -> UnaryExpr
Rule 115   Expression -> Expression COMPARE_OR Expression
Rule 116   Expression -> Expression COMPARE_AND Expression
Rule 117   Expression -> Expression EQEQ Expression
Rule 118   Expression -> Expression NOTEQUALS Expression
Rule 119   Expression -> Expression LESSTHAN Expression
Rule 120   Expression -> Expression GREATERTHAN Expression
Rule 121   Expression -> Expression LESSTHAN_EQUAL Expression
Rule 122   Expression -> Expression GREATERTHAN_EQUAL Expression
Rule 123   Expression -> Expression OR Expression
Rule 124   Expression -> Expression XOR Expression
Rule 125   Expression -> Expression ANDXOR Expression
Rule 126   Expression -> Expression DIVIDE Expression
Rule 127   Expression -> Expression MODULO Expression
Rule 128   Expression -> Expression LSHIFT Expression
Rule 129   Expression -> Expression RSHIFT Expression
Rule 130   Expression -> Expression PLUS Expression
Rule 131   Expression -> Expression MINUS Expression
Rule 132   Expression -> Expression MULTIPLY Expression
Rule 133   Expression -> Expression AND Expression
Rule 134   ExpressionOpt -> Expression
Rule 135   ExpressionOpt -> epsilon
Rule 136   UnaryExpr -> PrimaryExpr
Rule 137   UnaryExpr -> UnaryOp UnaryExpr
Rule 138   UnaryExpr -> NOT UnaryExpr
Rule 139   UnaryOp -> PLUS
Rule 140   UnaryOp -> MINUS
Rule 141   UnaryOp -> MULTIPLY
Rule 142   UnaryOp -> AND
Rule 143   Conversion -> TYPECAST Type LPAREN Expression RPAREN
Rule 144   Statement -> Declaration
Rule 145   Statement -> LabeledStmt
Rule 146   Statement -> SimpleStmt
Rule 147   Statement -> ReturnStmt
Rule 148   Statement -> BreakStmt
Rule 149   Statement -> ContinueStmt
Rule 150   Statement -> GotoStmt
Rule 151   Statement -> CreateScope IFSYM Block EndScope_1
Rule 152   Statement -> IfStmt
Rule 153   Statement -> SwitchStmt
Rule 154   Statement -> ForStmt
Rule 155   Statement -> DeferStmt
Rule 156   Statement -> FallThroughStmt
Rule 157   Statement -> GoStmt
Rule 158   Statement -> PrintStmt
Rule 159   Statement -> ScanStmt
Rule 160   EndScope_1 -> <empty>
Rule 161   PrintStmt -> PRINT PD Expression
Rule 162   PrintStmt -> PRINT PS Expression
Rule 163   ScanStmt -> SCAN Expression
Rule 164   FallThroughStmt -> FALLTHROUGH
Rule 165   GoStmt -> GO Expression
Rule 166   DeferStmt -> DEFER Expression
Rule 167   SimpleStmt -> epsilon
Rule 168   SimpleStmt -> ExpressionStmt
Rule 169   SimpleStmt -> IncDecStmt
Rule 170   SimpleStmt -> Assignment
Rule 171   SimpleStmt -> ShortVarDecl
Rule 172   LabeledStmt -> Label COLON Statement
Rule 173   Label -> IDENTIFIER
Rule 174   ExpressionStmt -> Expression
Rule 175   IncDecStmt -> Expression INCREMENT
Rule 176   IncDecStmt -> Expression DECREMENT
Rule 177   Assignment -> ExpressionList assign_op ExpressionList
Rule 178   assign_op -> AssignOp
Rule 179   AssignOp -> PLUSEQUAL
Rule 180   AssignOp -> MINUSEQUAL
Rule 181   AssignOp -> TIMESEQUAL
Rule 182   AssignOp -> DIVIDE_EQUAL
Rule 183   AssignOp -> MODEQUAL
Rule 184   AssignOp -> ANDEQUAL
Rule 185   AssignOp -> OREQUAL
Rule 186   AssignOp -> XOREQUAL
Rule 187   AssignOp -> ANDXOR_EQUAL
Rule 188   AssignOp -> LSHIFT_EQUAL
Rule 189   AssignOp -> RSHIFT_EQUAL
Rule 190   AssignOp -> EQUALS
Rule 191   IfStmt -> IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt
Rule 192   IFSYM -> <empty>
Rule 193   ElseOpt -> ELSE IfStmt
Rule 194   ElseOpt -> ELSE CreateScope IFSYM Block EndScope_1
Rule 195   ElseOpt -> epsilon
Rule 196   SwitchStmt -> ExprSwitchStmt
Rule 197   ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1
Rule 198   StartSwitch -> <empty>
Rule 199   ExprCaseClauseList -> epsilon
Rule 200   ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause
Rule 201   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 202   ExprSwitchCase -> CASE ExpressionList
Rule 203   ExprSwitchCase -> DEFAULT
Rule 204   ForStmt -> FOR CreateScope ConditionBlockOpt Block EndScope_1
Rule 205   ConditionBlockOpt -> epsilon
Rule 206   ConditionBlockOpt -> Condition
Rule 207   ConditionBlockOpt -> ForClause
Rule 208   Condition -> Expression
Rule 209   ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
Rule 210   ConditionOpt -> epsilon
Rule 211   ConditionOpt -> Condition
Rule 212   ReturnStmt -> RETURN ExpressionListPureOpt
Rule 213   ExpressionListPureOpt -> ExpressionList
Rule 214   ExpressionListPureOpt -> epsilon
Rule 215   BreakStmt -> BREAK LabelOpt
Rule 216   ContinueStmt -> CONTINUE LabelOpt
Rule 217   LabelOpt -> Label
Rule 218   LabelOpt -> epsilon
Rule 219   GotoStmt -> GOTO Label
Rule 220   SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep
Rule 221   ImportDeclRep -> epsilon
Rule 222   ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON
Rule 223   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON
Rule 224   TopLevelDeclRep -> epsilon
Rule 225   PackageClause -> PACKAGE PackageName
Rule 226   PackageName -> IDENTIFIER
Rule 227   ImportDecl -> IMPORT ImportSpec
Rule 228   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 229   ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON
Rule 230   ImportSpecRep -> epsilon
Rule 231   ImportSpec -> PackageNameDotOpt ImportPath
Rule 232   PackageNameDotOpt -> DOT
Rule 233   PackageNameDotOpt -> PackageName
Rule 234   PackageNameDotOpt -> epsilon
Rule 235   ImportPath -> STRING_LIT
Rule 236   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 133 142
ANDEQUAL             : 184
ANDXOR               : 125
ANDXOR_EQUAL         : 187
BOOL                 : 8
BREAK                : 215
CASE                 : 202
COLON                : 109 110 110 172 201
COMMA                : 38 58 59 61
COMPARE_AND          : 116
COMPARE_OR           : 115
CONST                : 50 51
CONTINUE             : 216
DECREMENT            : 176
DEFAULT              : 203
DEFER                : 166
DIVIDE               : 126
DIVIDE_EQUAL         : 182
DOT                  : 101 103 111 232
ELSE                 : 193 194
EQEQ                 : 117
EQUALS               : 55 69 76 78 190
FALLTHROUGH          : 164
FLOAT                : 7
FLOAT_LIT            : 93
FOR                  : 204
FUNC                 : 80 81
GO                   : 165
GOTO                 : 219
GREATERTHAN          : 120
GREATERTHAN_EQUAL    : 122
IDENTIFIER           : 10 56 58 59 59 69 70 79 84 100 101 103 173 226
IF                   : 191
IMAGINARY_LIT        : 94
IMPORT               : 227 228
INCREMENT            : 175
INT                  : 6
INT_LIT              : 21 78 92
LCURL                : 23 41 197
LESSTHAN             : 119
LESSTHAN_EQUAL       : 121
LPAREN               : 35 36 51 64 72 78 90 108 111 143 228
LSHIFT               : 128
LSHIFT_EQUAL         : 188
LSQUARE              : 17 18 20 105 109 110
MALLOC               : 78
MAP                  : 18
MINUS                : 131 140
MINUSEQUAL           : 180
MODEQUAL             : 183
MODULO               : 127
MULTIPLY             : 28 132 141
NOT                  : 138
NOTEQUALS            : 118
OR                   : 123
OREQUAL              : 185
PACKAGE              : 225
PD                   : 161
PLUS                 : 130 139
PLUSEQUAL            : 179
PRINT                : 161 162
PS                   : 162
RCURL                : 23 41 197
RETURN               : 212
RPAREN               : 35 36 51 64 72 78 90 108 111 143 228
RSHIFT               : 129
RSHIFT_EQUAL         : 189
RSQUARE              : 17 18 20 105 109 110
SCAN                 : 163
SEMICOLON            : 25 43 52 65 73 209 209 220 222 223 229
SHORT_ASSIGNMENT     : 79
STRING               : 9
STRING_LIT           : 95 235
STRUCT               : 23
SWITCH               : 197
TIMESEQUAL           : 181
TYPE                 : 10 63 64
TYPECAST             : 143
VAR                  : 71 72
XOR                  : 124
XOREQUAL             : 186
error                : 

Nonterminals, with rules where they appear

AliasDecl            : 67
ArrayLength          : 20
ArrayType            : 11
AssignOp             : 178
Assignment           : 170
BaseType             : 28
BasicLit             : 91
Block                : 87 151 191 194 204
BreakStmt            : 148
C                    : 94
Condition            : 206 211
ConditionBlockOpt    : 204
ConditionOpt         : 209
ConstDecl            : 45
ConstSpec            : 50 52
ConstSpecRep         : 51 52
ContinueStmt         : 149
Conversion           : 104
CreateScope          : 80 81 151 191 194 197 204
Declaration          : 48 144
DeferStmt            : 155
ElementType          : 17 18 20
ElseOpt              : 191
EndScope             : 23 80 81
EndScope_1           : 151 191 194 197 204
ExprCaseClause       : 200
ExprCaseClauseList   : 197 200
ExprSwitchCase       : 201
ExprSwitchStmt       : 196
Expression           : 60 61 79 90 105 110 110 115 115 116 116 117 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130 131 131 132 132 133 133 134 143 161 162 163 165 166 174 175 176 191 197 208
ExpressionList       : 55 76 112 177 177 202 213
ExpressionListOpt    : 75
ExpressionListPureOpt : 212
ExpressionListTypeOpt : 108
ExpressionOpt        : 109 109 110
ExpressionRep        : 60 61
ExpressionStmt       : 168
F                    : 93
FallThroughStmt      : 156
FieldDecl            : 25
FieldDeclRep         : 23 25
ForClause            : 207
ForStmt              : 154
FuncScope            : 23
Function             : 80
FunctionBody         : 85
FunctionDecl         : 49
FunctionName         : 80 81
GoStmt               : 157
GotoStmt             : 150
I                    : 21 78 92
IFSYM                : 151 191 194
IdentifierList       : 27 39 54 75
IdentifierRep        : 57 58
IfStmt               : 152 193
ImportDecl           : 222
ImportDeclRep        : 220 222
ImportPath           : 231
ImportSpec           : 227 229
ImportSpecRep        : 228 229
IncDecStmt           : 169
KeyType              : 18
Label                : 172 217 219
LabelOpt             : 215 216
LabeledStmt          : 145
Literal              : 88
MapType              : 14
Operand              : 102
OperandName          : 89
PackageClause        : 220
PackageName          : 225 233
PackageNameDotOpt    : 231
ParameterDecl        : 37 38
Parameters           : 30 33
ParametersList       : 35 38
PointerType          : 13
PrimaryExpr          : 103 105 106 107 108 136
PrintStmt            : 158
QualifiedIdent       : 5
Result               : 31
ResultOpt            : 30
RetTypeSet           : 85
ReturnStmt           : 147
S                    : 95
ST                   : 12
ScanStmt             : 159
ShortVarDecl         : 171
Signature            : 81 85
SimpleStmt           : 146 209 209
Slice                : 106
SliceType            : 15
SourceFile           : 1
StartSwitch          : 197
Statement            : 43 172
StatementList        : 41 201
StatementRep         : 42 43
StructType           : 12
SwitchStmt           : 153
TopLevelDecl         : 223
TopLevelDeclRep      : 220 223
Type                 : 19 22 27 29 34 39 40 55 69 70 75 111 143
TypeAssertion        : 107
TypeDecl             : 46
TypeDef              : 68
TypeExprListOpt      : 54
TypeLit              : 3
TypeName             : 2 101
TypeSpec             : 63 65
TypeSpecRep          : 64 65
TypeToken            : 4
UnaryExpr            : 114 137 138
UnaryOp              : 137
VarDecl              : 47
VarSpec              : 71 73
VarSpecRep           : 72 73
assign_op            : 177
epsilon              : 26 32 44 53 62 66 74 77 113 135 167 195 199 205 210 214 218 221 224 230 234
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (220) SourceFile -> . PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep
    (225) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 2

    PackageClause                  shift and go to state 1
    SourceFile                     shift and go to state 3
    start                          shift and go to state 4

state 1

    (220) SourceFile -> PackageClause . SEMICOLON ImportDeclRep TopLevelDeclRep

    SEMICOLON       shift and go to state 5


state 2

    (225) PackageClause -> PACKAGE . PackageName
    (226) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 7

    PackageName                    shift and go to state 6

state 3

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 4

    (0) S' -> start .



state 5

    (220) SourceFile -> PackageClause SEMICOLON . ImportDeclRep TopLevelDeclRep
    (221) ImportDeclRep -> . epsilon
    (222) ImportDeclRep -> . ImportDeclRep ImportDecl SEMICOLON
    (236) epsilon -> .

    IMPORT          reduce using rule 236 (epsilon -> .)
    FUNC            reduce using rule 236 (epsilon -> .)
    CONST           reduce using rule 236 (epsilon -> .)
    TYPE            reduce using rule 236 (epsilon -> .)
    VAR             reduce using rule 236 (epsilon -> .)
    $end            reduce using rule 236 (epsilon -> .)

    ImportDeclRep                  shift and go to state 9
    epsilon                        shift and go to state 8

state 6

    (225) PackageClause -> PACKAGE PackageName .

    SEMICOLON       reduce using rule 225 (PackageClause -> PACKAGE PackageName .)


state 7

    (226) PackageName -> IDENTIFIER .

    STRING_LIT      reduce using rule 226 (PackageName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 226 (PackageName -> IDENTIFIER .)


state 8

    (221) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 221 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 221 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 221 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 221 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 221 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 221 (ImportDeclRep -> epsilon .)


state 9

    (220) SourceFile -> PackageClause SEMICOLON ImportDeclRep . TopLevelDeclRep
    (222) ImportDeclRep -> ImportDeclRep . ImportDecl SEMICOLON
    (223) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SEMICOLON
    (224) TopLevelDeclRep -> . epsilon
    (227) ImportDecl -> . IMPORT ImportSpec
    (228) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (236) epsilon -> .

    IMPORT          shift and go to state 13
    FUNC            reduce using rule 236 (epsilon -> .)
    CONST           reduce using rule 236 (epsilon -> .)
    TYPE            reduce using rule 236 (epsilon -> .)
    VAR             reduce using rule 236 (epsilon -> .)
    $end            reduce using rule 236 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 10
    epsilon                        shift and go to state 11
    ImportDecl                     shift and go to state 12

state 10

    (220) SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep .
    (223) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SEMICOLON
    (48) TopLevelDecl -> . Declaration
    (49) TopLevelDecl -> . FunctionDecl
    (45) Declaration -> . ConstDecl
    (46) Declaration -> . TypeDecl
    (47) Declaration -> . VarDecl
    (80) FunctionDecl -> . FUNC FunctionName CreateScope Function EndScope
    (81) FunctionDecl -> . FUNC FunctionName CreateScope Signature EndScope
    (50) ConstDecl -> . CONST ConstSpec
    (51) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (63) TypeDecl -> . TYPE TypeSpec
    (64) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (71) VarDecl -> . VAR VarSpec
    (72) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 220 (SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21

    TypeDecl                       shift and go to state 19
    VarDecl                        shift and go to state 22
    FunctionDecl                   shift and go to state 15
    TopLevelDecl                   shift and go to state 16
    Declaration                    shift and go to state 17
    ConstDecl                      shift and go to state 18

state 11

    (224) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 224 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 224 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 224 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 224 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 224 (TopLevelDeclRep -> epsilon .)


state 12

    (222) ImportDeclRep -> ImportDeclRep ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 24


state 13

    (227) ImportDecl -> IMPORT . ImportSpec
    (228) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (231) ImportSpec -> . PackageNameDotOpt ImportPath
    (232) PackageNameDotOpt -> . DOT
    (233) PackageNameDotOpt -> . PackageName
    (234) PackageNameDotOpt -> . epsilon
    (226) PackageName -> . IDENTIFIER
    (236) epsilon -> .

    LPAREN          shift and go to state 25
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING_LIT      reduce using rule 236 (epsilon -> .)

    ImportSpec                     shift and go to state 26
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 14

    (50) ConstDecl -> CONST . ConstSpec
    (51) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (54) ConstSpec -> . IdentifierList TypeExprListOpt
    (56) IdentifierList -> . IDENTIFIER
    (57) IdentifierList -> . IdentifierRep
    (58) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (59) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER

    LPAREN          shift and go to state 33
    IDENTIFIER      shift and go to state 35

    ConstSpec                      shift and go to state 31
    IdentifierRep                  shift and go to state 32
    IdentifierList                 shift and go to state 34

state 15

    (49) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 49 (TopLevelDecl -> FunctionDecl .)


state 16

    (223) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 36


state 17

    (48) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 48 (TopLevelDecl -> Declaration .)


state 18

    (45) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 45 (Declaration -> ConstDecl .)


state 19

    (46) Declaration -> TypeDecl .

    SEMICOLON       reduce using rule 46 (Declaration -> TypeDecl .)


state 20

    (80) FunctionDecl -> FUNC . FunctionName CreateScope Function EndScope
    (81) FunctionDecl -> FUNC . FunctionName CreateScope Signature EndScope
    (84) FunctionName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 37

    FunctionName                   shift and go to state 38

state 21

    (71) VarDecl -> VAR . VarSpec
    (72) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (75) VarSpec -> . IdentifierList Type ExpressionListOpt
    (56) IdentifierList -> . IDENTIFIER
    (57) IdentifierList -> . IdentifierRep
    (58) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (59) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER

    LPAREN          shift and go to state 40
    IDENTIFIER      shift and go to state 35

    IdentifierRep                  shift and go to state 32
    VarSpec                        shift and go to state 39
    IdentifierList                 shift and go to state 41

state 22

    (47) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 47 (Declaration -> VarDecl .)


state 23

    (63) TypeDecl -> TYPE . TypeSpec
    (64) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (67) TypeSpec -> . AliasDecl
    (68) TypeSpec -> . TypeDef
    (69) AliasDecl -> . IDENTIFIER EQUALS Type
    (70) TypeDef -> . IDENTIFIER Type

    LPAREN          shift and go to state 44
    IDENTIFIER      shift and go to state 46

    TypeSpec                       shift and go to state 45
    TypeDef                        shift and go to state 42
    AliasDecl                      shift and go to state 43

state 24

    (222) ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .

    IMPORT          reduce using rule 222 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    FUNC            reduce using rule 222 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    CONST           reduce using rule 222 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    TYPE            reduce using rule 222 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    VAR             reduce using rule 222 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    $end            reduce using rule 222 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)


state 25

    (228) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (229) ImportSpecRep -> . ImportSpecRep ImportSpec SEMICOLON
    (230) ImportSpecRep -> . epsilon
    (236) epsilon -> .

    RPAREN          reduce using rule 236 (epsilon -> .)
    DOT             reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)
    STRING_LIT      reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 47
    ImportSpecRep                  shift and go to state 48

state 26

    (227) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 227 (ImportDecl -> IMPORT ImportSpec .)


state 27

    (234) PackageNameDotOpt -> epsilon .

    STRING_LIT      reduce using rule 234 (PackageNameDotOpt -> epsilon .)


state 28

    (233) PackageNameDotOpt -> PackageName .

    STRING_LIT      reduce using rule 233 (PackageNameDotOpt -> PackageName .)


state 29

    (231) ImportSpec -> PackageNameDotOpt . ImportPath
    (235) ImportPath -> . STRING_LIT

    STRING_LIT      shift and go to state 50

    ImportPath                     shift and go to state 49

state 30

    (232) PackageNameDotOpt -> DOT .

    STRING_LIT      reduce using rule 232 (PackageNameDotOpt -> DOT .)


state 31

    (50) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 50 (ConstDecl -> CONST ConstSpec .)


state 32

    (57) IdentifierList -> IdentifierRep .
    (58) IdentifierRep -> IdentifierRep . COMMA IDENTIFIER

    INT             reduce using rule 57 (IdentifierList -> IdentifierRep .)
    FLOAT           reduce using rule 57 (IdentifierList -> IdentifierRep .)
    BOOL            reduce using rule 57 (IdentifierList -> IdentifierRep .)
    STRING          reduce using rule 57 (IdentifierList -> IdentifierRep .)
    TYPE            reduce using rule 57 (IdentifierList -> IdentifierRep .)
    IDENTIFIER      reduce using rule 57 (IdentifierList -> IdentifierRep .)
    LSQUARE         reduce using rule 57 (IdentifierList -> IdentifierRep .)
    MULTIPLY        reduce using rule 57 (IdentifierList -> IdentifierRep .)
    MAP             reduce using rule 57 (IdentifierList -> IdentifierRep .)
    STRUCT          reduce using rule 57 (IdentifierList -> IdentifierRep .)
    COMMA           shift and go to state 51


state 33

    (51) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (52) ConstSpecRep -> . ConstSpecRep ConstSpec SEMICOLON
    (53) ConstSpecRep -> . epsilon
    (236) epsilon -> .

    RPAREN          reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)

    ConstSpecRep                   shift and go to state 52
    epsilon                        shift and go to state 53

state 34

    (54) ConstSpec -> IdentifierList . TypeExprListOpt
    (55) TypeExprListOpt -> . Type EQUALS ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    Type                           shift and go to state 58
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    TypeExprListOpt                shift and go to state 69
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    TypeLit                        shift and go to state 56
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 35

    (56) IdentifierList -> IDENTIFIER .
    (59) IdentifierRep -> IDENTIFIER . COMMA IDENTIFIER

    INT             reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    FLOAT           reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    BOOL            reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    STRING          reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    TYPE            reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    LSQUARE         reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    MULTIPLY        reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    MAP             reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    STRUCT          reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    COMMA           shift and go to state 74


state 36

    (223) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 223 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 223 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 223 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 223 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    $end            reduce using rule 223 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)


state 37

    (84) FunctionName -> IDENTIFIER .

    LPAREN          reduce using rule 84 (FunctionName -> IDENTIFIER .)


state 38

    (80) FunctionDecl -> FUNC FunctionName . CreateScope Function EndScope
    (81) FunctionDecl -> FUNC FunctionName . CreateScope Signature EndScope
    (82) CreateScope -> .

    LPAREN          reduce using rule 82 (CreateScope -> .)

    CreateScope                    shift and go to state 75

state 39

    (71) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 71 (VarDecl -> VAR VarSpec .)


state 40

    (72) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (73) VarSpecRep -> . VarSpecRep VarSpec SEMICOLON
    (74) VarSpecRep -> . epsilon
    (236) epsilon -> .

    RPAREN          reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)

    VarSpecRep                     shift and go to state 76
    epsilon                        shift and go to state 77

state 41

    (75) VarSpec -> IdentifierList . Type ExpressionListOpt
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    Type                           shift and go to state 78
    TypeToken                      shift and go to state 57
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 42

    (68) TypeSpec -> TypeDef .

    SEMICOLON       reduce using rule 68 (TypeSpec -> TypeDef .)


state 43

    (67) TypeSpec -> AliasDecl .

    SEMICOLON       reduce using rule 67 (TypeSpec -> AliasDecl .)


state 44

    (64) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (65) TypeSpecRep -> . TypeSpecRep TypeSpec SEMICOLON
    (66) TypeSpecRep -> . epsilon
    (236) epsilon -> .

    RPAREN          reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)

    TypeSpecRep                    shift and go to state 79
    epsilon                        shift and go to state 80

state 45

    (63) TypeDecl -> TYPE TypeSpec .

    SEMICOLON       reduce using rule 63 (TypeDecl -> TYPE TypeSpec .)


state 46

    (69) AliasDecl -> IDENTIFIER . EQUALS Type
    (70) TypeDef -> IDENTIFIER . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    EQUALS          shift and go to state 82
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    Type                           shift and go to state 81
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    TypeLit                        shift and go to state 56
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 47

    (230) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 230 (ImportSpecRep -> epsilon .)
    DOT             reduce using rule 230 (ImportSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 230 (ImportSpecRep -> epsilon .)
    STRING_LIT      reduce using rule 230 (ImportSpecRep -> epsilon .)


state 48

    (228) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (229) ImportSpecRep -> ImportSpecRep . ImportSpec SEMICOLON
    (231) ImportSpec -> . PackageNameDotOpt ImportPath
    (232) PackageNameDotOpt -> . DOT
    (233) PackageNameDotOpt -> . PackageName
    (234) PackageNameDotOpt -> . epsilon
    (226) PackageName -> . IDENTIFIER
    (236) epsilon -> .

    RPAREN          shift and go to state 83
    DOT             shift and go to state 30
    IDENTIFIER      shift and go to state 7
    STRING_LIT      reduce using rule 236 (epsilon -> .)

    ImportSpec                     shift and go to state 84
    epsilon                        shift and go to state 27
    PackageName                    shift and go to state 28
    PackageNameDotOpt              shift and go to state 29

state 49

    (231) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOLON       reduce using rule 231 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 50

    (235) ImportPath -> STRING_LIT .

    SEMICOLON       reduce using rule 235 (ImportPath -> STRING_LIT .)


state 51

    (58) IdentifierRep -> IdentifierRep COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 85


state 52

    (51) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (52) ConstSpecRep -> ConstSpecRep . ConstSpec SEMICOLON
    (54) ConstSpec -> . IdentifierList TypeExprListOpt
    (56) IdentifierList -> . IDENTIFIER
    (57) IdentifierList -> . IdentifierRep
    (58) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (59) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER

    RPAREN          shift and go to state 87
    IDENTIFIER      shift and go to state 35

    ConstSpec                      shift and go to state 86
    IdentifierRep                  shift and go to state 32
    IdentifierList                 shift and go to state 34

state 53

    (53) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 53 (ConstSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 53 (ConstSpecRep -> epsilon .)


state 54

    (11) TypeLit -> ArrayType .

    RPAREN          reduce using rule 11 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 11 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 11 (TypeLit -> ArrayType .)
    EQUALS          reduce using rule 11 (TypeLit -> ArrayType .)
    RSQUARE         reduce using rule 11 (TypeLit -> ArrayType .)
    LCURL           reduce using rule 11 (TypeLit -> ArrayType .)
    LPAREN          reduce using rule 11 (TypeLit -> ArrayType .)


state 55

    (28) PointerType -> MULTIPLY . BaseType
    (29) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    BaseType                       shift and go to state 89
    Type                           shift and go to state 88
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    TypeLit                        shift and go to state 56
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 56

    (3) Type -> TypeLit .

    RSQUARE         reduce using rule 3 (Type -> TypeLit .)
    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    EQUALS          reduce using rule 3 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 3 (Type -> TypeLit .)
    LCURL           reduce using rule 3 (Type -> TypeLit .)
    LPAREN          reduce using rule 3 (Type -> TypeLit .)


state 57

    (4) TypeName -> TypeToken .

    EQUALS          reduce using rule 4 (TypeName -> TypeToken .)
    SEMICOLON       reduce using rule 4 (TypeName -> TypeToken .)
    RSQUARE         reduce using rule 4 (TypeName -> TypeToken .)
    LCURL           reduce using rule 4 (TypeName -> TypeToken .)
    RPAREN          reduce using rule 4 (TypeName -> TypeToken .)
    COMMA           reduce using rule 4 (TypeName -> TypeToken .)
    LPAREN          reduce using rule 4 (TypeName -> TypeToken .)


state 58

    (55) TypeExprListOpt -> Type . EQUALS ExpressionList

    EQUALS          shift and go to state 90


state 59

    (2) Type -> TypeName .

    RSQUARE         reduce using rule 2 (Type -> TypeName .)
    RPAREN          reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    EQUALS          reduce using rule 2 (Type -> TypeName .)
    SEMICOLON       reduce using rule 2 (Type -> TypeName .)
    LCURL           reduce using rule 2 (Type -> TypeName .)
    LPAREN          reduce using rule 2 (Type -> TypeName .)


state 60

    (101) QualifiedIdent -> IDENTIFIER . DOT TypeName

    DOT             shift and go to state 91


state 61

    (15) TypeLit -> SliceType .

    RPAREN          reduce using rule 15 (TypeLit -> SliceType .)
    COMMA           reduce using rule 15 (TypeLit -> SliceType .)
    SEMICOLON       reduce using rule 15 (TypeLit -> SliceType .)
    EQUALS          reduce using rule 15 (TypeLit -> SliceType .)
    RSQUARE         reduce using rule 15 (TypeLit -> SliceType .)
    LCURL           reduce using rule 15 (TypeLit -> SliceType .)
    LPAREN          reduce using rule 15 (TypeLit -> SliceType .)


state 62

    (9) TypeToken -> STRING .

    SEMICOLON       reduce using rule 9 (TypeToken -> STRING .)
    EQUALS          reduce using rule 9 (TypeToken -> STRING .)
    RSQUARE         reduce using rule 9 (TypeToken -> STRING .)
    LCURL           reduce using rule 9 (TypeToken -> STRING .)
    RPAREN          reduce using rule 9 (TypeToken -> STRING .)
    COMMA           reduce using rule 9 (TypeToken -> STRING .)
    LPAREN          reduce using rule 9 (TypeToken -> STRING .)


state 63

    (14) TypeLit -> MapType .

    RPAREN          reduce using rule 14 (TypeLit -> MapType .)
    COMMA           reduce using rule 14 (TypeLit -> MapType .)
    SEMICOLON       reduce using rule 14 (TypeLit -> MapType .)
    EQUALS          reduce using rule 14 (TypeLit -> MapType .)
    RSQUARE         reduce using rule 14 (TypeLit -> MapType .)
    LCURL           reduce using rule 14 (TypeLit -> MapType .)
    LPAREN          reduce using rule 14 (TypeLit -> MapType .)


state 64

    (20) ArrayType -> LSQUARE . ArrayLength RSQUARE ElementType
    (17) SliceType -> LSQUARE . RSQUARE ElementType
    (21) ArrayLength -> . I INT_LIT
    (96) I -> .

    RSQUARE         shift and go to state 92
    INT_LIT         reduce using rule 96 (I -> .)

    I                              shift and go to state 93
    ArrayLength                    shift and go to state 94

state 65

    (18) MapType -> MAP . LSQUARE KeyType RSQUARE ElementType

    LSQUARE         shift and go to state 95


state 66

    (6) TypeToken -> INT .

    SEMICOLON       reduce using rule 6 (TypeToken -> INT .)
    EQUALS          reduce using rule 6 (TypeToken -> INT .)
    RSQUARE         reduce using rule 6 (TypeToken -> INT .)
    LCURL           reduce using rule 6 (TypeToken -> INT .)
    RPAREN          reduce using rule 6 (TypeToken -> INT .)
    COMMA           reduce using rule 6 (TypeToken -> INT .)
    LPAREN          reduce using rule 6 (TypeToken -> INT .)


state 67

    (7) TypeToken -> FLOAT .

    SEMICOLON       reduce using rule 7 (TypeToken -> FLOAT .)
    EQUALS          reduce using rule 7 (TypeToken -> FLOAT .)
    RSQUARE         reduce using rule 7 (TypeToken -> FLOAT .)
    LCURL           reduce using rule 7 (TypeToken -> FLOAT .)
    RPAREN          reduce using rule 7 (TypeToken -> FLOAT .)
    COMMA           reduce using rule 7 (TypeToken -> FLOAT .)
    LPAREN          reduce using rule 7 (TypeToken -> FLOAT .)


state 68

    (12) TypeLit -> ST . StructType
    (23) StructType -> . FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (24) FuncScope -> .

    STRUCT          reduce using rule 24 (FuncScope -> .)

    StructType                     shift and go to state 96
    FuncScope                      shift and go to state 97

state 69

    (54) ConstSpec -> IdentifierList TypeExprListOpt .

    SEMICOLON       reduce using rule 54 (ConstSpec -> IdentifierList TypeExprListOpt .)


state 70

    (8) TypeToken -> BOOL .

    SEMICOLON       reduce using rule 8 (TypeToken -> BOOL .)
    EQUALS          reduce using rule 8 (TypeToken -> BOOL .)
    RSQUARE         reduce using rule 8 (TypeToken -> BOOL .)
    LCURL           reduce using rule 8 (TypeToken -> BOOL .)
    RPAREN          reduce using rule 8 (TypeToken -> BOOL .)
    COMMA           reduce using rule 8 (TypeToken -> BOOL .)
    LPAREN          reduce using rule 8 (TypeToken -> BOOL .)


state 71

    (13) TypeLit -> PointerType .

    RPAREN          reduce using rule 13 (TypeLit -> PointerType .)
    COMMA           reduce using rule 13 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 13 (TypeLit -> PointerType .)
    EQUALS          reduce using rule 13 (TypeLit -> PointerType .)
    RSQUARE         reduce using rule 13 (TypeLit -> PointerType .)
    LCURL           reduce using rule 13 (TypeLit -> PointerType .)
    LPAREN          reduce using rule 13 (TypeLit -> PointerType .)


state 72

    (10) TypeToken -> TYPE . IDENTIFIER

    IDENTIFIER      shift and go to state 98


state 73

    (5) TypeName -> QualifiedIdent .

    EQUALS          reduce using rule 5 (TypeName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 5 (TypeName -> QualifiedIdent .)
    RSQUARE         reduce using rule 5 (TypeName -> QualifiedIdent .)
    LCURL           reduce using rule 5 (TypeName -> QualifiedIdent .)
    RPAREN          reduce using rule 5 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 5 (TypeName -> QualifiedIdent .)
    LPAREN          reduce using rule 5 (TypeName -> QualifiedIdent .)


state 74

    (59) IdentifierRep -> IDENTIFIER COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 99


state 75

    (80) FunctionDecl -> FUNC FunctionName CreateScope . Function EndScope
    (81) FunctionDecl -> FUNC FunctionName CreateScope . Signature EndScope
    (85) Function -> . Signature RetTypeSet FunctionBody
    (30) Signature -> . Parameters ResultOpt
    (35) Parameters -> . LPAREN ParametersList RPAREN
    (36) Parameters -> . LPAREN RPAREN

    LPAREN          shift and go to state 103

    Function                       shift and go to state 100
    Parameters                     shift and go to state 101
    Signature                      shift and go to state 102

state 76

    (72) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (73) VarSpecRep -> VarSpecRep . VarSpec SEMICOLON
    (75) VarSpec -> . IdentifierList Type ExpressionListOpt
    (56) IdentifierList -> . IDENTIFIER
    (57) IdentifierList -> . IdentifierRep
    (58) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (59) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER

    RPAREN          shift and go to state 104
    IDENTIFIER      shift and go to state 35

    IdentifierRep                  shift and go to state 32
    VarSpec                        shift and go to state 105
    IdentifierList                 shift and go to state 41

state 77

    (74) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 74 (VarSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 74 (VarSpecRep -> epsilon .)


state 78

    (75) VarSpec -> IdentifierList Type . ExpressionListOpt
    (76) ExpressionListOpt -> . EQUALS ExpressionList
    (77) ExpressionListOpt -> . epsilon
    (78) ExpressionListOpt -> . EQUALS MALLOC LPAREN I INT_LIT RPAREN
    (236) epsilon -> .

    EQUALS          shift and go to state 106
    SEMICOLON       reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 107
    ExpressionListOpt              shift and go to state 108

state 79

    (64) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (65) TypeSpecRep -> TypeSpecRep . TypeSpec SEMICOLON
    (67) TypeSpec -> . AliasDecl
    (68) TypeSpec -> . TypeDef
    (69) AliasDecl -> . IDENTIFIER EQUALS Type
    (70) TypeDef -> . IDENTIFIER Type

    RPAREN          shift and go to state 109
    IDENTIFIER      shift and go to state 46

    TypeDef                        shift and go to state 42
    AliasDecl                      shift and go to state 43
    TypeSpec                       shift and go to state 110

state 80

    (66) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 66 (TypeSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 66 (TypeSpecRep -> epsilon .)


state 81

    (70) TypeDef -> IDENTIFIER Type .

    SEMICOLON       reduce using rule 70 (TypeDef -> IDENTIFIER Type .)


state 82

    (69) AliasDecl -> IDENTIFIER EQUALS . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    Type                           shift and go to state 111
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    TypeLit                        shift and go to state 56
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 83

    (228) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOLON       reduce using rule 228 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 84

    (229) ImportSpecRep -> ImportSpecRep ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 112


state 85

    (58) IdentifierRep -> IdentifierRep COMMA IDENTIFIER .

    COMMA           reduce using rule 58 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    INT             reduce using rule 58 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    FLOAT           reduce using rule 58 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    BOOL            reduce using rule 58 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRING          reduce using rule 58 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TYPE            reduce using rule 58 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    IDENTIFIER      reduce using rule 58 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LSQUARE         reduce using rule 58 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    MULTIPLY        reduce using rule 58 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    MAP             reduce using rule 58 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRUCT          reduce using rule 58 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)


state 86

    (52) ConstSpecRep -> ConstSpecRep ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 113


state 87

    (51) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOLON       reduce using rule 51 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 88

    (29) BaseType -> Type .

    EQUALS          reduce using rule 29 (BaseType -> Type .)
    SEMICOLON       reduce using rule 29 (BaseType -> Type .)
    RSQUARE         reduce using rule 29 (BaseType -> Type .)
    LCURL           reduce using rule 29 (BaseType -> Type .)
    RPAREN          reduce using rule 29 (BaseType -> Type .)
    COMMA           reduce using rule 29 (BaseType -> Type .)
    LPAREN          reduce using rule 29 (BaseType -> Type .)


state 89

    (28) PointerType -> MULTIPLY BaseType .

    RSQUARE         reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    LCURL           reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    SEMICOLON       reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    EQUALS          reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    RPAREN          reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    COMMA           reduce using rule 28 (PointerType -> MULTIPLY BaseType .)
    LPAREN          reduce using rule 28 (PointerType -> MULTIPLY BaseType .)


state 90

    (55) TypeExprListOpt -> Type EQUALS . ExpressionList
    (60) ExpressionList -> . Expression ExpressionRep
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Conversion                     shift and go to state 115
    ExpressionList                 shift and go to state 129
    C                              shift and go to state 123
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    Literal                        shift and go to state 132
    Expression                     shift and go to state 133

state 91

    (101) QualifiedIdent -> IDENTIFIER DOT . TypeName
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60

    TypeName                       shift and go to state 136
    QualifiedIdent                 shift and go to state 73
    TypeToken                      shift and go to state 57

state 92

    (17) SliceType -> LSQUARE RSQUARE . ElementType
    (22) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    Type                           shift and go to state 137
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    ElementType                    shift and go to state 138
    TypeLit                        shift and go to state 56
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 93

    (21) ArrayLength -> I . INT_LIT

    INT_LIT         shift and go to state 139


state 94

    (20) ArrayType -> LSQUARE ArrayLength . RSQUARE ElementType

    RSQUARE         shift and go to state 140


state 95

    (18) MapType -> MAP LSQUARE . KeyType RSQUARE ElementType
    (19) KeyType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    TypeLit                        shift and go to state 56
    KeyType                        shift and go to state 142
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    Type                           shift and go to state 141
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 96

    (12) TypeLit -> ST StructType .

    RPAREN          reduce using rule 12 (TypeLit -> ST StructType .)
    COMMA           reduce using rule 12 (TypeLit -> ST StructType .)
    SEMICOLON       reduce using rule 12 (TypeLit -> ST StructType .)
    EQUALS          reduce using rule 12 (TypeLit -> ST StructType .)
    RSQUARE         reduce using rule 12 (TypeLit -> ST StructType .)
    LCURL           reduce using rule 12 (TypeLit -> ST StructType .)
    LPAREN          reduce using rule 12 (TypeLit -> ST StructType .)


state 97

    (23) StructType -> FuncScope . STRUCT LCURL FieldDeclRep RCURL EndScope

    STRUCT          shift and go to state 143


state 98

    (10) TypeToken -> TYPE IDENTIFIER .

    SEMICOLON       reduce using rule 10 (TypeToken -> TYPE IDENTIFIER .)
    EQUALS          reduce using rule 10 (TypeToken -> TYPE IDENTIFIER .)
    RSQUARE         reduce using rule 10 (TypeToken -> TYPE IDENTIFIER .)
    LCURL           reduce using rule 10 (TypeToken -> TYPE IDENTIFIER .)
    RPAREN          reduce using rule 10 (TypeToken -> TYPE IDENTIFIER .)
    COMMA           reduce using rule 10 (TypeToken -> TYPE IDENTIFIER .)
    LPAREN          reduce using rule 10 (TypeToken -> TYPE IDENTIFIER .)


state 99

    (59) IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .

    COMMA           reduce using rule 59 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    INT             reduce using rule 59 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    FLOAT           reduce using rule 59 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    BOOL            reduce using rule 59 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    STRING          reduce using rule 59 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    TYPE            reduce using rule 59 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    IDENTIFIER      reduce using rule 59 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    LSQUARE         reduce using rule 59 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    MULTIPLY        reduce using rule 59 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    MAP             reduce using rule 59 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)
    STRUCT          reduce using rule 59 (IdentifierRep -> IDENTIFIER COMMA IDENTIFIER .)


state 100

    (80) FunctionDecl -> FUNC FunctionName CreateScope Function . EndScope
    (83) EndScope -> .

    SEMICOLON       reduce using rule 83 (EndScope -> .)

    EndScope                       shift and go to state 144

state 101

    (30) Signature -> Parameters . ResultOpt
    (31) ResultOpt -> . Result
    (32) ResultOpt -> . epsilon
    (33) Result -> . Parameters
    (34) Result -> . Type
    (236) epsilon -> .
    (35) Parameters -> . LPAREN ParametersList RPAREN
    (36) Parameters -> . LPAREN RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    LCURL           reduce using rule 236 (epsilon -> .)
    SEMICOLON       reduce using rule 236 (epsilon -> .)
    LPAREN          shift and go to state 103
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    Parameters                     shift and go to state 145
    epsilon                        shift and go to state 148
    ResultOpt                      shift and go to state 147
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    TypeLit                        shift and go to state 56
    Result                         shift and go to state 149
    PointerType                    shift and go to state 71
    SliceType                      shift and go to state 61
    Type                           shift and go to state 146
    QualifiedIdent                 shift and go to state 73
    MapType                        shift and go to state 63

state 102

    (81) FunctionDecl -> FUNC FunctionName CreateScope Signature . EndScope
    (85) Function -> Signature . RetTypeSet FunctionBody
    (83) EndScope -> .
    (86) RetTypeSet -> .

    SEMICOLON       reduce using rule 83 (EndScope -> .)
    LCURL           reduce using rule 86 (RetTypeSet -> .)

    EndScope                       shift and go to state 150
    RetTypeSet                     shift and go to state 151

state 103

    (35) Parameters -> LPAREN . ParametersList RPAREN
    (36) Parameters -> LPAREN . RPAREN
    (37) ParametersList -> . ParameterDecl
    (38) ParametersList -> . ParametersList COMMA ParameterDecl
    (39) ParameterDecl -> . IdentifierList Type
    (40) ParameterDecl -> . Type
    (56) IdentifierList -> . IDENTIFIER
    (57) IdentifierList -> . IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (58) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (59) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    RPAREN          shift and go to state 154
    IDENTIFIER      shift and go to state 156
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    ParameterDecl                  shift and go to state 157
    ArrayType                      shift and go to state 54
    IdentifierRep                  shift and go to state 32
    TypeName                       shift and go to state 59
    TypeLit                        shift and go to state 56
    MapType                        shift and go to state 63
    IdentifierList                 shift and go to state 152
    PointerType                    shift and go to state 71
    ParametersList                 shift and go to state 155
    ST                             shift and go to state 68
    Type                           shift and go to state 153
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 104

    (72) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOLON       reduce using rule 72 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 105

    (73) VarSpecRep -> VarSpecRep VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 158


state 106

    (76) ExpressionListOpt -> EQUALS . ExpressionList
    (78) ExpressionListOpt -> EQUALS . MALLOC LPAREN I INT_LIT RPAREN
    (60) ExpressionList -> . Expression ExpressionRep
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    MALLOC          shift and go to state 159
    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Conversion                     shift and go to state 115
    ExpressionList                 shift and go to state 160
    C                              shift and go to state 123
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    Literal                        shift and go to state 132
    Expression                     shift and go to state 133

state 107

    (77) ExpressionListOpt -> epsilon .

    SEMICOLON       reduce using rule 77 (ExpressionListOpt -> epsilon .)


state 108

    (75) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOLON       reduce using rule 75 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 109

    (64) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOLON       reduce using rule 64 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 110

    (65) TypeSpecRep -> TypeSpecRep TypeSpec . SEMICOLON

    SEMICOLON       shift and go to state 161


state 111

    (69) AliasDecl -> IDENTIFIER EQUALS Type .

    SEMICOLON       reduce using rule 69 (AliasDecl -> IDENTIFIER EQUALS Type .)


state 112

    (229) ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .

    RPAREN          reduce using rule 229 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    DOT             reduce using rule 229 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 229 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    STRING_LIT      reduce using rule 229 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)


state 113

    (52) ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .

    RPAREN          reduce using rule 52 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 52 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .)


state 114

    (137) UnaryExpr -> UnaryOp . UnaryExpr
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 162
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123

state 115

    (104) PrimaryExpr -> Conversion .

    DOT             reduce using rule 104 (PrimaryExpr -> Conversion .)
    LSQUARE         reduce using rule 104 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 104 (PrimaryExpr -> Conversion .)
    COMPARE_OR      reduce using rule 104 (PrimaryExpr -> Conversion .)
    COMPARE_AND     reduce using rule 104 (PrimaryExpr -> Conversion .)
    EQEQ            reduce using rule 104 (PrimaryExpr -> Conversion .)
    NOTEQUALS       reduce using rule 104 (PrimaryExpr -> Conversion .)
    LESSTHAN        reduce using rule 104 (PrimaryExpr -> Conversion .)
    GREATERTHAN     reduce using rule 104 (PrimaryExpr -> Conversion .)
    LESSTHAN_EQUAL  reduce using rule 104 (PrimaryExpr -> Conversion .)
    GREATERTHAN_EQUAL reduce using rule 104 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 104 (PrimaryExpr -> Conversion .)
    XOR             reduce using rule 104 (PrimaryExpr -> Conversion .)
    ANDXOR          reduce using rule 104 (PrimaryExpr -> Conversion .)
    DIVIDE          reduce using rule 104 (PrimaryExpr -> Conversion .)
    MODULO          reduce using rule 104 (PrimaryExpr -> Conversion .)
    LSHIFT          reduce using rule 104 (PrimaryExpr -> Conversion .)
    RSHIFT          reduce using rule 104 (PrimaryExpr -> Conversion .)
    PLUS            reduce using rule 104 (PrimaryExpr -> Conversion .)
    MINUS           reduce using rule 104 (PrimaryExpr -> Conversion .)
    MULTIPLY        reduce using rule 104 (PrimaryExpr -> Conversion .)
    AND             reduce using rule 104 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 104 (PrimaryExpr -> Conversion .)
    SEMICOLON       reduce using rule 104 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 104 (PrimaryExpr -> Conversion .)
    RSQUARE         reduce using rule 104 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 104 (PrimaryExpr -> Conversion .)
    LCURL           reduce using rule 104 (PrimaryExpr -> Conversion .)
    PLUSEQUAL       reduce using rule 104 (PrimaryExpr -> Conversion .)
    MINUSEQUAL      reduce using rule 104 (PrimaryExpr -> Conversion .)
    TIMESEQUAL      reduce using rule 104 (PrimaryExpr -> Conversion .)
    DIVIDE_EQUAL    reduce using rule 104 (PrimaryExpr -> Conversion .)
    MODEQUAL        reduce using rule 104 (PrimaryExpr -> Conversion .)
    ANDEQUAL        reduce using rule 104 (PrimaryExpr -> Conversion .)
    OREQUAL         reduce using rule 104 (PrimaryExpr -> Conversion .)
    XOREQUAL        reduce using rule 104 (PrimaryExpr -> Conversion .)
    ANDXOR_EQUAL    reduce using rule 104 (PrimaryExpr -> Conversion .)
    LSHIFT_EQUAL    reduce using rule 104 (PrimaryExpr -> Conversion .)
    RSHIFT_EQUAL    reduce using rule 104 (PrimaryExpr -> Conversion .)
    EQUALS          reduce using rule 104 (PrimaryExpr -> Conversion .)
    INCREMENT       reduce using rule 104 (PrimaryExpr -> Conversion .)
    DECREMENT       reduce using rule 104 (PrimaryExpr -> Conversion .)


state 116

    (141) UnaryOp -> MULTIPLY .

    NOT             reduce using rule 141 (UnaryOp -> MULTIPLY .)
    PLUS            reduce using rule 141 (UnaryOp -> MULTIPLY .)
    MINUS           reduce using rule 141 (UnaryOp -> MULTIPLY .)
    MULTIPLY        reduce using rule 141 (UnaryOp -> MULTIPLY .)
    AND             reduce using rule 141 (UnaryOp -> MULTIPLY .)
    LPAREN          reduce using rule 141 (UnaryOp -> MULTIPLY .)
    TYPECAST        reduce using rule 141 (UnaryOp -> MULTIPLY .)
    IDENTIFIER      reduce using rule 141 (UnaryOp -> MULTIPLY .)
    INT_LIT         reduce using rule 141 (UnaryOp -> MULTIPLY .)
    FLOAT_LIT       reduce using rule 141 (UnaryOp -> MULTIPLY .)
    IMAGINARY_LIT   reduce using rule 141 (UnaryOp -> MULTIPLY .)
    STRING_LIT      reduce using rule 141 (UnaryOp -> MULTIPLY .)


state 117

    (140) UnaryOp -> MINUS .

    NOT             reduce using rule 140 (UnaryOp -> MINUS .)
    PLUS            reduce using rule 140 (UnaryOp -> MINUS .)
    MINUS           reduce using rule 140 (UnaryOp -> MINUS .)
    MULTIPLY        reduce using rule 140 (UnaryOp -> MINUS .)
    AND             reduce using rule 140 (UnaryOp -> MINUS .)
    LPAREN          reduce using rule 140 (UnaryOp -> MINUS .)
    TYPECAST        reduce using rule 140 (UnaryOp -> MINUS .)
    IDENTIFIER      reduce using rule 140 (UnaryOp -> MINUS .)
    INT_LIT         reduce using rule 140 (UnaryOp -> MINUS .)
    FLOAT_LIT       reduce using rule 140 (UnaryOp -> MINUS .)
    IMAGINARY_LIT   reduce using rule 140 (UnaryOp -> MINUS .)
    STRING_LIT      reduce using rule 140 (UnaryOp -> MINUS .)


state 118

    (89) Operand -> OperandName .

    DOT             reduce using rule 89 (Operand -> OperandName .)
    LSQUARE         reduce using rule 89 (Operand -> OperandName .)
    LPAREN          reduce using rule 89 (Operand -> OperandName .)
    COMPARE_OR      reduce using rule 89 (Operand -> OperandName .)
    COMPARE_AND     reduce using rule 89 (Operand -> OperandName .)
    EQEQ            reduce using rule 89 (Operand -> OperandName .)
    NOTEQUALS       reduce using rule 89 (Operand -> OperandName .)
    LESSTHAN        reduce using rule 89 (Operand -> OperandName .)
    GREATERTHAN     reduce using rule 89 (Operand -> OperandName .)
    LESSTHAN_EQUAL  reduce using rule 89 (Operand -> OperandName .)
    GREATERTHAN_EQUAL reduce using rule 89 (Operand -> OperandName .)
    OR              reduce using rule 89 (Operand -> OperandName .)
    XOR             reduce using rule 89 (Operand -> OperandName .)
    ANDXOR          reduce using rule 89 (Operand -> OperandName .)
    DIVIDE          reduce using rule 89 (Operand -> OperandName .)
    MODULO          reduce using rule 89 (Operand -> OperandName .)
    LSHIFT          reduce using rule 89 (Operand -> OperandName .)
    RSHIFT          reduce using rule 89 (Operand -> OperandName .)
    PLUS            reduce using rule 89 (Operand -> OperandName .)
    MINUS           reduce using rule 89 (Operand -> OperandName .)
    MULTIPLY        reduce using rule 89 (Operand -> OperandName .)
    AND             reduce using rule 89 (Operand -> OperandName .)
    COMMA           reduce using rule 89 (Operand -> OperandName .)
    SEMICOLON       reduce using rule 89 (Operand -> OperandName .)
    RPAREN          reduce using rule 89 (Operand -> OperandName .)
    RSQUARE         reduce using rule 89 (Operand -> OperandName .)
    COLON           reduce using rule 89 (Operand -> OperandName .)
    LCURL           reduce using rule 89 (Operand -> OperandName .)
    PLUSEQUAL       reduce using rule 89 (Operand -> OperandName .)
    MINUSEQUAL      reduce using rule 89 (Operand -> OperandName .)
    TIMESEQUAL      reduce using rule 89 (Operand -> OperandName .)
    DIVIDE_EQUAL    reduce using rule 89 (Operand -> OperandName .)
    MODEQUAL        reduce using rule 89 (Operand -> OperandName .)
    ANDEQUAL        reduce using rule 89 (Operand -> OperandName .)
    OREQUAL         reduce using rule 89 (Operand -> OperandName .)
    XOREQUAL        reduce using rule 89 (Operand -> OperandName .)
    ANDXOR_EQUAL    reduce using rule 89 (Operand -> OperandName .)
    LSHIFT_EQUAL    reduce using rule 89 (Operand -> OperandName .)
    RSHIFT_EQUAL    reduce using rule 89 (Operand -> OperandName .)
    EQUALS          reduce using rule 89 (Operand -> OperandName .)
    INCREMENT       reduce using rule 89 (Operand -> OperandName .)
    DECREMENT       reduce using rule 89 (Operand -> OperandName .)


state 119

    (91) Literal -> BasicLit .

    DOT             reduce using rule 91 (Literal -> BasicLit .)
    LSQUARE         reduce using rule 91 (Literal -> BasicLit .)
    LPAREN          reduce using rule 91 (Literal -> BasicLit .)
    COMPARE_OR      reduce using rule 91 (Literal -> BasicLit .)
    COMPARE_AND     reduce using rule 91 (Literal -> BasicLit .)
    EQEQ            reduce using rule 91 (Literal -> BasicLit .)
    NOTEQUALS       reduce using rule 91 (Literal -> BasicLit .)
    LESSTHAN        reduce using rule 91 (Literal -> BasicLit .)
    GREATERTHAN     reduce using rule 91 (Literal -> BasicLit .)
    LESSTHAN_EQUAL  reduce using rule 91 (Literal -> BasicLit .)
    GREATERTHAN_EQUAL reduce using rule 91 (Literal -> BasicLit .)
    OR              reduce using rule 91 (Literal -> BasicLit .)
    XOR             reduce using rule 91 (Literal -> BasicLit .)
    ANDXOR          reduce using rule 91 (Literal -> BasicLit .)
    DIVIDE          reduce using rule 91 (Literal -> BasicLit .)
    MODULO          reduce using rule 91 (Literal -> BasicLit .)
    LSHIFT          reduce using rule 91 (Literal -> BasicLit .)
    RSHIFT          reduce using rule 91 (Literal -> BasicLit .)
    PLUS            reduce using rule 91 (Literal -> BasicLit .)
    MINUS           reduce using rule 91 (Literal -> BasicLit .)
    MULTIPLY        reduce using rule 91 (Literal -> BasicLit .)
    AND             reduce using rule 91 (Literal -> BasicLit .)
    COMMA           reduce using rule 91 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 91 (Literal -> BasicLit .)
    RPAREN          reduce using rule 91 (Literal -> BasicLit .)
    RSQUARE         reduce using rule 91 (Literal -> BasicLit .)
    COLON           reduce using rule 91 (Literal -> BasicLit .)
    LCURL           reduce using rule 91 (Literal -> BasicLit .)
    PLUSEQUAL       reduce using rule 91 (Literal -> BasicLit .)
    MINUSEQUAL      reduce using rule 91 (Literal -> BasicLit .)
    TIMESEQUAL      reduce using rule 91 (Literal -> BasicLit .)
    DIVIDE_EQUAL    reduce using rule 91 (Literal -> BasicLit .)
    MODEQUAL        reduce using rule 91 (Literal -> BasicLit .)
    ANDEQUAL        reduce using rule 91 (Literal -> BasicLit .)
    OREQUAL         reduce using rule 91 (Literal -> BasicLit .)
    XOREQUAL        reduce using rule 91 (Literal -> BasicLit .)
    ANDXOR_EQUAL    reduce using rule 91 (Literal -> BasicLit .)
    LSHIFT_EQUAL    reduce using rule 91 (Literal -> BasicLit .)
    RSHIFT_EQUAL    reduce using rule 91 (Literal -> BasicLit .)
    EQUALS          reduce using rule 91 (Literal -> BasicLit .)
    INCREMENT       reduce using rule 91 (Literal -> BasicLit .)
    DECREMENT       reduce using rule 91 (Literal -> BasicLit .)


state 120

    (138) UnaryExpr -> NOT . UnaryExpr
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 163
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123

state 121

    (139) UnaryOp -> PLUS .

    NOT             reduce using rule 139 (UnaryOp -> PLUS .)
    PLUS            reduce using rule 139 (UnaryOp -> PLUS .)
    MINUS           reduce using rule 139 (UnaryOp -> PLUS .)
    MULTIPLY        reduce using rule 139 (UnaryOp -> PLUS .)
    AND             reduce using rule 139 (UnaryOp -> PLUS .)
    LPAREN          reduce using rule 139 (UnaryOp -> PLUS .)
    TYPECAST        reduce using rule 139 (UnaryOp -> PLUS .)
    IDENTIFIER      reduce using rule 139 (UnaryOp -> PLUS .)
    INT_LIT         reduce using rule 139 (UnaryOp -> PLUS .)
    FLOAT_LIT       reduce using rule 139 (UnaryOp -> PLUS .)
    IMAGINARY_LIT   reduce using rule 139 (UnaryOp -> PLUS .)
    STRING_LIT      reduce using rule 139 (UnaryOp -> PLUS .)


state 122

    (100) OperandName -> IDENTIFIER .

    DOT             reduce using rule 100 (OperandName -> IDENTIFIER .)
    LSQUARE         reduce using rule 100 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 100 (OperandName -> IDENTIFIER .)
    COMPARE_OR      reduce using rule 100 (OperandName -> IDENTIFIER .)
    COMPARE_AND     reduce using rule 100 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 100 (OperandName -> IDENTIFIER .)
    NOTEQUALS       reduce using rule 100 (OperandName -> IDENTIFIER .)
    LESSTHAN        reduce using rule 100 (OperandName -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 100 (OperandName -> IDENTIFIER .)
    LESSTHAN_EQUAL  reduce using rule 100 (OperandName -> IDENTIFIER .)
    GREATERTHAN_EQUAL reduce using rule 100 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 100 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 100 (OperandName -> IDENTIFIER .)
    ANDXOR          reduce using rule 100 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 100 (OperandName -> IDENTIFIER .)
    MODULO          reduce using rule 100 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 100 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 100 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 100 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 100 (OperandName -> IDENTIFIER .)
    MULTIPLY        reduce using rule 100 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 100 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 100 (OperandName -> IDENTIFIER .)
    RSQUARE         reduce using rule 100 (OperandName -> IDENTIFIER .)
    COLON           reduce using rule 100 (OperandName -> IDENTIFIER .)
    LCURL           reduce using rule 100 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 100 (OperandName -> IDENTIFIER .)
    RPAREN          reduce using rule 100 (OperandName -> IDENTIFIER .)
    PLUSEQUAL       reduce using rule 100 (OperandName -> IDENTIFIER .)
    MINUSEQUAL      reduce using rule 100 (OperandName -> IDENTIFIER .)
    TIMESEQUAL      reduce using rule 100 (OperandName -> IDENTIFIER .)
    DIVIDE_EQUAL    reduce using rule 100 (OperandName -> IDENTIFIER .)
    MODEQUAL        reduce using rule 100 (OperandName -> IDENTIFIER .)
    ANDEQUAL        reduce using rule 100 (OperandName -> IDENTIFIER .)
    OREQUAL         reduce using rule 100 (OperandName -> IDENTIFIER .)
    XOREQUAL        reduce using rule 100 (OperandName -> IDENTIFIER .)
    ANDXOR_EQUAL    reduce using rule 100 (OperandName -> IDENTIFIER .)
    LSHIFT_EQUAL    reduce using rule 100 (OperandName -> IDENTIFIER .)
    RSHIFT_EQUAL    reduce using rule 100 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 100 (OperandName -> IDENTIFIER .)
    INCREMENT       reduce using rule 100 (OperandName -> IDENTIFIER .)
    DECREMENT       reduce using rule 100 (OperandName -> IDENTIFIER .)


state 123

    (94) BasicLit -> C . IMAGINARY_LIT

    IMAGINARY_LIT   shift and go to state 164


state 124

    (93) BasicLit -> F . FLOAT_LIT

    FLOAT_LIT       shift and go to state 165


state 125

    (92) BasicLit -> I . INT_LIT

    INT_LIT         shift and go to state 166


state 126

    (114) Expression -> UnaryExpr .

    COMPARE_OR      reduce using rule 114 (Expression -> UnaryExpr .)
    COMPARE_AND     reduce using rule 114 (Expression -> UnaryExpr .)
    EQEQ            reduce using rule 114 (Expression -> UnaryExpr .)
    NOTEQUALS       reduce using rule 114 (Expression -> UnaryExpr .)
    LESSTHAN        reduce using rule 114 (Expression -> UnaryExpr .)
    GREATERTHAN     reduce using rule 114 (Expression -> UnaryExpr .)
    LESSTHAN_EQUAL  reduce using rule 114 (Expression -> UnaryExpr .)
    GREATERTHAN_EQUAL reduce using rule 114 (Expression -> UnaryExpr .)
    OR              reduce using rule 114 (Expression -> UnaryExpr .)
    XOR             reduce using rule 114 (Expression -> UnaryExpr .)
    ANDXOR          reduce using rule 114 (Expression -> UnaryExpr .)
    DIVIDE          reduce using rule 114 (Expression -> UnaryExpr .)
    MODULO          reduce using rule 114 (Expression -> UnaryExpr .)
    LSHIFT          reduce using rule 114 (Expression -> UnaryExpr .)
    RSHIFT          reduce using rule 114 (Expression -> UnaryExpr .)
    PLUS            reduce using rule 114 (Expression -> UnaryExpr .)
    MINUS           reduce using rule 114 (Expression -> UnaryExpr .)
    MULTIPLY        reduce using rule 114 (Expression -> UnaryExpr .)
    AND             reduce using rule 114 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 114 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 114 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 114 (Expression -> UnaryExpr .)
    RSQUARE         reduce using rule 114 (Expression -> UnaryExpr .)
    COLON           reduce using rule 114 (Expression -> UnaryExpr .)
    LCURL           reduce using rule 114 (Expression -> UnaryExpr .)
    PLUSEQUAL       reduce using rule 114 (Expression -> UnaryExpr .)
    MINUSEQUAL      reduce using rule 114 (Expression -> UnaryExpr .)
    TIMESEQUAL      reduce using rule 114 (Expression -> UnaryExpr .)
    DIVIDE_EQUAL    reduce using rule 114 (Expression -> UnaryExpr .)
    MODEQUAL        reduce using rule 114 (Expression -> UnaryExpr .)
    ANDEQUAL        reduce using rule 114 (Expression -> UnaryExpr .)
    OREQUAL         reduce using rule 114 (Expression -> UnaryExpr .)
    XOREQUAL        reduce using rule 114 (Expression -> UnaryExpr .)
    ANDXOR_EQUAL    reduce using rule 114 (Expression -> UnaryExpr .)
    LSHIFT_EQUAL    reduce using rule 114 (Expression -> UnaryExpr .)
    RSHIFT_EQUAL    reduce using rule 114 (Expression -> UnaryExpr .)
    EQUALS          reduce using rule 114 (Expression -> UnaryExpr .)
    INCREMENT       reduce using rule 114 (Expression -> UnaryExpr .)
    DECREMENT       reduce using rule 114 (Expression -> UnaryExpr .)


state 127

    (136) UnaryExpr -> PrimaryExpr .
    (103) PrimaryExpr -> PrimaryExpr . DOT IDENTIFIER
    (105) PrimaryExpr -> PrimaryExpr . LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> PrimaryExpr . Slice
    (107) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (108) PrimaryExpr -> PrimaryExpr . LPAREN ExpressionListTypeOpt RPAREN
    (109) Slice -> . LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE
    (110) Slice -> . LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE
    (111) TypeAssertion -> . DOT LPAREN Type RPAREN

    COMPARE_OR      reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    COMPARE_AND     reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    EQEQ            reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    NOTEQUALS       reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    LESSTHAN        reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    GREATERTHAN     reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    LESSTHAN_EQUAL  reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    GREATERTHAN_EQUAL reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    ANDXOR          reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    MODULO          reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    LSHIFT          reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    RSHIFT          reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    MULTIPLY        reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    RSQUARE         reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    LCURL           reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    PLUSEQUAL       reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    MINUSEQUAL      reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    TIMESEQUAL      reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    DIVIDE_EQUAL    reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    MODEQUAL        reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    ANDEQUAL        reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    OREQUAL         reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    XOREQUAL        reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    ANDXOR_EQUAL    reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    LSHIFT_EQUAL    reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    RSHIFT_EQUAL    reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    EQUALS          reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    INCREMENT       reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    DECREMENT       reduce using rule 136 (UnaryExpr -> PrimaryExpr .)
    DOT             shift and go to state 171
    LSQUARE         shift and go to state 170
    LPAREN          shift and go to state 168

    Slice                          shift and go to state 167
    TypeAssertion                  shift and go to state 169

state 128

    (95) BasicLit -> S . STRING_LIT

    STRING_LIT      shift and go to state 172


state 129

    (55) TypeExprListOpt -> Type EQUALS ExpressionList .

    SEMICOLON       reduce using rule 55 (TypeExprListOpt -> Type EQUALS ExpressionList .)


state 130

    (102) PrimaryExpr -> Operand .

    DOT             reduce using rule 102 (PrimaryExpr -> Operand .)
    LSQUARE         reduce using rule 102 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 102 (PrimaryExpr -> Operand .)
    COMPARE_OR      reduce using rule 102 (PrimaryExpr -> Operand .)
    COMPARE_AND     reduce using rule 102 (PrimaryExpr -> Operand .)
    EQEQ            reduce using rule 102 (PrimaryExpr -> Operand .)
    NOTEQUALS       reduce using rule 102 (PrimaryExpr -> Operand .)
    LESSTHAN        reduce using rule 102 (PrimaryExpr -> Operand .)
    GREATERTHAN     reduce using rule 102 (PrimaryExpr -> Operand .)
    LESSTHAN_EQUAL  reduce using rule 102 (PrimaryExpr -> Operand .)
    GREATERTHAN_EQUAL reduce using rule 102 (PrimaryExpr -> Operand .)
    OR              reduce using rule 102 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 102 (PrimaryExpr -> Operand .)
    ANDXOR          reduce using rule 102 (PrimaryExpr -> Operand .)
    DIVIDE          reduce using rule 102 (PrimaryExpr -> Operand .)
    MODULO          reduce using rule 102 (PrimaryExpr -> Operand .)
    LSHIFT          reduce using rule 102 (PrimaryExpr -> Operand .)
    RSHIFT          reduce using rule 102 (PrimaryExpr -> Operand .)
    PLUS            reduce using rule 102 (PrimaryExpr -> Operand .)
    MINUS           reduce using rule 102 (PrimaryExpr -> Operand .)
    MULTIPLY        reduce using rule 102 (PrimaryExpr -> Operand .)
    AND             reduce using rule 102 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 102 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 102 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 102 (PrimaryExpr -> Operand .)
    RSQUARE         reduce using rule 102 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 102 (PrimaryExpr -> Operand .)
    LCURL           reduce using rule 102 (PrimaryExpr -> Operand .)
    PLUSEQUAL       reduce using rule 102 (PrimaryExpr -> Operand .)
    MINUSEQUAL      reduce using rule 102 (PrimaryExpr -> Operand .)
    TIMESEQUAL      reduce using rule 102 (PrimaryExpr -> Operand .)
    DIVIDE_EQUAL    reduce using rule 102 (PrimaryExpr -> Operand .)
    MODEQUAL        reduce using rule 102 (PrimaryExpr -> Operand .)
    ANDEQUAL        reduce using rule 102 (PrimaryExpr -> Operand .)
    OREQUAL         reduce using rule 102 (PrimaryExpr -> Operand .)
    XOREQUAL        reduce using rule 102 (PrimaryExpr -> Operand .)
    ANDXOR_EQUAL    reduce using rule 102 (PrimaryExpr -> Operand .)
    LSHIFT_EQUAL    reduce using rule 102 (PrimaryExpr -> Operand .)
    RSHIFT_EQUAL    reduce using rule 102 (PrimaryExpr -> Operand .)
    EQUALS          reduce using rule 102 (PrimaryExpr -> Operand .)
    INCREMENT       reduce using rule 102 (PrimaryExpr -> Operand .)
    DECREMENT       reduce using rule 102 (PrimaryExpr -> Operand .)


state 131

    (90) Operand -> LPAREN . Expression RPAREN
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 173

state 132

    (88) Operand -> Literal .

    DOT             reduce using rule 88 (Operand -> Literal .)
    LSQUARE         reduce using rule 88 (Operand -> Literal .)
    LPAREN          reduce using rule 88 (Operand -> Literal .)
    COMPARE_OR      reduce using rule 88 (Operand -> Literal .)
    COMPARE_AND     reduce using rule 88 (Operand -> Literal .)
    EQEQ            reduce using rule 88 (Operand -> Literal .)
    NOTEQUALS       reduce using rule 88 (Operand -> Literal .)
    LESSTHAN        reduce using rule 88 (Operand -> Literal .)
    GREATERTHAN     reduce using rule 88 (Operand -> Literal .)
    LESSTHAN_EQUAL  reduce using rule 88 (Operand -> Literal .)
    GREATERTHAN_EQUAL reduce using rule 88 (Operand -> Literal .)
    OR              reduce using rule 88 (Operand -> Literal .)
    XOR             reduce using rule 88 (Operand -> Literal .)
    ANDXOR          reduce using rule 88 (Operand -> Literal .)
    DIVIDE          reduce using rule 88 (Operand -> Literal .)
    MODULO          reduce using rule 88 (Operand -> Literal .)
    LSHIFT          reduce using rule 88 (Operand -> Literal .)
    RSHIFT          reduce using rule 88 (Operand -> Literal .)
    PLUS            reduce using rule 88 (Operand -> Literal .)
    MINUS           reduce using rule 88 (Operand -> Literal .)
    MULTIPLY        reduce using rule 88 (Operand -> Literal .)
    AND             reduce using rule 88 (Operand -> Literal .)
    COMMA           reduce using rule 88 (Operand -> Literal .)
    SEMICOLON       reduce using rule 88 (Operand -> Literal .)
    RPAREN          reduce using rule 88 (Operand -> Literal .)
    RSQUARE         reduce using rule 88 (Operand -> Literal .)
    COLON           reduce using rule 88 (Operand -> Literal .)
    LCURL           reduce using rule 88 (Operand -> Literal .)
    PLUSEQUAL       reduce using rule 88 (Operand -> Literal .)
    MINUSEQUAL      reduce using rule 88 (Operand -> Literal .)
    TIMESEQUAL      reduce using rule 88 (Operand -> Literal .)
    DIVIDE_EQUAL    reduce using rule 88 (Operand -> Literal .)
    MODEQUAL        reduce using rule 88 (Operand -> Literal .)
    ANDEQUAL        reduce using rule 88 (Operand -> Literal .)
    OREQUAL         reduce using rule 88 (Operand -> Literal .)
    XOREQUAL        reduce using rule 88 (Operand -> Literal .)
    ANDXOR_EQUAL    reduce using rule 88 (Operand -> Literal .)
    LSHIFT_EQUAL    reduce using rule 88 (Operand -> Literal .)
    RSHIFT_EQUAL    reduce using rule 88 (Operand -> Literal .)
    EQUALS          reduce using rule 88 (Operand -> Literal .)
    INCREMENT       reduce using rule 88 (Operand -> Literal .)
    DECREMENT       reduce using rule 88 (Operand -> Literal .)


state 133

    (60) ExpressionList -> Expression . ExpressionRep
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression
    (61) ExpressionRep -> . ExpressionRep COMMA Expression
    (62) ExpressionRep -> . epsilon
    (236) epsilon -> .

    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191
    COMMA           reduce using rule 236 (epsilon -> .)
    SEMICOLON       reduce using rule 236 (epsilon -> .)
    RPAREN          reduce using rule 236 (epsilon -> .)
    LCURL           reduce using rule 236 (epsilon -> .)
    COLON           reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 189
    ExpressionRep                  shift and go to state 176

state 134

    (142) UnaryOp -> AND .

    NOT             reduce using rule 142 (UnaryOp -> AND .)
    PLUS            reduce using rule 142 (UnaryOp -> AND .)
    MINUS           reduce using rule 142 (UnaryOp -> AND .)
    MULTIPLY        reduce using rule 142 (UnaryOp -> AND .)
    AND             reduce using rule 142 (UnaryOp -> AND .)
    LPAREN          reduce using rule 142 (UnaryOp -> AND .)
    TYPECAST        reduce using rule 142 (UnaryOp -> AND .)
    IDENTIFIER      reduce using rule 142 (UnaryOp -> AND .)
    INT_LIT         reduce using rule 142 (UnaryOp -> AND .)
    FLOAT_LIT       reduce using rule 142 (UnaryOp -> AND .)
    IMAGINARY_LIT   reduce using rule 142 (UnaryOp -> AND .)
    STRING_LIT      reduce using rule 142 (UnaryOp -> AND .)


state 135

    (143) Conversion -> TYPECAST . Type LPAREN Expression RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    Type                           shift and go to state 195
    TypeToken                      shift and go to state 57
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 136

    (101) QualifiedIdent -> IDENTIFIER DOT TypeName .

    LPAREN          reduce using rule 101 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    RPAREN          reduce using rule 101 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    COMMA           reduce using rule 101 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    SEMICOLON       reduce using rule 101 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    EQUALS          reduce using rule 101 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    RSQUARE         reduce using rule 101 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    LCURL           reduce using rule 101 (QualifiedIdent -> IDENTIFIER DOT TypeName .)


state 137

    (22) ElementType -> Type .

    EQUALS          reduce using rule 22 (ElementType -> Type .)
    SEMICOLON       reduce using rule 22 (ElementType -> Type .)
    RSQUARE         reduce using rule 22 (ElementType -> Type .)
    LCURL           reduce using rule 22 (ElementType -> Type .)
    RPAREN          reduce using rule 22 (ElementType -> Type .)
    COMMA           reduce using rule 22 (ElementType -> Type .)
    LPAREN          reduce using rule 22 (ElementType -> Type .)


state 138

    (17) SliceType -> LSQUARE RSQUARE ElementType .

    RSQUARE         reduce using rule 17 (SliceType -> LSQUARE RSQUARE ElementType .)
    EQUALS          reduce using rule 17 (SliceType -> LSQUARE RSQUARE ElementType .)
    SEMICOLON       reduce using rule 17 (SliceType -> LSQUARE RSQUARE ElementType .)
    LCURL           reduce using rule 17 (SliceType -> LSQUARE RSQUARE ElementType .)
    RPAREN          reduce using rule 17 (SliceType -> LSQUARE RSQUARE ElementType .)
    COMMA           reduce using rule 17 (SliceType -> LSQUARE RSQUARE ElementType .)
    LPAREN          reduce using rule 17 (SliceType -> LSQUARE RSQUARE ElementType .)


state 139

    (21) ArrayLength -> I INT_LIT .

    RSQUARE         reduce using rule 21 (ArrayLength -> I INT_LIT .)


state 140

    (20) ArrayType -> LSQUARE ArrayLength RSQUARE . ElementType
    (22) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    ElementType                    shift and go to state 196
    Type                           shift and go to state 137
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 141

    (19) KeyType -> Type .

    RSQUARE         reduce using rule 19 (KeyType -> Type .)


state 142

    (18) MapType -> MAP LSQUARE KeyType . RSQUARE ElementType

    RSQUARE         shift and go to state 197


state 143

    (23) StructType -> FuncScope STRUCT . LCURL FieldDeclRep RCURL EndScope

    LCURL           shift and go to state 198


state 144

    (80) FunctionDecl -> FUNC FunctionName CreateScope Function EndScope .

    SEMICOLON       reduce using rule 80 (FunctionDecl -> FUNC FunctionName CreateScope Function EndScope .)


state 145

    (33) Result -> Parameters .

    LCURL           reduce using rule 33 (Result -> Parameters .)
    SEMICOLON       reduce using rule 33 (Result -> Parameters .)


state 146

    (34) Result -> Type .

    LCURL           reduce using rule 34 (Result -> Type .)
    SEMICOLON       reduce using rule 34 (Result -> Type .)


state 147

    (30) Signature -> Parameters ResultOpt .

    LCURL           reduce using rule 30 (Signature -> Parameters ResultOpt .)
    SEMICOLON       reduce using rule 30 (Signature -> Parameters ResultOpt .)


state 148

    (32) ResultOpt -> epsilon .

    LCURL           reduce using rule 32 (ResultOpt -> epsilon .)
    SEMICOLON       reduce using rule 32 (ResultOpt -> epsilon .)


state 149

    (31) ResultOpt -> Result .

    LCURL           reduce using rule 31 (ResultOpt -> Result .)
    SEMICOLON       reduce using rule 31 (ResultOpt -> Result .)


state 150

    (81) FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope .

    SEMICOLON       reduce using rule 81 (FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope .)


state 151

    (85) Function -> Signature RetTypeSet . FunctionBody
    (87) FunctionBody -> . Block
    (41) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 201

    FunctionBody                   shift and go to state 199
    Block                          shift and go to state 200

state 152

    (39) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    Type                           shift and go to state 202
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    TypeLit                        shift and go to state 56
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 153

    (40) ParameterDecl -> Type .

    RPAREN          reduce using rule 40 (ParameterDecl -> Type .)
    COMMA           reduce using rule 40 (ParameterDecl -> Type .)


state 154

    (36) Parameters -> LPAREN RPAREN .

    LPAREN          reduce using rule 36 (Parameters -> LPAREN RPAREN .)
    INT             reduce using rule 36 (Parameters -> LPAREN RPAREN .)
    FLOAT           reduce using rule 36 (Parameters -> LPAREN RPAREN .)
    BOOL            reduce using rule 36 (Parameters -> LPAREN RPAREN .)
    STRING          reduce using rule 36 (Parameters -> LPAREN RPAREN .)
    TYPE            reduce using rule 36 (Parameters -> LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 36 (Parameters -> LPAREN RPAREN .)
    LSQUARE         reduce using rule 36 (Parameters -> LPAREN RPAREN .)
    MULTIPLY        reduce using rule 36 (Parameters -> LPAREN RPAREN .)
    MAP             reduce using rule 36 (Parameters -> LPAREN RPAREN .)
    STRUCT          reduce using rule 36 (Parameters -> LPAREN RPAREN .)
    LCURL           reduce using rule 36 (Parameters -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 36 (Parameters -> LPAREN RPAREN .)


state 155

    (35) Parameters -> LPAREN ParametersList . RPAREN
    (38) ParametersList -> ParametersList . COMMA ParameterDecl

    RPAREN          shift and go to state 204
    COMMA           shift and go to state 203


state 156

    (56) IdentifierList -> IDENTIFIER .
    (59) IdentifierRep -> IDENTIFIER . COMMA IDENTIFIER
    (101) QualifiedIdent -> IDENTIFIER . DOT TypeName

    INT             reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    FLOAT           reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    BOOL            reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    STRING          reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    TYPE            reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    LSQUARE         reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    MULTIPLY        reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    MAP             reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    STRUCT          reduce using rule 56 (IdentifierList -> IDENTIFIER .)
    COMMA           shift and go to state 74
    DOT             shift and go to state 91


state 157

    (37) ParametersList -> ParameterDecl .

    RPAREN          reduce using rule 37 (ParametersList -> ParameterDecl .)
    COMMA           reduce using rule 37 (ParametersList -> ParameterDecl .)


state 158

    (73) VarSpecRep -> VarSpecRep VarSpec SEMICOLON .

    RPAREN          reduce using rule 73 (VarSpecRep -> VarSpecRep VarSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 73 (VarSpecRep -> VarSpecRep VarSpec SEMICOLON .)


state 159

    (78) ExpressionListOpt -> EQUALS MALLOC . LPAREN I INT_LIT RPAREN

    LPAREN          shift and go to state 205


state 160

    (76) ExpressionListOpt -> EQUALS ExpressionList .

    SEMICOLON       reduce using rule 76 (ExpressionListOpt -> EQUALS ExpressionList .)


state 161

    (65) TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .

    RPAREN          reduce using rule 65 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 65 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .)


state 162

    (137) UnaryExpr -> UnaryOp UnaryExpr .

    COMPARE_OR      reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMPARE_AND     reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQEQ            reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    NOTEQUALS       reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESSTHAN        reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    GREATERTHAN     reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESSTHAN_EQUAL  reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    GREATERTHAN_EQUAL reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    ANDXOR          reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE          reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    MODULO          reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSHIFT          reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSHIFT          reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS            reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS           reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    MULTIPLY        reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSQUARE         reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    LCURL           reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUSEQUAL       reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUSEQUAL      reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    TIMESEQUAL      reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE_EQUAL    reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    MODEQUAL        reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    ANDEQUAL        reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    OREQUAL         reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOREQUAL        reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    ANDXOR_EQUAL    reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSHIFT_EQUAL    reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSHIFT_EQUAL    reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQUALS          reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    INCREMENT       reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)
    DECREMENT       reduce using rule 137 (UnaryExpr -> UnaryOp UnaryExpr .)


state 163

    (138) UnaryExpr -> NOT UnaryExpr .

    COMPARE_OR      reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    COMPARE_AND     reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    EQEQ            reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    NOTEQUALS       reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    LESSTHAN        reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    GREATERTHAN     reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    LESSTHAN_EQUAL  reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    GREATERTHAN_EQUAL reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    OR              reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    XOR             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    ANDXOR          reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    DIVIDE          reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    MODULO          reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    LSHIFT          reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    RSHIFT          reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    PLUS            reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    MINUS           reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    MULTIPLY        reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    AND             reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    COMMA           reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    SEMICOLON       reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    RPAREN          reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    RSQUARE         reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    COLON           reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    LCURL           reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    PLUSEQUAL       reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    MINUSEQUAL      reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    TIMESEQUAL      reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    DIVIDE_EQUAL    reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    MODEQUAL        reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    ANDEQUAL        reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    OREQUAL         reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    XOREQUAL        reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    ANDXOR_EQUAL    reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    LSHIFT_EQUAL    reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    RSHIFT_EQUAL    reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    EQUALS          reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    INCREMENT       reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)
    DECREMENT       reduce using rule 138 (UnaryExpr -> NOT UnaryExpr .)


state 164

    (94) BasicLit -> C IMAGINARY_LIT .

    DOT             reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    LSQUARE         reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    LPAREN          reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    COMPARE_OR      reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    COMPARE_AND     reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    EQEQ            reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    NOTEQUALS       reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    LESSTHAN        reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    GREATERTHAN     reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    LESSTHAN_EQUAL  reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    GREATERTHAN_EQUAL reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    OR              reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    XOR             reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    ANDXOR          reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    DIVIDE          reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    MODULO          reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    LSHIFT          reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    RSHIFT          reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    PLUS            reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    MINUS           reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    MULTIPLY        reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    AND             reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    COMMA           reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    SEMICOLON       reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    RPAREN          reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    RSQUARE         reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    COLON           reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    LCURL           reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    PLUSEQUAL       reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    MINUSEQUAL      reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    TIMESEQUAL      reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    DIVIDE_EQUAL    reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    MODEQUAL        reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    ANDEQUAL        reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    OREQUAL         reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    XOREQUAL        reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    ANDXOR_EQUAL    reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    LSHIFT_EQUAL    reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    RSHIFT_EQUAL    reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    EQUALS          reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    INCREMENT       reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)
    DECREMENT       reduce using rule 94 (BasicLit -> C IMAGINARY_LIT .)


state 165

    (93) BasicLit -> F FLOAT_LIT .

    DOT             reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    LSQUARE         reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    LPAREN          reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    COMPARE_OR      reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    COMPARE_AND     reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    EQEQ            reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    NOTEQUALS       reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    LESSTHAN        reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    GREATERTHAN     reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    LESSTHAN_EQUAL  reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    GREATERTHAN_EQUAL reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    OR              reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    XOR             reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    ANDXOR          reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    DIVIDE          reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    MODULO          reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    LSHIFT          reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    RSHIFT          reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    PLUS            reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    MINUS           reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    MULTIPLY        reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    AND             reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    COMMA           reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    SEMICOLON       reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    RPAREN          reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    RSQUARE         reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    COLON           reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    LCURL           reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    PLUSEQUAL       reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    MINUSEQUAL      reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    TIMESEQUAL      reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    DIVIDE_EQUAL    reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    MODEQUAL        reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    ANDEQUAL        reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    OREQUAL         reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    XOREQUAL        reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    ANDXOR_EQUAL    reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    LSHIFT_EQUAL    reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    RSHIFT_EQUAL    reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    EQUALS          reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    INCREMENT       reduce using rule 93 (BasicLit -> F FLOAT_LIT .)
    DECREMENT       reduce using rule 93 (BasicLit -> F FLOAT_LIT .)


state 166

    (92) BasicLit -> I INT_LIT .

    DOT             reduce using rule 92 (BasicLit -> I INT_LIT .)
    LSQUARE         reduce using rule 92 (BasicLit -> I INT_LIT .)
    LPAREN          reduce using rule 92 (BasicLit -> I INT_LIT .)
    COMPARE_OR      reduce using rule 92 (BasicLit -> I INT_LIT .)
    COMPARE_AND     reduce using rule 92 (BasicLit -> I INT_LIT .)
    EQEQ            reduce using rule 92 (BasicLit -> I INT_LIT .)
    NOTEQUALS       reduce using rule 92 (BasicLit -> I INT_LIT .)
    LESSTHAN        reduce using rule 92 (BasicLit -> I INT_LIT .)
    GREATERTHAN     reduce using rule 92 (BasicLit -> I INT_LIT .)
    LESSTHAN_EQUAL  reduce using rule 92 (BasicLit -> I INT_LIT .)
    GREATERTHAN_EQUAL reduce using rule 92 (BasicLit -> I INT_LIT .)
    OR              reduce using rule 92 (BasicLit -> I INT_LIT .)
    XOR             reduce using rule 92 (BasicLit -> I INT_LIT .)
    ANDXOR          reduce using rule 92 (BasicLit -> I INT_LIT .)
    DIVIDE          reduce using rule 92 (BasicLit -> I INT_LIT .)
    MODULO          reduce using rule 92 (BasicLit -> I INT_LIT .)
    LSHIFT          reduce using rule 92 (BasicLit -> I INT_LIT .)
    RSHIFT          reduce using rule 92 (BasicLit -> I INT_LIT .)
    PLUS            reduce using rule 92 (BasicLit -> I INT_LIT .)
    MINUS           reduce using rule 92 (BasicLit -> I INT_LIT .)
    MULTIPLY        reduce using rule 92 (BasicLit -> I INT_LIT .)
    AND             reduce using rule 92 (BasicLit -> I INT_LIT .)
    COMMA           reduce using rule 92 (BasicLit -> I INT_LIT .)
    SEMICOLON       reduce using rule 92 (BasicLit -> I INT_LIT .)
    RPAREN          reduce using rule 92 (BasicLit -> I INT_LIT .)
    RSQUARE         reduce using rule 92 (BasicLit -> I INT_LIT .)
    COLON           reduce using rule 92 (BasicLit -> I INT_LIT .)
    LCURL           reduce using rule 92 (BasicLit -> I INT_LIT .)
    PLUSEQUAL       reduce using rule 92 (BasicLit -> I INT_LIT .)
    MINUSEQUAL      reduce using rule 92 (BasicLit -> I INT_LIT .)
    TIMESEQUAL      reduce using rule 92 (BasicLit -> I INT_LIT .)
    DIVIDE_EQUAL    reduce using rule 92 (BasicLit -> I INT_LIT .)
    MODEQUAL        reduce using rule 92 (BasicLit -> I INT_LIT .)
    ANDEQUAL        reduce using rule 92 (BasicLit -> I INT_LIT .)
    OREQUAL         reduce using rule 92 (BasicLit -> I INT_LIT .)
    XOREQUAL        reduce using rule 92 (BasicLit -> I INT_LIT .)
    ANDXOR_EQUAL    reduce using rule 92 (BasicLit -> I INT_LIT .)
    LSHIFT_EQUAL    reduce using rule 92 (BasicLit -> I INT_LIT .)
    RSHIFT_EQUAL    reduce using rule 92 (BasicLit -> I INT_LIT .)
    EQUALS          reduce using rule 92 (BasicLit -> I INT_LIT .)
    INCREMENT       reduce using rule 92 (BasicLit -> I INT_LIT .)
    DECREMENT       reduce using rule 92 (BasicLit -> I INT_LIT .)


state 167

    (106) PrimaryExpr -> PrimaryExpr Slice .

    DOT             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LSQUARE         reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    COMPARE_OR      reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    COMPARE_AND     reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    EQEQ            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    NOTEQUALS       reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LESSTHAN        reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    GREATERTHAN     reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LESSTHAN_EQUAL  reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    GREATERTHAN_EQUAL reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    ANDXOR          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    MODULO          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LSHIFT          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    RSHIFT          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    MULTIPLY        reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    RSQUARE         reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LCURL           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUSEQUAL       reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUSEQUAL      reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    TIMESEQUAL      reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE_EQUAL    reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    MODEQUAL        reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    ANDEQUAL        reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    OREQUAL         reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    XOREQUAL        reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    ANDXOR_EQUAL    reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LSHIFT_EQUAL    reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    RSHIFT_EQUAL    reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUALS          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    INCREMENT       reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    DECREMENT       reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)


state 168

    (108) PrimaryExpr -> PrimaryExpr LPAREN . ExpressionListTypeOpt RPAREN
    (112) ExpressionListTypeOpt -> . ExpressionList
    (113) ExpressionListTypeOpt -> . epsilon
    (60) ExpressionList -> . Expression ExpressionRep
    (236) epsilon -> .
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    RPAREN          reduce using rule 236 (epsilon -> .)
    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    epsilon                        shift and go to state 206
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    ExpressionListTypeOpt          shift and go to state 207
    Conversion                     shift and go to state 115
    ExpressionList                 shift and go to state 208
    C                              shift and go to state 123
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    Expression                     shift and go to state 133

state 169

    (107) PrimaryExpr -> PrimaryExpr TypeAssertion .

    DOT             reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSQUARE         reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LPAREN          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMPARE_OR      reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMPARE_AND     reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQEQ            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    NOTEQUALS       reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESSTHAN        reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GREATERTHAN     reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESSTHAN_EQUAL  reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GREATERTHAN_EQUAL reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR              reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR             reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ANDXOR          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DIVIDE          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MODULO          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSHIFT          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSHIFT          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUS            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUS           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MULTIPLY        reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND             reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMMA           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SEMICOLON       reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RPAREN          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSQUARE         reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COLON           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LCURL           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUSEQUAL       reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUSEQUAL      reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    TIMESEQUAL      reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DIVIDE_EQUAL    reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MODEQUAL        reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ANDEQUAL        reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OREQUAL         reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOREQUAL        reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ANDXOR_EQUAL    reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSHIFT_EQUAL    reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSHIFT_EQUAL    reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQUALS          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    INCREMENT       reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DECREMENT       reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)


state 170

    (105) PrimaryExpr -> PrimaryExpr LSQUARE . Expression RSQUARE
    (109) Slice -> LSQUARE . ExpressionOpt COLON ExpressionOpt RSQUARE
    (110) Slice -> LSQUARE . ExpressionOpt COLON Expression COLON Expression RSQUARE
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (134) ExpressionOpt -> . Expression
    (135) ExpressionOpt -> . epsilon
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (236) epsilon -> .
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    COLON           reduce using rule 236 (epsilon -> .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    Expression                     shift and go to state 211
    BasicLit                       shift and go to state 119
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    epsilon                        shift and go to state 210
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    ExpressionOpt                  shift and go to state 209

state 171

    (103) PrimaryExpr -> PrimaryExpr DOT . IDENTIFIER
    (111) TypeAssertion -> DOT . LPAREN Type RPAREN

    IDENTIFIER      shift and go to state 213
    LPAREN          shift and go to state 212


state 172

    (95) BasicLit -> S STRING_LIT .

    DOT             reduce using rule 95 (BasicLit -> S STRING_LIT .)
    LSQUARE         reduce using rule 95 (BasicLit -> S STRING_LIT .)
    LPAREN          reduce using rule 95 (BasicLit -> S STRING_LIT .)
    COMPARE_OR      reduce using rule 95 (BasicLit -> S STRING_LIT .)
    COMPARE_AND     reduce using rule 95 (BasicLit -> S STRING_LIT .)
    EQEQ            reduce using rule 95 (BasicLit -> S STRING_LIT .)
    NOTEQUALS       reduce using rule 95 (BasicLit -> S STRING_LIT .)
    LESSTHAN        reduce using rule 95 (BasicLit -> S STRING_LIT .)
    GREATERTHAN     reduce using rule 95 (BasicLit -> S STRING_LIT .)
    LESSTHAN_EQUAL  reduce using rule 95 (BasicLit -> S STRING_LIT .)
    GREATERTHAN_EQUAL reduce using rule 95 (BasicLit -> S STRING_LIT .)
    OR              reduce using rule 95 (BasicLit -> S STRING_LIT .)
    XOR             reduce using rule 95 (BasicLit -> S STRING_LIT .)
    ANDXOR          reduce using rule 95 (BasicLit -> S STRING_LIT .)
    DIVIDE          reduce using rule 95 (BasicLit -> S STRING_LIT .)
    MODULO          reduce using rule 95 (BasicLit -> S STRING_LIT .)
    LSHIFT          reduce using rule 95 (BasicLit -> S STRING_LIT .)
    RSHIFT          reduce using rule 95 (BasicLit -> S STRING_LIT .)
    PLUS            reduce using rule 95 (BasicLit -> S STRING_LIT .)
    MINUS           reduce using rule 95 (BasicLit -> S STRING_LIT .)
    MULTIPLY        reduce using rule 95 (BasicLit -> S STRING_LIT .)
    AND             reduce using rule 95 (BasicLit -> S STRING_LIT .)
    COMMA           reduce using rule 95 (BasicLit -> S STRING_LIT .)
    SEMICOLON       reduce using rule 95 (BasicLit -> S STRING_LIT .)
    RPAREN          reduce using rule 95 (BasicLit -> S STRING_LIT .)
    RSQUARE         reduce using rule 95 (BasicLit -> S STRING_LIT .)
    COLON           reduce using rule 95 (BasicLit -> S STRING_LIT .)
    LCURL           reduce using rule 95 (BasicLit -> S STRING_LIT .)
    PLUSEQUAL       reduce using rule 95 (BasicLit -> S STRING_LIT .)
    MINUSEQUAL      reduce using rule 95 (BasicLit -> S STRING_LIT .)
    TIMESEQUAL      reduce using rule 95 (BasicLit -> S STRING_LIT .)
    DIVIDE_EQUAL    reduce using rule 95 (BasicLit -> S STRING_LIT .)
    MODEQUAL        reduce using rule 95 (BasicLit -> S STRING_LIT .)
    ANDEQUAL        reduce using rule 95 (BasicLit -> S STRING_LIT .)
    OREQUAL         reduce using rule 95 (BasicLit -> S STRING_LIT .)
    XOREQUAL        reduce using rule 95 (BasicLit -> S STRING_LIT .)
    ANDXOR_EQUAL    reduce using rule 95 (BasicLit -> S STRING_LIT .)
    LSHIFT_EQUAL    reduce using rule 95 (BasicLit -> S STRING_LIT .)
    RSHIFT_EQUAL    reduce using rule 95 (BasicLit -> S STRING_LIT .)
    EQUALS          reduce using rule 95 (BasicLit -> S STRING_LIT .)
    INCREMENT       reduce using rule 95 (BasicLit -> S STRING_LIT .)
    DECREMENT       reduce using rule 95 (BasicLit -> S STRING_LIT .)


state 173

    (90) Operand -> LPAREN Expression . RPAREN
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    RPAREN          shift and go to state 214
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191


state 174

    (125) Expression -> Expression ANDXOR . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 215

state 175

    (118) Expression -> Expression NOTEQUALS . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 216

state 176

    (60) ExpressionList -> Expression ExpressionRep .
    (61) ExpressionRep -> ExpressionRep . COMMA Expression

    PLUSEQUAL       reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    MINUSEQUAL      reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    TIMESEQUAL      reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    DIVIDE_EQUAL    reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    MODEQUAL        reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    ANDEQUAL        reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    OREQUAL         reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    XOREQUAL        reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    ANDXOR_EQUAL    reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    LSHIFT_EQUAL    reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    RSHIFT_EQUAL    reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    EQUALS          reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    SEMICOLON       reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    LCURL           reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    COLON           reduce using rule 60 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 217


state 177

    (129) Expression -> Expression RSHIFT . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 218

state 178

    (115) Expression -> Expression COMPARE_OR . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 219

state 179

    (117) Expression -> Expression EQEQ . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 220

state 180

    (119) Expression -> Expression LESSTHAN . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 221

state 181

    (128) Expression -> Expression LSHIFT . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 222

state 182

    (132) Expression -> Expression MULTIPLY . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 223

state 183

    (127) Expression -> Expression MODULO . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 224

state 184

    (131) Expression -> Expression MINUS . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 225

state 185

    (122) Expression -> Expression GREATERTHAN_EQUAL . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 226

state 186

    (130) Expression -> Expression PLUS . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 227

state 187

    (124) Expression -> Expression XOR . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 228

state 188

    (126) Expression -> Expression DIVIDE . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 229

state 189

    (62) ExpressionRep -> epsilon .

    COMMA           reduce using rule 62 (ExpressionRep -> epsilon .)
    PLUSEQUAL       reduce using rule 62 (ExpressionRep -> epsilon .)
    MINUSEQUAL      reduce using rule 62 (ExpressionRep -> epsilon .)
    TIMESEQUAL      reduce using rule 62 (ExpressionRep -> epsilon .)
    DIVIDE_EQUAL    reduce using rule 62 (ExpressionRep -> epsilon .)
    MODEQUAL        reduce using rule 62 (ExpressionRep -> epsilon .)
    ANDEQUAL        reduce using rule 62 (ExpressionRep -> epsilon .)
    OREQUAL         reduce using rule 62 (ExpressionRep -> epsilon .)
    XOREQUAL        reduce using rule 62 (ExpressionRep -> epsilon .)
    ANDXOR_EQUAL    reduce using rule 62 (ExpressionRep -> epsilon .)
    LSHIFT_EQUAL    reduce using rule 62 (ExpressionRep -> epsilon .)
    RSHIFT_EQUAL    reduce using rule 62 (ExpressionRep -> epsilon .)
    EQUALS          reduce using rule 62 (ExpressionRep -> epsilon .)
    SEMICOLON       reduce using rule 62 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 62 (ExpressionRep -> epsilon .)
    LCURL           reduce using rule 62 (ExpressionRep -> epsilon .)
    COLON           reduce using rule 62 (ExpressionRep -> epsilon .)


state 190

    (120) Expression -> Expression GREATERTHAN . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 230

state 191

    (133) Expression -> Expression AND . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 231

state 192

    (121) Expression -> Expression LESSTHAN_EQUAL . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 232

state 193

    (116) Expression -> Expression COMPARE_AND . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 233

state 194

    (123) Expression -> Expression OR . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 234

state 195

    (143) Conversion -> TYPECAST Type . LPAREN Expression RPAREN

    LPAREN          shift and go to state 235


state 196

    (20) ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .

    SEMICOLON       reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    EQUALS          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    RSQUARE         reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    LCURL           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    RPAREN          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    COMMA           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    LPAREN          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)


state 197

    (18) MapType -> MAP LSQUARE KeyType RSQUARE . ElementType
    (22) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    ElementType                    shift and go to state 236
    Type                           shift and go to state 137
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 198

    (23) StructType -> FuncScope STRUCT LCURL . FieldDeclRep RCURL EndScope
    (25) FieldDeclRep -> . FieldDeclRep FieldDecl SEMICOLON
    (26) FieldDeclRep -> . epsilon
    (236) epsilon -> .

    RCURL           reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)

    FieldDeclRep                   shift and go to state 237
    epsilon                        shift and go to state 238

state 199

    (85) Function -> Signature RetTypeSet FunctionBody .

    SEMICOLON       reduce using rule 85 (Function -> Signature RetTypeSet FunctionBody .)


state 200

    (87) FunctionBody -> Block .

    SEMICOLON       reduce using rule 87 (FunctionBody -> Block .)


state 201

    (41) Block -> LCURL . StatementList RCURL
    (42) StatementList -> . StatementRep
    (43) StatementRep -> . StatementRep Statement SEMICOLON
    (44) StatementRep -> . epsilon
    (236) epsilon -> .

    RETURN          reduce using rule 236 (epsilon -> .)
    BREAK           reduce using rule 236 (epsilon -> .)
    CONTINUE        reduce using rule 236 (epsilon -> .)
    GOTO            reduce using rule 236 (epsilon -> .)
    IF              reduce using rule 236 (epsilon -> .)
    FOR             reduce using rule 236 (epsilon -> .)
    DEFER           reduce using rule 236 (epsilon -> .)
    FALLTHROUGH     reduce using rule 236 (epsilon -> .)
    GO              reduce using rule 236 (epsilon -> .)
    PRINT           reduce using rule 236 (epsilon -> .)
    SCAN            reduce using rule 236 (epsilon -> .)
    CONST           reduce using rule 236 (epsilon -> .)
    TYPE            reduce using rule 236 (epsilon -> .)
    VAR             reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)
    SWITCH          reduce using rule 236 (epsilon -> .)
    NOT             reduce using rule 236 (epsilon -> .)
    PLUS            reduce using rule 236 (epsilon -> .)
    MINUS           reduce using rule 236 (epsilon -> .)
    MULTIPLY        reduce using rule 236 (epsilon -> .)
    AND             reduce using rule 236 (epsilon -> .)
    LPAREN          reduce using rule 236 (epsilon -> .)
    TYPECAST        reduce using rule 236 (epsilon -> .)
    SEMICOLON       reduce using rule 236 (epsilon -> .)
    LCURL           reduce using rule 236 (epsilon -> .)
    INT_LIT         reduce using rule 236 (epsilon -> .)
    FLOAT_LIT       reduce using rule 236 (epsilon -> .)
    IMAGINARY_LIT   reduce using rule 236 (epsilon -> .)
    STRING_LIT      reduce using rule 236 (epsilon -> .)
    RCURL           reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 240
    StatementRep                   shift and go to state 239
    StatementList                  shift and go to state 241

state 202

    (39) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 39 (ParameterDecl -> IdentifierList Type .)
    COMMA           reduce using rule 39 (ParameterDecl -> IdentifierList Type .)


state 203

    (38) ParametersList -> ParametersList COMMA . ParameterDecl
    (39) ParameterDecl -> . IdentifierList Type
    (40) ParameterDecl -> . Type
    (56) IdentifierList -> . IDENTIFIER
    (57) IdentifierList -> . IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (58) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (59) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    IDENTIFIER      shift and go to state 156
    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    ParameterDecl                  shift and go to state 242
    ArrayType                      shift and go to state 54
    IdentifierRep                  shift and go to state 32
    TypeName                       shift and go to state 59
    TypeLit                        shift and go to state 56
    MapType                        shift and go to state 63
    IdentifierList                 shift and go to state 152
    PointerType                    shift and go to state 71
    ST                             shift and go to state 68
    Type                           shift and go to state 153
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 204

    (35) Parameters -> LPAREN ParametersList RPAREN .

    LPAREN          reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)
    INT             reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)
    FLOAT           reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)
    BOOL            reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)
    STRING          reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)
    TYPE            reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)
    IDENTIFIER      reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)
    LSQUARE         reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)
    MULTIPLY        reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)
    MAP             reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)
    STRUCT          reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)
    LCURL           reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)
    SEMICOLON       reduce using rule 35 (Parameters -> LPAREN ParametersList RPAREN .)


state 205

    (78) ExpressionListOpt -> EQUALS MALLOC LPAREN . I INT_LIT RPAREN
    (96) I -> .

    INT_LIT         reduce using rule 96 (I -> .)

    I                              shift and go to state 243

state 206

    (113) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 113 (ExpressionListTypeOpt -> epsilon .)


state 207

    (108) PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 244


state 208

    (112) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 112 (ExpressionListTypeOpt -> ExpressionList .)


state 209

    (109) Slice -> LSQUARE ExpressionOpt . COLON ExpressionOpt RSQUARE
    (110) Slice -> LSQUARE ExpressionOpt . COLON Expression COLON Expression RSQUARE

    COLON           shift and go to state 245


state 210

    (135) ExpressionOpt -> epsilon .

    COLON           reduce using rule 135 (ExpressionOpt -> epsilon .)
    RSQUARE         reduce using rule 135 (ExpressionOpt -> epsilon .)


state 211

    (105) PrimaryExpr -> PrimaryExpr LSQUARE Expression . RSQUARE
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression
    (134) ExpressionOpt -> Expression .

    RSQUARE         shift and go to state 246
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191
    COLON           reduce using rule 134 (ExpressionOpt -> Expression .)


state 212

    (111) TypeAssertion -> DOT LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    Type                           shift and go to state 247
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    TypeLit                        shift and go to state 56
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 213

    (103) PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .

    DOT             reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    LSQUARE         reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    LPAREN          reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    COMPARE_OR      reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    COMPARE_AND     reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    EQEQ            reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    NOTEQUALS       reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    LESSTHAN        reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    GREATERTHAN     reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    LESSTHAN_EQUAL  reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    GREATERTHAN_EQUAL reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    OR              reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    XOR             reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    ANDXOR          reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    DIVIDE          reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    MODULO          reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    LSHIFT          reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    RSHIFT          reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    PLUS            reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    MINUS           reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    AND             reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    COMMA           reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    RPAREN          reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    RSQUARE         reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    COLON           reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    LCURL           reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    PLUSEQUAL       reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    MINUSEQUAL      reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    TIMESEQUAL      reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    DIVIDE_EQUAL    reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    MODEQUAL        reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    ANDEQUAL        reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    OREQUAL         reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    XOREQUAL        reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    ANDXOR_EQUAL    reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    LSHIFT_EQUAL    reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    RSHIFT_EQUAL    reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    EQUALS          reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    INCREMENT       reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)
    DECREMENT       reduce using rule 103 (PrimaryExpr -> PrimaryExpr DOT IDENTIFIER .)


state 214

    (90) Operand -> LPAREN Expression RPAREN .

    DOT             reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    LSQUARE         reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    COMPARE_OR      reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    COMPARE_AND     reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    NOTEQUALS       reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    LESSTHAN        reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    GREATERTHAN     reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    LESSTHAN_EQUAL  reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    GREATERTHAN_EQUAL reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    ANDXOR          reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    MODULO          reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    MULTIPLY        reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    AND             reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    LCURL           reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    PLUSEQUAL       reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    MINUSEQUAL      reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    TIMESEQUAL      reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE_EQUAL    reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    MODEQUAL        reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    ANDEQUAL        reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    OREQUAL         reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    XOREQUAL        reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    ANDXOR_EQUAL    reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    LSHIFT_EQUAL    reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    RSHIFT_EQUAL    reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    INCREMENT       reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)
    DECREMENT       reduce using rule 90 (Operand -> LPAREN Expression RPAREN .)


state 215

    (125) Expression -> Expression ANDXOR Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    COMPARE_AND     reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    EQEQ            reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    NOTEQUALS       reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    OR              reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    XOR             reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    ANDXOR          reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    AND             reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    COMMA           reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    SEMICOLON       reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    RPAREN          reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    RSQUARE         reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    COLON           reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    LCURL           reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    PLUSEQUAL       reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    MINUSEQUAL      reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    TIMESEQUAL      reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    DIVIDE_EQUAL    reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    MODEQUAL        reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    ANDEQUAL        reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    OREQUAL         reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    XOREQUAL        reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    ANDXOR_EQUAL    reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    LSHIFT_EQUAL    reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    RSHIFT_EQUAL    reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    EQUALS          reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    INCREMENT       reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    DECREMENT       reduce using rule 125 (Expression -> Expression ANDXOR Expression .)
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182

  ! LESSTHAN        [ reduce using rule 125 (Expression -> Expression ANDXOR Expression .) ]
  ! GREATERTHAN     [ reduce using rule 125 (Expression -> Expression ANDXOR Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 125 (Expression -> Expression ANDXOR Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 125 (Expression -> Expression ANDXOR Expression .) ]
  ! DIVIDE          [ reduce using rule 125 (Expression -> Expression ANDXOR Expression .) ]
  ! MODULO          [ reduce using rule 125 (Expression -> Expression ANDXOR Expression .) ]
  ! LSHIFT          [ reduce using rule 125 (Expression -> Expression ANDXOR Expression .) ]
  ! RSHIFT          [ reduce using rule 125 (Expression -> Expression ANDXOR Expression .) ]
  ! PLUS            [ reduce using rule 125 (Expression -> Expression ANDXOR Expression .) ]
  ! MINUS           [ reduce using rule 125 (Expression -> Expression ANDXOR Expression .) ]
  ! MULTIPLY        [ reduce using rule 125 (Expression -> Expression ANDXOR Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! AND             [ shift and go to state 191 ]


state 216

    (118) Expression -> Expression NOTEQUALS Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    COMPARE_AND     reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    EQEQ            reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    NOTEQUALS       reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    COMMA           reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    SEMICOLON       reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    RPAREN          reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    RSQUARE         reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    COLON           reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    LCURL           reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    PLUSEQUAL       reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    MINUSEQUAL      reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    TIMESEQUAL      reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    DIVIDE_EQUAL    reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    MODEQUAL        reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    ANDEQUAL        reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    OREQUAL         reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    XOREQUAL        reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    ANDXOR_EQUAL    reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    LSHIFT_EQUAL    reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    RSHIFT_EQUAL    reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    EQUALS          reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    INCREMENT       reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    DECREMENT       reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .)
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191

  ! LESSTHAN        [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! GREATERTHAN     [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! OR              [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! XOR             [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! ANDXOR          [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! DIVIDE          [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! MODULO          [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! LSHIFT          [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! RSHIFT          [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! PLUS            [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! MINUS           [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! MULTIPLY        [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! AND             [ reduce using rule 118 (Expression -> Expression NOTEQUALS Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]


state 217

    (61) ExpressionRep -> ExpressionRep COMMA . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Conversion                     shift and go to state 115
    C                              shift and go to state 123
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    Literal                        shift and go to state 132
    Expression                     shift and go to state 248

state 218

    (129) Expression -> Expression RSHIFT Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    COMPARE_AND     reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    EQEQ            reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    NOTEQUALS       reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    LESSTHAN        reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    GREATERTHAN     reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    LESSTHAN_EQUAL  reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    GREATERTHAN_EQUAL reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    OR              reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    XOR             reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    ANDXOR          reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    LSHIFT          reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    RSHIFT          reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    PLUS            reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    MINUS           reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    AND             reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    COMMA           reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    SEMICOLON       reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    RPAREN          reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    RSQUARE         reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    COLON           reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    LCURL           reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    PLUSEQUAL       reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    MINUSEQUAL      reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    TIMESEQUAL      reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    DIVIDE_EQUAL    reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    MODEQUAL        reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    ANDEQUAL        reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    OREQUAL         reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    XOREQUAL        reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    ANDXOR_EQUAL    reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    LSHIFT_EQUAL    reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    RSHIFT_EQUAL    reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    EQUALS          reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    INCREMENT       reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    DECREMENT       reduce using rule 129 (Expression -> Expression RSHIFT Expression .)
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    MULTIPLY        shift and go to state 182

  ! DIVIDE          [ reduce using rule 129 (Expression -> Expression RSHIFT Expression .) ]
  ! MODULO          [ reduce using rule 129 (Expression -> Expression RSHIFT Expression .) ]
  ! MULTIPLY        [ reduce using rule 129 (Expression -> Expression RSHIFT Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! LESSTHAN        [ shift and go to state 180 ]
  ! GREATERTHAN     [ shift and go to state 190 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 192 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 185 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! LSHIFT          [ shift and go to state 181 ]
  ! RSHIFT          [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 186 ]
  ! MINUS           [ shift and go to state 184 ]
  ! AND             [ shift and go to state 191 ]


state 219

    (115) Expression -> Expression COMPARE_OR Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    COMMA           reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    SEMICOLON       reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    RPAREN          reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    RSQUARE         reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    COLON           reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    LCURL           reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    PLUSEQUAL       reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    MINUSEQUAL      reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    TIMESEQUAL      reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    DIVIDE_EQUAL    reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    MODEQUAL        reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    ANDEQUAL        reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    OREQUAL         reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    XOREQUAL        reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    ANDXOR_EQUAL    reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    LSHIFT_EQUAL    reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    RSHIFT_EQUAL    reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    EQUALS          reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    INCREMENT       reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    DECREMENT       reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .)
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191

  ! COMPARE_AND     [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! EQEQ            [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! NOTEQUALS       [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! LESSTHAN        [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! GREATERTHAN     [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! OR              [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! XOR             [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! ANDXOR          [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! DIVIDE          [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! MODULO          [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! LSHIFT          [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! RSHIFT          [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! PLUS            [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! MINUS           [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! MULTIPLY        [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! AND             [ reduce using rule 115 (Expression -> Expression COMPARE_OR Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]


state 220

    (117) Expression -> Expression EQEQ Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    COMPARE_AND     reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    EQEQ            reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    NOTEQUALS       reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    COMMA           reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    SEMICOLON       reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    RPAREN          reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    RSQUARE         reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    COLON           reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    LCURL           reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    PLUSEQUAL       reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    MINUSEQUAL      reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    TIMESEQUAL      reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    DIVIDE_EQUAL    reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    MODEQUAL        reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    ANDEQUAL        reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    OREQUAL         reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    XOREQUAL        reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    ANDXOR_EQUAL    reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    LSHIFT_EQUAL    reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    RSHIFT_EQUAL    reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    EQUALS          reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    INCREMENT       reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    DECREMENT       reduce using rule 117 (Expression -> Expression EQEQ Expression .)
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191

  ! LESSTHAN        [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! GREATERTHAN     [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! OR              [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! XOR             [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! ANDXOR          [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! DIVIDE          [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! MODULO          [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! LSHIFT          [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! RSHIFT          [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! PLUS            [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! MINUS           [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! MULTIPLY        [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! AND             [ reduce using rule 117 (Expression -> Expression EQEQ Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]


state 221

    (119) Expression -> Expression LESSTHAN Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    COMPARE_AND     reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    EQEQ            reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    NOTEQUALS       reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    LESSTHAN        reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    GREATERTHAN     reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    LESSTHAN_EQUAL  reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    GREATERTHAN_EQUAL reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    OR              reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    XOR             reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    ANDXOR          reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    AND             reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    COMMA           reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    SEMICOLON       reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    RPAREN          reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    RSQUARE         reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    COLON           reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    LCURL           reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    PLUSEQUAL       reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    MINUSEQUAL      reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    TIMESEQUAL      reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    DIVIDE_EQUAL    reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    MODEQUAL        reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    ANDEQUAL        reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    OREQUAL         reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    XOREQUAL        reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    ANDXOR_EQUAL    reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    LSHIFT_EQUAL    reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    RSHIFT_EQUAL    reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    EQUALS          reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    INCREMENT       reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    DECREMENT       reduce using rule 119 (Expression -> Expression LESSTHAN Expression .)
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182

  ! DIVIDE          [ reduce using rule 119 (Expression -> Expression LESSTHAN Expression .) ]
  ! MODULO          [ reduce using rule 119 (Expression -> Expression LESSTHAN Expression .) ]
  ! LSHIFT          [ reduce using rule 119 (Expression -> Expression LESSTHAN Expression .) ]
  ! RSHIFT          [ reduce using rule 119 (Expression -> Expression LESSTHAN Expression .) ]
  ! PLUS            [ reduce using rule 119 (Expression -> Expression LESSTHAN Expression .) ]
  ! MINUS           [ reduce using rule 119 (Expression -> Expression LESSTHAN Expression .) ]
  ! MULTIPLY        [ reduce using rule 119 (Expression -> Expression LESSTHAN Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! LESSTHAN        [ shift and go to state 180 ]
  ! GREATERTHAN     [ shift and go to state 190 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 192 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 185 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! AND             [ shift and go to state 191 ]


state 222

    (128) Expression -> Expression LSHIFT Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    COMPARE_AND     reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    EQEQ            reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    NOTEQUALS       reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    LESSTHAN        reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    GREATERTHAN     reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    LESSTHAN_EQUAL  reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    GREATERTHAN_EQUAL reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    OR              reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    XOR             reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    ANDXOR          reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    LSHIFT          reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    RSHIFT          reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    PLUS            reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    MINUS           reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    AND             reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    COMMA           reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    SEMICOLON       reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    RPAREN          reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    RSQUARE         reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    COLON           reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    LCURL           reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    PLUSEQUAL       reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    MINUSEQUAL      reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    TIMESEQUAL      reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    DIVIDE_EQUAL    reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    MODEQUAL        reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    ANDEQUAL        reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    OREQUAL         reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    XOREQUAL        reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    ANDXOR_EQUAL    reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    LSHIFT_EQUAL    reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    RSHIFT_EQUAL    reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    EQUALS          reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    INCREMENT       reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    DECREMENT       reduce using rule 128 (Expression -> Expression LSHIFT Expression .)
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    MULTIPLY        shift and go to state 182

  ! DIVIDE          [ reduce using rule 128 (Expression -> Expression LSHIFT Expression .) ]
  ! MODULO          [ reduce using rule 128 (Expression -> Expression LSHIFT Expression .) ]
  ! MULTIPLY        [ reduce using rule 128 (Expression -> Expression LSHIFT Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! LESSTHAN        [ shift and go to state 180 ]
  ! GREATERTHAN     [ shift and go to state 190 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 192 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 185 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! LSHIFT          [ shift and go to state 181 ]
  ! RSHIFT          [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 186 ]
  ! MINUS           [ shift and go to state 184 ]
  ! AND             [ shift and go to state 191 ]


state 223

    (132) Expression -> Expression MULTIPLY Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    COMPARE_AND     reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    EQEQ            reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    NOTEQUALS       reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    LESSTHAN        reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    GREATERTHAN     reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    LESSTHAN_EQUAL  reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    GREATERTHAN_EQUAL reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    OR              reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    XOR             reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    ANDXOR          reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    DIVIDE          reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    MODULO          reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    LSHIFT          reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    RSHIFT          reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    PLUS            reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    MINUS           reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    MULTIPLY        reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    AND             reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    COMMA           reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    SEMICOLON       reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    RPAREN          reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    RSQUARE         reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    COLON           reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    LCURL           reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    PLUSEQUAL       reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    MINUSEQUAL      reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    TIMESEQUAL      reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    DIVIDE_EQUAL    reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    MODEQUAL        reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    ANDEQUAL        reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    OREQUAL         reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    XOREQUAL        reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    ANDXOR_EQUAL    reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    LSHIFT_EQUAL    reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    RSHIFT_EQUAL    reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    EQUALS          reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    INCREMENT       reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)
    DECREMENT       reduce using rule 132 (Expression -> Expression MULTIPLY Expression .)

  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! LESSTHAN        [ shift and go to state 180 ]
  ! GREATERTHAN     [ shift and go to state 190 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 192 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 185 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! DIVIDE          [ shift and go to state 188 ]
  ! MODULO          [ shift and go to state 183 ]
  ! LSHIFT          [ shift and go to state 181 ]
  ! RSHIFT          [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 186 ]
  ! MINUS           [ shift and go to state 184 ]
  ! MULTIPLY        [ shift and go to state 182 ]
  ! AND             [ shift and go to state 191 ]


state 224

    (127) Expression -> Expression MODULO Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 127 (Expression -> Expression MODULO Expression .)
    COMPARE_AND     reduce using rule 127 (Expression -> Expression MODULO Expression .)
    EQEQ            reduce using rule 127 (Expression -> Expression MODULO Expression .)
    NOTEQUALS       reduce using rule 127 (Expression -> Expression MODULO Expression .)
    LESSTHAN        reduce using rule 127 (Expression -> Expression MODULO Expression .)
    GREATERTHAN     reduce using rule 127 (Expression -> Expression MODULO Expression .)
    LESSTHAN_EQUAL  reduce using rule 127 (Expression -> Expression MODULO Expression .)
    GREATERTHAN_EQUAL reduce using rule 127 (Expression -> Expression MODULO Expression .)
    OR              reduce using rule 127 (Expression -> Expression MODULO Expression .)
    XOR             reduce using rule 127 (Expression -> Expression MODULO Expression .)
    ANDXOR          reduce using rule 127 (Expression -> Expression MODULO Expression .)
    DIVIDE          reduce using rule 127 (Expression -> Expression MODULO Expression .)
    MODULO          reduce using rule 127 (Expression -> Expression MODULO Expression .)
    LSHIFT          reduce using rule 127 (Expression -> Expression MODULO Expression .)
    RSHIFT          reduce using rule 127 (Expression -> Expression MODULO Expression .)
    PLUS            reduce using rule 127 (Expression -> Expression MODULO Expression .)
    MINUS           reduce using rule 127 (Expression -> Expression MODULO Expression .)
    MULTIPLY        reduce using rule 127 (Expression -> Expression MODULO Expression .)
    AND             reduce using rule 127 (Expression -> Expression MODULO Expression .)
    COMMA           reduce using rule 127 (Expression -> Expression MODULO Expression .)
    SEMICOLON       reduce using rule 127 (Expression -> Expression MODULO Expression .)
    RPAREN          reduce using rule 127 (Expression -> Expression MODULO Expression .)
    RSQUARE         reduce using rule 127 (Expression -> Expression MODULO Expression .)
    COLON           reduce using rule 127 (Expression -> Expression MODULO Expression .)
    LCURL           reduce using rule 127 (Expression -> Expression MODULO Expression .)
    PLUSEQUAL       reduce using rule 127 (Expression -> Expression MODULO Expression .)
    MINUSEQUAL      reduce using rule 127 (Expression -> Expression MODULO Expression .)
    TIMESEQUAL      reduce using rule 127 (Expression -> Expression MODULO Expression .)
    DIVIDE_EQUAL    reduce using rule 127 (Expression -> Expression MODULO Expression .)
    MODEQUAL        reduce using rule 127 (Expression -> Expression MODULO Expression .)
    ANDEQUAL        reduce using rule 127 (Expression -> Expression MODULO Expression .)
    OREQUAL         reduce using rule 127 (Expression -> Expression MODULO Expression .)
    XOREQUAL        reduce using rule 127 (Expression -> Expression MODULO Expression .)
    ANDXOR_EQUAL    reduce using rule 127 (Expression -> Expression MODULO Expression .)
    LSHIFT_EQUAL    reduce using rule 127 (Expression -> Expression MODULO Expression .)
    RSHIFT_EQUAL    reduce using rule 127 (Expression -> Expression MODULO Expression .)
    EQUALS          reduce using rule 127 (Expression -> Expression MODULO Expression .)
    INCREMENT       reduce using rule 127 (Expression -> Expression MODULO Expression .)
    DECREMENT       reduce using rule 127 (Expression -> Expression MODULO Expression .)

  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! LESSTHAN        [ shift and go to state 180 ]
  ! GREATERTHAN     [ shift and go to state 190 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 192 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 185 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! DIVIDE          [ shift and go to state 188 ]
  ! MODULO          [ shift and go to state 183 ]
  ! LSHIFT          [ shift and go to state 181 ]
  ! RSHIFT          [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 186 ]
  ! MINUS           [ shift and go to state 184 ]
  ! MULTIPLY        [ shift and go to state 182 ]
  ! AND             [ shift and go to state 191 ]


state 225

    (131) Expression -> Expression MINUS Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 131 (Expression -> Expression MINUS Expression .)
    COMPARE_AND     reduce using rule 131 (Expression -> Expression MINUS Expression .)
    EQEQ            reduce using rule 131 (Expression -> Expression MINUS Expression .)
    NOTEQUALS       reduce using rule 131 (Expression -> Expression MINUS Expression .)
    LESSTHAN        reduce using rule 131 (Expression -> Expression MINUS Expression .)
    GREATERTHAN     reduce using rule 131 (Expression -> Expression MINUS Expression .)
    LESSTHAN_EQUAL  reduce using rule 131 (Expression -> Expression MINUS Expression .)
    GREATERTHAN_EQUAL reduce using rule 131 (Expression -> Expression MINUS Expression .)
    OR              reduce using rule 131 (Expression -> Expression MINUS Expression .)
    XOR             reduce using rule 131 (Expression -> Expression MINUS Expression .)
    ANDXOR          reduce using rule 131 (Expression -> Expression MINUS Expression .)
    PLUS            reduce using rule 131 (Expression -> Expression MINUS Expression .)
    MINUS           reduce using rule 131 (Expression -> Expression MINUS Expression .)
    AND             reduce using rule 131 (Expression -> Expression MINUS Expression .)
    COMMA           reduce using rule 131 (Expression -> Expression MINUS Expression .)
    SEMICOLON       reduce using rule 131 (Expression -> Expression MINUS Expression .)
    RPAREN          reduce using rule 131 (Expression -> Expression MINUS Expression .)
    RSQUARE         reduce using rule 131 (Expression -> Expression MINUS Expression .)
    COLON           reduce using rule 131 (Expression -> Expression MINUS Expression .)
    LCURL           reduce using rule 131 (Expression -> Expression MINUS Expression .)
    PLUSEQUAL       reduce using rule 131 (Expression -> Expression MINUS Expression .)
    MINUSEQUAL      reduce using rule 131 (Expression -> Expression MINUS Expression .)
    TIMESEQUAL      reduce using rule 131 (Expression -> Expression MINUS Expression .)
    DIVIDE_EQUAL    reduce using rule 131 (Expression -> Expression MINUS Expression .)
    MODEQUAL        reduce using rule 131 (Expression -> Expression MINUS Expression .)
    ANDEQUAL        reduce using rule 131 (Expression -> Expression MINUS Expression .)
    OREQUAL         reduce using rule 131 (Expression -> Expression MINUS Expression .)
    XOREQUAL        reduce using rule 131 (Expression -> Expression MINUS Expression .)
    ANDXOR_EQUAL    reduce using rule 131 (Expression -> Expression MINUS Expression .)
    LSHIFT_EQUAL    reduce using rule 131 (Expression -> Expression MINUS Expression .)
    RSHIFT_EQUAL    reduce using rule 131 (Expression -> Expression MINUS Expression .)
    EQUALS          reduce using rule 131 (Expression -> Expression MINUS Expression .)
    INCREMENT       reduce using rule 131 (Expression -> Expression MINUS Expression .)
    DECREMENT       reduce using rule 131 (Expression -> Expression MINUS Expression .)
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    MULTIPLY        shift and go to state 182

  ! DIVIDE          [ reduce using rule 131 (Expression -> Expression MINUS Expression .) ]
  ! MODULO          [ reduce using rule 131 (Expression -> Expression MINUS Expression .) ]
  ! LSHIFT          [ reduce using rule 131 (Expression -> Expression MINUS Expression .) ]
  ! RSHIFT          [ reduce using rule 131 (Expression -> Expression MINUS Expression .) ]
  ! MULTIPLY        [ reduce using rule 131 (Expression -> Expression MINUS Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! LESSTHAN        [ shift and go to state 180 ]
  ! GREATERTHAN     [ shift and go to state 190 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 192 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 185 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! PLUS            [ shift and go to state 186 ]
  ! MINUS           [ shift and go to state 184 ]
  ! AND             [ shift and go to state 191 ]


state 226

    (122) Expression -> Expression GREATERTHAN_EQUAL Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    COMPARE_AND     reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    EQEQ            reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    NOTEQUALS       reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    LESSTHAN        reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    GREATERTHAN     reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    LESSTHAN_EQUAL  reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    GREATERTHAN_EQUAL reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    OR              reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    XOR             reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    ANDXOR          reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    AND             reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    COMMA           reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    SEMICOLON       reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    RPAREN          reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    RSQUARE         reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    COLON           reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    LCURL           reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    PLUSEQUAL       reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    MINUSEQUAL      reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    TIMESEQUAL      reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    DIVIDE_EQUAL    reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    MODEQUAL        reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    ANDEQUAL        reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    OREQUAL         reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    XOREQUAL        reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    ANDXOR_EQUAL    reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    LSHIFT_EQUAL    reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    RSHIFT_EQUAL    reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    EQUALS          reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    INCREMENT       reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    DECREMENT       reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .)
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182

  ! DIVIDE          [ reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! MODULO          [ reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! LSHIFT          [ reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! RSHIFT          [ reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! PLUS            [ reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! MINUS           [ reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! MULTIPLY        [ reduce using rule 122 (Expression -> Expression GREATERTHAN_EQUAL Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! LESSTHAN        [ shift and go to state 180 ]
  ! GREATERTHAN     [ shift and go to state 190 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 192 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 185 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! AND             [ shift and go to state 191 ]


state 227

    (130) Expression -> Expression PLUS Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 130 (Expression -> Expression PLUS Expression .)
    COMPARE_AND     reduce using rule 130 (Expression -> Expression PLUS Expression .)
    EQEQ            reduce using rule 130 (Expression -> Expression PLUS Expression .)
    NOTEQUALS       reduce using rule 130 (Expression -> Expression PLUS Expression .)
    LESSTHAN        reduce using rule 130 (Expression -> Expression PLUS Expression .)
    GREATERTHAN     reduce using rule 130 (Expression -> Expression PLUS Expression .)
    LESSTHAN_EQUAL  reduce using rule 130 (Expression -> Expression PLUS Expression .)
    GREATERTHAN_EQUAL reduce using rule 130 (Expression -> Expression PLUS Expression .)
    OR              reduce using rule 130 (Expression -> Expression PLUS Expression .)
    XOR             reduce using rule 130 (Expression -> Expression PLUS Expression .)
    ANDXOR          reduce using rule 130 (Expression -> Expression PLUS Expression .)
    PLUS            reduce using rule 130 (Expression -> Expression PLUS Expression .)
    MINUS           reduce using rule 130 (Expression -> Expression PLUS Expression .)
    AND             reduce using rule 130 (Expression -> Expression PLUS Expression .)
    COMMA           reduce using rule 130 (Expression -> Expression PLUS Expression .)
    SEMICOLON       reduce using rule 130 (Expression -> Expression PLUS Expression .)
    RPAREN          reduce using rule 130 (Expression -> Expression PLUS Expression .)
    RSQUARE         reduce using rule 130 (Expression -> Expression PLUS Expression .)
    COLON           reduce using rule 130 (Expression -> Expression PLUS Expression .)
    LCURL           reduce using rule 130 (Expression -> Expression PLUS Expression .)
    PLUSEQUAL       reduce using rule 130 (Expression -> Expression PLUS Expression .)
    MINUSEQUAL      reduce using rule 130 (Expression -> Expression PLUS Expression .)
    TIMESEQUAL      reduce using rule 130 (Expression -> Expression PLUS Expression .)
    DIVIDE_EQUAL    reduce using rule 130 (Expression -> Expression PLUS Expression .)
    MODEQUAL        reduce using rule 130 (Expression -> Expression PLUS Expression .)
    ANDEQUAL        reduce using rule 130 (Expression -> Expression PLUS Expression .)
    OREQUAL         reduce using rule 130 (Expression -> Expression PLUS Expression .)
    XOREQUAL        reduce using rule 130 (Expression -> Expression PLUS Expression .)
    ANDXOR_EQUAL    reduce using rule 130 (Expression -> Expression PLUS Expression .)
    LSHIFT_EQUAL    reduce using rule 130 (Expression -> Expression PLUS Expression .)
    RSHIFT_EQUAL    reduce using rule 130 (Expression -> Expression PLUS Expression .)
    EQUALS          reduce using rule 130 (Expression -> Expression PLUS Expression .)
    INCREMENT       reduce using rule 130 (Expression -> Expression PLUS Expression .)
    DECREMENT       reduce using rule 130 (Expression -> Expression PLUS Expression .)
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    MULTIPLY        shift and go to state 182

  ! DIVIDE          [ reduce using rule 130 (Expression -> Expression PLUS Expression .) ]
  ! MODULO          [ reduce using rule 130 (Expression -> Expression PLUS Expression .) ]
  ! LSHIFT          [ reduce using rule 130 (Expression -> Expression PLUS Expression .) ]
  ! RSHIFT          [ reduce using rule 130 (Expression -> Expression PLUS Expression .) ]
  ! MULTIPLY        [ reduce using rule 130 (Expression -> Expression PLUS Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! LESSTHAN        [ shift and go to state 180 ]
  ! GREATERTHAN     [ shift and go to state 190 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 192 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 185 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! PLUS            [ shift and go to state 186 ]
  ! MINUS           [ shift and go to state 184 ]
  ! AND             [ shift and go to state 191 ]


state 228

    (124) Expression -> Expression XOR Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 124 (Expression -> Expression XOR Expression .)
    COMPARE_AND     reduce using rule 124 (Expression -> Expression XOR Expression .)
    EQEQ            reduce using rule 124 (Expression -> Expression XOR Expression .)
    NOTEQUALS       reduce using rule 124 (Expression -> Expression XOR Expression .)
    OR              reduce using rule 124 (Expression -> Expression XOR Expression .)
    XOR             reduce using rule 124 (Expression -> Expression XOR Expression .)
    COMMA           reduce using rule 124 (Expression -> Expression XOR Expression .)
    SEMICOLON       reduce using rule 124 (Expression -> Expression XOR Expression .)
    RPAREN          reduce using rule 124 (Expression -> Expression XOR Expression .)
    RSQUARE         reduce using rule 124 (Expression -> Expression XOR Expression .)
    COLON           reduce using rule 124 (Expression -> Expression XOR Expression .)
    LCURL           reduce using rule 124 (Expression -> Expression XOR Expression .)
    PLUSEQUAL       reduce using rule 124 (Expression -> Expression XOR Expression .)
    MINUSEQUAL      reduce using rule 124 (Expression -> Expression XOR Expression .)
    TIMESEQUAL      reduce using rule 124 (Expression -> Expression XOR Expression .)
    DIVIDE_EQUAL    reduce using rule 124 (Expression -> Expression XOR Expression .)
    MODEQUAL        reduce using rule 124 (Expression -> Expression XOR Expression .)
    ANDEQUAL        reduce using rule 124 (Expression -> Expression XOR Expression .)
    OREQUAL         reduce using rule 124 (Expression -> Expression XOR Expression .)
    XOREQUAL        reduce using rule 124 (Expression -> Expression XOR Expression .)
    ANDXOR_EQUAL    reduce using rule 124 (Expression -> Expression XOR Expression .)
    LSHIFT_EQUAL    reduce using rule 124 (Expression -> Expression XOR Expression .)
    RSHIFT_EQUAL    reduce using rule 124 (Expression -> Expression XOR Expression .)
    EQUALS          reduce using rule 124 (Expression -> Expression XOR Expression .)
    INCREMENT       reduce using rule 124 (Expression -> Expression XOR Expression .)
    DECREMENT       reduce using rule 124 (Expression -> Expression XOR Expression .)
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191

  ! LESSTHAN        [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! GREATERTHAN     [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! ANDXOR          [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! DIVIDE          [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! MODULO          [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! LSHIFT          [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! RSHIFT          [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! PLUS            [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! MINUS           [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! MULTIPLY        [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! AND             [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]


state 229

    (126) Expression -> Expression DIVIDE Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    COMPARE_AND     reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    EQEQ            reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    NOTEQUALS       reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    LESSTHAN        reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    GREATERTHAN     reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    LESSTHAN_EQUAL  reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    GREATERTHAN_EQUAL reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    OR              reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    XOR             reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    ANDXOR          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    DIVIDE          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    MODULO          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    LSHIFT          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    RSHIFT          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    PLUS            reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    MINUS           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    MULTIPLY        reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    AND             reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    COMMA           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    SEMICOLON       reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    RPAREN          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    RSQUARE         reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    COLON           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    LCURL           reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    PLUSEQUAL       reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    MINUSEQUAL      reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    TIMESEQUAL      reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    DIVIDE_EQUAL    reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    MODEQUAL        reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    ANDEQUAL        reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    OREQUAL         reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    XOREQUAL        reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    ANDXOR_EQUAL    reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    LSHIFT_EQUAL    reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    RSHIFT_EQUAL    reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    EQUALS          reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    INCREMENT       reduce using rule 126 (Expression -> Expression DIVIDE Expression .)
    DECREMENT       reduce using rule 126 (Expression -> Expression DIVIDE Expression .)

  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! LESSTHAN        [ shift and go to state 180 ]
  ! GREATERTHAN     [ shift and go to state 190 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 192 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 185 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! DIVIDE          [ shift and go to state 188 ]
  ! MODULO          [ shift and go to state 183 ]
  ! LSHIFT          [ shift and go to state 181 ]
  ! RSHIFT          [ shift and go to state 177 ]
  ! PLUS            [ shift and go to state 186 ]
  ! MINUS           [ shift and go to state 184 ]
  ! MULTIPLY        [ shift and go to state 182 ]
  ! AND             [ shift and go to state 191 ]


state 230

    (120) Expression -> Expression GREATERTHAN Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    COMPARE_AND     reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    EQEQ            reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    NOTEQUALS       reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    LESSTHAN        reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    GREATERTHAN     reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    LESSTHAN_EQUAL  reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    GREATERTHAN_EQUAL reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    OR              reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    XOR             reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    ANDXOR          reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    AND             reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    COMMA           reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    SEMICOLON       reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    RPAREN          reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    RSQUARE         reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    COLON           reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    LCURL           reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    PLUSEQUAL       reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    MINUSEQUAL      reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    TIMESEQUAL      reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    DIVIDE_EQUAL    reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    MODEQUAL        reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    ANDEQUAL        reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    OREQUAL         reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    XOREQUAL        reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    ANDXOR_EQUAL    reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    LSHIFT_EQUAL    reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    RSHIFT_EQUAL    reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    EQUALS          reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    INCREMENT       reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    DECREMENT       reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .)
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182

  ! DIVIDE          [ reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .) ]
  ! MODULO          [ reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .) ]
  ! LSHIFT          [ reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .) ]
  ! RSHIFT          [ reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .) ]
  ! PLUS            [ reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .) ]
  ! MINUS           [ reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .) ]
  ! MULTIPLY        [ reduce using rule 120 (Expression -> Expression GREATERTHAN Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! LESSTHAN        [ shift and go to state 180 ]
  ! GREATERTHAN     [ shift and go to state 190 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 192 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 185 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! AND             [ shift and go to state 191 ]


state 231

    (133) Expression -> Expression AND Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 133 (Expression -> Expression AND Expression .)
    COMPARE_AND     reduce using rule 133 (Expression -> Expression AND Expression .)
    EQEQ            reduce using rule 133 (Expression -> Expression AND Expression .)
    NOTEQUALS       reduce using rule 133 (Expression -> Expression AND Expression .)
    OR              reduce using rule 133 (Expression -> Expression AND Expression .)
    XOR             reduce using rule 133 (Expression -> Expression AND Expression .)
    ANDXOR          reduce using rule 133 (Expression -> Expression AND Expression .)
    AND             reduce using rule 133 (Expression -> Expression AND Expression .)
    COMMA           reduce using rule 133 (Expression -> Expression AND Expression .)
    SEMICOLON       reduce using rule 133 (Expression -> Expression AND Expression .)
    RPAREN          reduce using rule 133 (Expression -> Expression AND Expression .)
    RSQUARE         reduce using rule 133 (Expression -> Expression AND Expression .)
    COLON           reduce using rule 133 (Expression -> Expression AND Expression .)
    LCURL           reduce using rule 133 (Expression -> Expression AND Expression .)
    PLUSEQUAL       reduce using rule 133 (Expression -> Expression AND Expression .)
    MINUSEQUAL      reduce using rule 133 (Expression -> Expression AND Expression .)
    TIMESEQUAL      reduce using rule 133 (Expression -> Expression AND Expression .)
    DIVIDE_EQUAL    reduce using rule 133 (Expression -> Expression AND Expression .)
    MODEQUAL        reduce using rule 133 (Expression -> Expression AND Expression .)
    ANDEQUAL        reduce using rule 133 (Expression -> Expression AND Expression .)
    OREQUAL         reduce using rule 133 (Expression -> Expression AND Expression .)
    XOREQUAL        reduce using rule 133 (Expression -> Expression AND Expression .)
    ANDXOR_EQUAL    reduce using rule 133 (Expression -> Expression AND Expression .)
    LSHIFT_EQUAL    reduce using rule 133 (Expression -> Expression AND Expression .)
    RSHIFT_EQUAL    reduce using rule 133 (Expression -> Expression AND Expression .)
    EQUALS          reduce using rule 133 (Expression -> Expression AND Expression .)
    INCREMENT       reduce using rule 133 (Expression -> Expression AND Expression .)
    DECREMENT       reduce using rule 133 (Expression -> Expression AND Expression .)
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182

  ! LESSTHAN        [ reduce using rule 133 (Expression -> Expression AND Expression .) ]
  ! GREATERTHAN     [ reduce using rule 133 (Expression -> Expression AND Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 133 (Expression -> Expression AND Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 133 (Expression -> Expression AND Expression .) ]
  ! DIVIDE          [ reduce using rule 133 (Expression -> Expression AND Expression .) ]
  ! MODULO          [ reduce using rule 133 (Expression -> Expression AND Expression .) ]
  ! LSHIFT          [ reduce using rule 133 (Expression -> Expression AND Expression .) ]
  ! RSHIFT          [ reduce using rule 133 (Expression -> Expression AND Expression .) ]
  ! PLUS            [ reduce using rule 133 (Expression -> Expression AND Expression .) ]
  ! MINUS           [ reduce using rule 133 (Expression -> Expression AND Expression .) ]
  ! MULTIPLY        [ reduce using rule 133 (Expression -> Expression AND Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! AND             [ shift and go to state 191 ]


state 232

    (121) Expression -> Expression LESSTHAN_EQUAL Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    COMPARE_AND     reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    EQEQ            reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    NOTEQUALS       reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    LESSTHAN        reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    GREATERTHAN     reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    LESSTHAN_EQUAL  reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    GREATERTHAN_EQUAL reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    OR              reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    XOR             reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    ANDXOR          reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    AND             reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    COMMA           reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    SEMICOLON       reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    RPAREN          reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    RSQUARE         reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    COLON           reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    LCURL           reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    PLUSEQUAL       reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    MINUSEQUAL      reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    TIMESEQUAL      reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    DIVIDE_EQUAL    reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    MODEQUAL        reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    ANDEQUAL        reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    OREQUAL         reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    XOREQUAL        reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    ANDXOR_EQUAL    reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    LSHIFT_EQUAL    reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    RSHIFT_EQUAL    reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    EQUALS          reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    INCREMENT       reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    DECREMENT       reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .)
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182

  ! DIVIDE          [ reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! MODULO          [ reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! LSHIFT          [ reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! RSHIFT          [ reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! PLUS            [ reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! MINUS           [ reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! MULTIPLY        [ reduce using rule 121 (Expression -> Expression LESSTHAN_EQUAL Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! LESSTHAN        [ shift and go to state 180 ]
  ! GREATERTHAN     [ shift and go to state 190 ]
  ! LESSTHAN_EQUAL  [ shift and go to state 192 ]
  ! GREATERTHAN_EQUAL [ shift and go to state 185 ]
  ! OR              [ shift and go to state 194 ]
  ! XOR             [ shift and go to state 187 ]
  ! ANDXOR          [ shift and go to state 174 ]
  ! AND             [ shift and go to state 191 ]


state 233

    (116) Expression -> Expression COMPARE_AND Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    COMPARE_AND     reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    COMMA           reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    SEMICOLON       reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    RPAREN          reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    RSQUARE         reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    COLON           reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    LCURL           reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    PLUSEQUAL       reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    MINUSEQUAL      reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    TIMESEQUAL      reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    DIVIDE_EQUAL    reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    MODEQUAL        reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    ANDEQUAL        reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    OREQUAL         reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    XOREQUAL        reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    ANDXOR_EQUAL    reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    LSHIFT_EQUAL    reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    RSHIFT_EQUAL    reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    EQUALS          reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    INCREMENT       reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    DECREMENT       reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .)
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191

  ! EQEQ            [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! NOTEQUALS       [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! LESSTHAN        [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! GREATERTHAN     [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! OR              [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! XOR             [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! ANDXOR          [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! DIVIDE          [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! MODULO          [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! LSHIFT          [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! RSHIFT          [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! PLUS            [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! MINUS           [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! MULTIPLY        [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! AND             [ reduce using rule 116 (Expression -> Expression COMPARE_AND Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]


state 234

    (123) Expression -> Expression OR Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMPARE_OR      reduce using rule 123 (Expression -> Expression OR Expression .)
    COMPARE_AND     reduce using rule 123 (Expression -> Expression OR Expression .)
    EQEQ            reduce using rule 123 (Expression -> Expression OR Expression .)
    NOTEQUALS       reduce using rule 123 (Expression -> Expression OR Expression .)
    OR              reduce using rule 123 (Expression -> Expression OR Expression .)
    COMMA           reduce using rule 123 (Expression -> Expression OR Expression .)
    SEMICOLON       reduce using rule 123 (Expression -> Expression OR Expression .)
    RPAREN          reduce using rule 123 (Expression -> Expression OR Expression .)
    RSQUARE         reduce using rule 123 (Expression -> Expression OR Expression .)
    COLON           reduce using rule 123 (Expression -> Expression OR Expression .)
    LCURL           reduce using rule 123 (Expression -> Expression OR Expression .)
    PLUSEQUAL       reduce using rule 123 (Expression -> Expression OR Expression .)
    MINUSEQUAL      reduce using rule 123 (Expression -> Expression OR Expression .)
    TIMESEQUAL      reduce using rule 123 (Expression -> Expression OR Expression .)
    DIVIDE_EQUAL    reduce using rule 123 (Expression -> Expression OR Expression .)
    MODEQUAL        reduce using rule 123 (Expression -> Expression OR Expression .)
    ANDEQUAL        reduce using rule 123 (Expression -> Expression OR Expression .)
    OREQUAL         reduce using rule 123 (Expression -> Expression OR Expression .)
    XOREQUAL        reduce using rule 123 (Expression -> Expression OR Expression .)
    ANDXOR_EQUAL    reduce using rule 123 (Expression -> Expression OR Expression .)
    LSHIFT_EQUAL    reduce using rule 123 (Expression -> Expression OR Expression .)
    RSHIFT_EQUAL    reduce using rule 123 (Expression -> Expression OR Expression .)
    EQUALS          reduce using rule 123 (Expression -> Expression OR Expression .)
    INCREMENT       reduce using rule 123 (Expression -> Expression OR Expression .)
    DECREMENT       reduce using rule 123 (Expression -> Expression OR Expression .)
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191

  ! LESSTHAN        [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! GREATERTHAN     [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! LESSTHAN_EQUAL  [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! GREATERTHAN_EQUAL [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! XOR             [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! ANDXOR          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! DIVIDE          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! MODULO          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! LSHIFT          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! RSHIFT          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! PLUS            [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! MINUS           [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! MULTIPLY        [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! AND             [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! COMPARE_OR      [ shift and go to state 178 ]
  ! COMPARE_AND     [ shift and go to state 193 ]
  ! EQEQ            [ shift and go to state 179 ]
  ! NOTEQUALS       [ shift and go to state 175 ]
  ! OR              [ shift and go to state 194 ]


state 235

    (143) Conversion -> TYPECAST Type LPAREN . Expression RPAREN
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 249

state 236

    (18) MapType -> MAP LSQUARE KeyType RSQUARE ElementType .

    EQUALS          reduce using rule 18 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    SEMICOLON       reduce using rule 18 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    RSQUARE         reduce using rule 18 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    LCURL           reduce using rule 18 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    RPAREN          reduce using rule 18 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    COMMA           reduce using rule 18 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)
    LPAREN          reduce using rule 18 (MapType -> MAP LSQUARE KeyType RSQUARE ElementType .)


state 237

    (23) StructType -> FuncScope STRUCT LCURL FieldDeclRep . RCURL EndScope
    (25) FieldDeclRep -> FieldDeclRep . FieldDecl SEMICOLON
    (27) FieldDecl -> . IdentifierList Type
    (56) IdentifierList -> . IDENTIFIER
    (57) IdentifierList -> . IdentifierRep
    (58) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (59) IdentifierRep -> . IDENTIFIER COMMA IDENTIFIER

    RCURL           shift and go to state 251
    IDENTIFIER      shift and go to state 35

    FieldDecl                      shift and go to state 250
    IdentifierRep                  shift and go to state 32
    IdentifierList                 shift and go to state 252

state 238

    (26) FieldDeclRep -> epsilon .

    RCURL           reduce using rule 26 (FieldDeclRep -> epsilon .)
    IDENTIFIER      reduce using rule 26 (FieldDeclRep -> epsilon .)


state 239

    (42) StatementList -> StatementRep .
    (43) StatementRep -> StatementRep . Statement SEMICOLON
    (144) Statement -> . Declaration
    (145) Statement -> . LabeledStmt
    (146) Statement -> . SimpleStmt
    (147) Statement -> . ReturnStmt
    (148) Statement -> . BreakStmt
    (149) Statement -> . ContinueStmt
    (150) Statement -> . GotoStmt
    (151) Statement -> . CreateScope IFSYM Block EndScope_1
    (152) Statement -> . IfStmt
    (153) Statement -> . SwitchStmt
    (154) Statement -> . ForStmt
    (155) Statement -> . DeferStmt
    (156) Statement -> . FallThroughStmt
    (157) Statement -> . GoStmt
    (158) Statement -> . PrintStmt
    (159) Statement -> . ScanStmt
    (45) Declaration -> . ConstDecl
    (46) Declaration -> . TypeDecl
    (47) Declaration -> . VarDecl
    (172) LabeledStmt -> . Label COLON Statement
    (167) SimpleStmt -> . epsilon
    (168) SimpleStmt -> . ExpressionStmt
    (169) SimpleStmt -> . IncDecStmt
    (170) SimpleStmt -> . Assignment
    (171) SimpleStmt -> . ShortVarDecl
    (212) ReturnStmt -> . RETURN ExpressionListPureOpt
    (215) BreakStmt -> . BREAK LabelOpt
    (216) ContinueStmt -> . CONTINUE LabelOpt
    (219) GotoStmt -> . GOTO Label
    (82) CreateScope -> .
    (191) IfStmt -> . IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt
    (196) SwitchStmt -> . ExprSwitchStmt
    (204) ForStmt -> . FOR CreateScope ConditionBlockOpt Block EndScope_1
    (166) DeferStmt -> . DEFER Expression
    (164) FallThroughStmt -> . FALLTHROUGH
    (165) GoStmt -> . GO Expression
    (161) PrintStmt -> . PRINT PD Expression
    (162) PrintStmt -> . PRINT PS Expression
    (163) ScanStmt -> . SCAN Expression
    (50) ConstDecl -> . CONST ConstSpec
    (51) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (63) TypeDecl -> . TYPE TypeSpec
    (64) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (71) VarDecl -> . VAR VarSpec
    (72) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (173) Label -> . IDENTIFIER
    (236) epsilon -> .
    (174) ExpressionStmt -> . Expression
    (175) IncDecStmt -> . Expression INCREMENT
    (176) IncDecStmt -> . Expression DECREMENT
    (177) Assignment -> . ExpressionList assign_op ExpressionList
    (79) ShortVarDecl -> . IDENTIFIER SHORT_ASSIGNMENT Expression
    (197) ExprSwitchStmt -> . SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (60) ExpressionList -> . Expression ExpressionRep
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    RCURL           reduce using rule 42 (StatementList -> StatementRep .)
    CASE            reduce using rule 42 (StatementList -> StatementRep .)
    DEFAULT         reduce using rule 42 (StatementList -> StatementRep .)
    RETURN          shift and go to state 266
    BREAK           shift and go to state 284
    CONTINUE        shift and go to state 276
    GOTO            shift and go to state 263
    LCURL           reduce using rule 82 (CreateScope -> .)
    IF              shift and go to state 290
    FOR             shift and go to state 273
    DEFER           shift and go to state 260
    FALLTHROUGH     shift and go to state 261
    GO              shift and go to state 254
    PRINT           shift and go to state 269
    SCAN            shift and go to state 285
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 280
    SEMICOLON       reduce using rule 236 (epsilon -> .)
    SWITCH          shift and go to state 278
    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    UnaryOp                        shift and go to state 114
    ContinueStmt                   shift and go to state 253
    Conversion                     shift and go to state 115
    SimpleStmt                     shift and go to state 286
    Label                          shift and go to state 267
    ExpressionStmt                 shift and go to state 255
    ForStmt                        shift and go to state 287
    ScanStmt                       shift and go to state 256
    Statement                      shift and go to state 257
    IfStmt                         shift and go to state 258
    GoStmt                         shift and go to state 270
    DeferStmt                      shift and go to state 271
    OperandName                    shift and go to state 118
    Assignment                     shift and go to state 277
    I                              shift and go to state 125
    IncDecStmt                     shift and go to state 262
    Declaration                    shift and go to state 279
    FallThroughStmt                shift and go to state 259
    GotoStmt                       shift and go to state 272
    C                              shift and go to state 123
    TypeDecl                       shift and go to state 19
    F                              shift and go to state 124
    LabeledStmt                    shift and go to state 264
    epsilon                        shift and go to state 281
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    S                              shift and go to state 128
    ExpressionList                 shift and go to state 282
    Expression                     shift and go to state 283
    ShortVarDecl                   shift and go to state 289
    BasicLit                       shift and go to state 119
    CreateScope                    shift and go to state 288
    BreakStmt                      shift and go to state 291
    SwitchStmt                     shift and go to state 275
    Literal                        shift and go to state 132
    VarDecl                        shift and go to state 22
    PrintStmt                      shift and go to state 265
    PrimaryExpr                    shift and go to state 127
    ReturnStmt                     shift and go to state 274
    ConstDecl                      shift and go to state 18
    ExprSwitchStmt                 shift and go to state 268

state 240

    (44) StatementRep -> epsilon .

    RETURN          reduce using rule 44 (StatementRep -> epsilon .)
    BREAK           reduce using rule 44 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 44 (StatementRep -> epsilon .)
    GOTO            reduce using rule 44 (StatementRep -> epsilon .)
    IF              reduce using rule 44 (StatementRep -> epsilon .)
    FOR             reduce using rule 44 (StatementRep -> epsilon .)
    DEFER           reduce using rule 44 (StatementRep -> epsilon .)
    FALLTHROUGH     reduce using rule 44 (StatementRep -> epsilon .)
    GO              reduce using rule 44 (StatementRep -> epsilon .)
    PRINT           reduce using rule 44 (StatementRep -> epsilon .)
    SCAN            reduce using rule 44 (StatementRep -> epsilon .)
    CONST           reduce using rule 44 (StatementRep -> epsilon .)
    TYPE            reduce using rule 44 (StatementRep -> epsilon .)
    VAR             reduce using rule 44 (StatementRep -> epsilon .)
    IDENTIFIER      reduce using rule 44 (StatementRep -> epsilon .)
    SWITCH          reduce using rule 44 (StatementRep -> epsilon .)
    NOT             reduce using rule 44 (StatementRep -> epsilon .)
    PLUS            reduce using rule 44 (StatementRep -> epsilon .)
    MINUS           reduce using rule 44 (StatementRep -> epsilon .)
    MULTIPLY        reduce using rule 44 (StatementRep -> epsilon .)
    AND             reduce using rule 44 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 44 (StatementRep -> epsilon .)
    TYPECAST        reduce using rule 44 (StatementRep -> epsilon .)
    SEMICOLON       reduce using rule 44 (StatementRep -> epsilon .)
    LCURL           reduce using rule 44 (StatementRep -> epsilon .)
    INT_LIT         reduce using rule 44 (StatementRep -> epsilon .)
    FLOAT_LIT       reduce using rule 44 (StatementRep -> epsilon .)
    IMAGINARY_LIT   reduce using rule 44 (StatementRep -> epsilon .)
    STRING_LIT      reduce using rule 44 (StatementRep -> epsilon .)
    RCURL           reduce using rule 44 (StatementRep -> epsilon .)
    CASE            reduce using rule 44 (StatementRep -> epsilon .)
    DEFAULT         reduce using rule 44 (StatementRep -> epsilon .)


state 241

    (41) Block -> LCURL StatementList . RCURL

    RCURL           shift and go to state 292


state 242

    (38) ParametersList -> ParametersList COMMA ParameterDecl .

    RPAREN          reduce using rule 38 (ParametersList -> ParametersList COMMA ParameterDecl .)
    COMMA           reduce using rule 38 (ParametersList -> ParametersList COMMA ParameterDecl .)


state 243

    (78) ExpressionListOpt -> EQUALS MALLOC LPAREN I . INT_LIT RPAREN

    INT_LIT         shift and go to state 293


state 244

    (108) PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .

    DOT             reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LSQUARE         reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    COMPARE_OR      reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    COMPARE_AND     reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    EQEQ            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    NOTEQUALS       reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LESSTHAN        reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    GREATERTHAN     reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LESSTHAN_EQUAL  reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    GREATERTHAN_EQUAL reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    XOR             reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    ANDXOR          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MODULO          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LSHIFT          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RSHIFT          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MULTIPLY        reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    AND             reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOLON       reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RSQUARE         reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LCURL           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    PLUSEQUAL       reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MINUSEQUAL      reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    TIMESEQUAL      reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE_EQUAL    reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MODEQUAL        reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    ANDEQUAL        reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    OREQUAL         reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    XOREQUAL        reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    ANDXOR_EQUAL    reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LSHIFT_EQUAL    reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RSHIFT_EQUAL    reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    EQUALS          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    INCREMENT       reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    DECREMENT       reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)


state 245

    (109) Slice -> LSQUARE ExpressionOpt COLON . ExpressionOpt RSQUARE
    (110) Slice -> LSQUARE ExpressionOpt COLON . Expression COLON Expression RSQUARE
    (134) ExpressionOpt -> . Expression
    (135) ExpressionOpt -> . epsilon
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (236) epsilon -> .
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    RSQUARE         reduce using rule 236 (epsilon -> .)
    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    ExpressionOpt                  shift and go to state 294
    BasicLit                       shift and go to state 119
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    epsilon                        shift and go to state 210
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 295

state 246

    (105) PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .

    DOT             reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LSQUARE         reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LPAREN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    COMPARE_OR      reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    COMPARE_AND     reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    EQEQ            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    NOTEQUALS       reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LESSTHAN        reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    GREATERTHAN     reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LESSTHAN_EQUAL  reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    GREATERTHAN_EQUAL reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    OR              reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    XOR             reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    ANDXOR          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    DIVIDE          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MODULO          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LSHIFT          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RSHIFT          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    PLUS            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MINUS           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MULTIPLY        reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    AND             reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    COMMA           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    SEMICOLON       reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RPAREN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RSQUARE         reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    COLON           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LCURL           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    PLUSEQUAL       reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MINUSEQUAL      reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    TIMESEQUAL      reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    DIVIDE_EQUAL    reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MODEQUAL        reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    ANDEQUAL        reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    OREQUAL         reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    XOREQUAL        reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    ANDXOR_EQUAL    reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LSHIFT_EQUAL    reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RSHIFT_EQUAL    reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    EQUALS          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    INCREMENT       reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    DECREMENT       reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)


state 247

    (111) TypeAssertion -> DOT LPAREN Type . RPAREN

    RPAREN          shift and go to state 296


state 248

    (61) ExpressionRep -> ExpressionRep COMMA Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COMMA           reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PLUSEQUAL       reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MINUSEQUAL      reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    TIMESEQUAL      reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    DIVIDE_EQUAL    reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MODEQUAL        reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    ANDEQUAL        reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OREQUAL         reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    XOREQUAL        reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    ANDXOR_EQUAL    reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LSHIFT_EQUAL    reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RSHIFT_EQUAL    reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    EQUALS          reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOLON       reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LCURL           reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    COLON           reduce using rule 61 (ExpressionRep -> ExpressionRep COMMA Expression .)
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191


state 249

    (143) Conversion -> TYPECAST Type LPAREN Expression . RPAREN
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    RPAREN          shift and go to state 297
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191


state 250

    (25) FieldDeclRep -> FieldDeclRep FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 298


state 251

    (23) StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL . EndScope
    (83) EndScope -> .

    EQUALS          reduce using rule 83 (EndScope -> .)
    SEMICOLON       reduce using rule 83 (EndScope -> .)
    RSQUARE         reduce using rule 83 (EndScope -> .)
    LCURL           reduce using rule 83 (EndScope -> .)
    RPAREN          reduce using rule 83 (EndScope -> .)
    COMMA           reduce using rule 83 (EndScope -> .)
    LPAREN          reduce using rule 83 (EndScope -> .)

    EndScope                       shift and go to state 299

state 252

    (27) FieldDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) TypeName -> . TypeToken
    (5) TypeName -> . QualifiedIdent
    (11) TypeLit -> . ArrayType
    (12) TypeLit -> . ST StructType
    (13) TypeLit -> . PointerType
    (14) TypeLit -> . MapType
    (15) TypeLit -> . SliceType
    (6) TypeToken -> . INT
    (7) TypeToken -> . FLOAT
    (8) TypeToken -> . BOOL
    (9) TypeToken -> . STRING
    (10) TypeToken -> . TYPE IDENTIFIER
    (101) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (16) ST -> .
    (28) PointerType -> . MULTIPLY BaseType
    (18) MapType -> . MAP LSQUARE KeyType RSQUARE ElementType
    (17) SliceType -> . LSQUARE RSQUARE ElementType

    INT             shift and go to state 66
    FLOAT           shift and go to state 67
    BOOL            shift and go to state 70
    STRING          shift and go to state 62
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 60
    LSQUARE         shift and go to state 64
    STRUCT          reduce using rule 16 (ST -> .)
    MULTIPLY        shift and go to state 55
    MAP             shift and go to state 65

    TypeToken                      shift and go to state 57
    Type                           shift and go to state 300
    ArrayType                      shift and go to state 54
    ST                             shift and go to state 68
    TypeName                       shift and go to state 59
    MapType                        shift and go to state 63
    PointerType                    shift and go to state 71
    TypeLit                        shift and go to state 56
    QualifiedIdent                 shift and go to state 73
    SliceType                      shift and go to state 61

state 253

    (149) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 149 (Statement -> ContinueStmt .)


state 254

    (165) GoStmt -> GO . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 301

state 255

    (168) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 168 (SimpleStmt -> ExpressionStmt .)
    LCURL           reduce using rule 168 (SimpleStmt -> ExpressionStmt .)


state 256

    (159) Statement -> ScanStmt .

    SEMICOLON       reduce using rule 159 (Statement -> ScanStmt .)


state 257

    (43) StatementRep -> StatementRep Statement . SEMICOLON

    SEMICOLON       shift and go to state 302


state 258

    (152) Statement -> IfStmt .

    SEMICOLON       reduce using rule 152 (Statement -> IfStmt .)


state 259

    (156) Statement -> FallThroughStmt .

    SEMICOLON       reduce using rule 156 (Statement -> FallThroughStmt .)


state 260

    (166) DeferStmt -> DEFER . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 303

state 261

    (164) FallThroughStmt -> FALLTHROUGH .

    SEMICOLON       reduce using rule 164 (FallThroughStmt -> FALLTHROUGH .)


state 262

    (169) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 169 (SimpleStmt -> IncDecStmt .)
    LCURL           reduce using rule 169 (SimpleStmt -> IncDecStmt .)


state 263

    (219) GotoStmt -> GOTO . Label
    (173) Label -> . IDENTIFIER

    IDENTIFIER      shift and go to state 304

    Label                          shift and go to state 305

state 264

    (145) Statement -> LabeledStmt .

    SEMICOLON       reduce using rule 145 (Statement -> LabeledStmt .)


state 265

    (158) Statement -> PrintStmt .

    SEMICOLON       reduce using rule 158 (Statement -> PrintStmt .)


state 266

    (212) ReturnStmt -> RETURN . ExpressionListPureOpt
    (213) ExpressionListPureOpt -> . ExpressionList
    (214) ExpressionListPureOpt -> . epsilon
    (60) ExpressionList -> . Expression ExpressionRep
    (236) epsilon -> .
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    SEMICOLON       reduce using rule 236 (epsilon -> .)
    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    epsilon                        shift and go to state 307
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    ExpressionListPureOpt          shift and go to state 306
    Operand                        shift and go to state 130
    Conversion                     shift and go to state 115
    ExpressionList                 shift and go to state 308
    C                              shift and go to state 123
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    Literal                        shift and go to state 132
    Expression                     shift and go to state 133

state 267

    (172) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 309


state 268

    (196) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 196 (SwitchStmt -> ExprSwitchStmt .)


state 269

    (161) PrintStmt -> PRINT . PD Expression
    (162) PrintStmt -> PRINT . PS Expression

    PD              shift and go to state 311
    PS              shift and go to state 310


state 270

    (157) Statement -> GoStmt .

    SEMICOLON       reduce using rule 157 (Statement -> GoStmt .)


state 271

    (155) Statement -> DeferStmt .

    SEMICOLON       reduce using rule 155 (Statement -> DeferStmt .)


state 272

    (150) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 150 (Statement -> GotoStmt .)


state 273

    (204) ForStmt -> FOR . CreateScope ConditionBlockOpt Block EndScope_1
    (82) CreateScope -> .

    NOT             reduce using rule 82 (CreateScope -> .)
    IDENTIFIER      reduce using rule 82 (CreateScope -> .)
    PLUS            reduce using rule 82 (CreateScope -> .)
    MINUS           reduce using rule 82 (CreateScope -> .)
    MULTIPLY        reduce using rule 82 (CreateScope -> .)
    AND             reduce using rule 82 (CreateScope -> .)
    LPAREN          reduce using rule 82 (CreateScope -> .)
    TYPECAST        reduce using rule 82 (CreateScope -> .)
    LCURL           reduce using rule 82 (CreateScope -> .)
    SEMICOLON       reduce using rule 82 (CreateScope -> .)
    INT_LIT         reduce using rule 82 (CreateScope -> .)
    FLOAT_LIT       reduce using rule 82 (CreateScope -> .)
    IMAGINARY_LIT   reduce using rule 82 (CreateScope -> .)
    STRING_LIT      reduce using rule 82 (CreateScope -> .)

    CreateScope                    shift and go to state 312

state 274

    (147) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 147 (Statement -> ReturnStmt .)


state 275

    (153) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 153 (Statement -> SwitchStmt .)


state 276

    (216) ContinueStmt -> CONTINUE . LabelOpt
    (217) LabelOpt -> . Label
    (218) LabelOpt -> . epsilon
    (173) Label -> . IDENTIFIER
    (236) epsilon -> .

    IDENTIFIER      shift and go to state 304
    SEMICOLON       reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 313
    LabelOpt                       shift and go to state 314
    Label                          shift and go to state 315

state 277

    (170) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 170 (SimpleStmt -> Assignment .)
    LCURL           reduce using rule 170 (SimpleStmt -> Assignment .)


state 278

    (197) ExprSwitchStmt -> SWITCH . Expression CreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    Expression                     shift and go to state 316
    BasicLit                       shift and go to state 119
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    S                              shift and go to state 128
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123

state 279

    (144) Statement -> Declaration .

    SEMICOLON       reduce using rule 144 (Statement -> Declaration .)


state 280

    (173) Label -> IDENTIFIER .
    (79) ShortVarDecl -> IDENTIFIER . SHORT_ASSIGNMENT Expression
    (100) OperandName -> IDENTIFIER .

    COLON           reduce using rule 173 (Label -> IDENTIFIER .)
    SHORT_ASSIGNMENT shift and go to state 317
    DOT             reduce using rule 100 (OperandName -> IDENTIFIER .)
    LSQUARE         reduce using rule 100 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 100 (OperandName -> IDENTIFIER .)
    INCREMENT       reduce using rule 100 (OperandName -> IDENTIFIER .)
    DECREMENT       reduce using rule 100 (OperandName -> IDENTIFIER .)
    COMPARE_OR      reduce using rule 100 (OperandName -> IDENTIFIER .)
    COMPARE_AND     reduce using rule 100 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 100 (OperandName -> IDENTIFIER .)
    NOTEQUALS       reduce using rule 100 (OperandName -> IDENTIFIER .)
    LESSTHAN        reduce using rule 100 (OperandName -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 100 (OperandName -> IDENTIFIER .)
    LESSTHAN_EQUAL  reduce using rule 100 (OperandName -> IDENTIFIER .)
    GREATERTHAN_EQUAL reduce using rule 100 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 100 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 100 (OperandName -> IDENTIFIER .)
    ANDXOR          reduce using rule 100 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 100 (OperandName -> IDENTIFIER .)
    MODULO          reduce using rule 100 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 100 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 100 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 100 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 100 (OperandName -> IDENTIFIER .)
    MULTIPLY        reduce using rule 100 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 100 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 100 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 100 (OperandName -> IDENTIFIER .)
    PLUSEQUAL       reduce using rule 100 (OperandName -> IDENTIFIER .)
    MINUSEQUAL      reduce using rule 100 (OperandName -> IDENTIFIER .)
    TIMESEQUAL      reduce using rule 100 (OperandName -> IDENTIFIER .)
    DIVIDE_EQUAL    reduce using rule 100 (OperandName -> IDENTIFIER .)
    MODEQUAL        reduce using rule 100 (OperandName -> IDENTIFIER .)
    ANDEQUAL        reduce using rule 100 (OperandName -> IDENTIFIER .)
    OREQUAL         reduce using rule 100 (OperandName -> IDENTIFIER .)
    XOREQUAL        reduce using rule 100 (OperandName -> IDENTIFIER .)
    ANDXOR_EQUAL    reduce using rule 100 (OperandName -> IDENTIFIER .)
    LSHIFT_EQUAL    reduce using rule 100 (OperandName -> IDENTIFIER .)
    RSHIFT_EQUAL    reduce using rule 100 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 100 (OperandName -> IDENTIFIER .)


state 281

    (167) SimpleStmt -> epsilon .

    SEMICOLON       reduce using rule 167 (SimpleStmt -> epsilon .)
    LCURL           reduce using rule 167 (SimpleStmt -> epsilon .)


state 282

    (177) Assignment -> ExpressionList . assign_op ExpressionList
    (178) assign_op -> . AssignOp
    (179) AssignOp -> . PLUSEQUAL
    (180) AssignOp -> . MINUSEQUAL
    (181) AssignOp -> . TIMESEQUAL
    (182) AssignOp -> . DIVIDE_EQUAL
    (183) AssignOp -> . MODEQUAL
    (184) AssignOp -> . ANDEQUAL
    (185) AssignOp -> . OREQUAL
    (186) AssignOp -> . XOREQUAL
    (187) AssignOp -> . ANDXOR_EQUAL
    (188) AssignOp -> . LSHIFT_EQUAL
    (189) AssignOp -> . RSHIFT_EQUAL
    (190) AssignOp -> . EQUALS

    PLUSEQUAL       shift and go to state 325
    MINUSEQUAL      shift and go to state 321
    TIMESEQUAL      shift and go to state 330
    DIVIDE_EQUAL    shift and go to state 331
    MODEQUAL        shift and go to state 322
    ANDEQUAL        shift and go to state 328
    OREQUAL         shift and go to state 329
    XOREQUAL        shift and go to state 323
    ANDXOR_EQUAL    shift and go to state 326
    LSHIFT_EQUAL    shift and go to state 318
    RSHIFT_EQUAL    shift and go to state 320
    EQUALS          shift and go to state 324

    AssignOp                       shift and go to state 319
    assign_op                      shift and go to state 327

state 283

    (174) ExpressionStmt -> Expression .
    (175) IncDecStmt -> Expression . INCREMENT
    (176) IncDecStmt -> Expression . DECREMENT
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression
    (60) ExpressionList -> Expression . ExpressionRep
    (61) ExpressionRep -> . ExpressionRep COMMA Expression
    (62) ExpressionRep -> . epsilon
    (236) epsilon -> .

    LCURL           reduce using rule 174 (ExpressionStmt -> Expression .)
    SEMICOLON       reduce using rule 174 (ExpressionStmt -> Expression .)
    INCREMENT       shift and go to state 332
    DECREMENT       shift and go to state 333
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191
    COMMA           reduce using rule 236 (epsilon -> .)
    PLUSEQUAL       reduce using rule 236 (epsilon -> .)
    MINUSEQUAL      reduce using rule 236 (epsilon -> .)
    TIMESEQUAL      reduce using rule 236 (epsilon -> .)
    DIVIDE_EQUAL    reduce using rule 236 (epsilon -> .)
    MODEQUAL        reduce using rule 236 (epsilon -> .)
    ANDEQUAL        reduce using rule 236 (epsilon -> .)
    OREQUAL         reduce using rule 236 (epsilon -> .)
    XOREQUAL        reduce using rule 236 (epsilon -> .)
    ANDXOR_EQUAL    reduce using rule 236 (epsilon -> .)
    LSHIFT_EQUAL    reduce using rule 236 (epsilon -> .)
    RSHIFT_EQUAL    reduce using rule 236 (epsilon -> .)
    EQUALS          reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 189
    ExpressionRep                  shift and go to state 176

state 284

    (215) BreakStmt -> BREAK . LabelOpt
    (217) LabelOpt -> . Label
    (218) LabelOpt -> . epsilon
    (173) Label -> . IDENTIFIER
    (236) epsilon -> .

    IDENTIFIER      shift and go to state 304
    SEMICOLON       reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 313
    LabelOpt                       shift and go to state 334
    Label                          shift and go to state 315

state 285

    (163) ScanStmt -> SCAN . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 335

state 286

    (146) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 146 (Statement -> SimpleStmt .)


state 287

    (154) Statement -> ForStmt .

    SEMICOLON       reduce using rule 154 (Statement -> ForStmt .)


state 288

    (151) Statement -> CreateScope . IFSYM Block EndScope_1
    (192) IFSYM -> .

    LCURL           reduce using rule 192 (IFSYM -> .)

    IFSYM                          shift and go to state 336

state 289

    (171) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 171 (SimpleStmt -> ShortVarDecl .)
    LCURL           reduce using rule 171 (SimpleStmt -> ShortVarDecl .)


state 290

    (191) IfStmt -> IF . Expression CreateScope IFSYM Block EndScope_1 ElseOpt
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    PrimaryExpr                    shift and go to state 127
    Literal                        shift and go to state 132
    Operand                        shift and go to state 130
    OperandName                    shift and go to state 118
    BasicLit                       shift and go to state 119
    C                              shift and go to state 123
    F                              shift and go to state 124
    I                              shift and go to state 125
    UnaryExpr                      shift and go to state 126
    S                              shift and go to state 128
    Expression                     shift and go to state 337

state 291

    (148) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 148 (Statement -> BreakStmt .)


state 292

    (41) Block -> LCURL StatementList RCURL .

    ELSE            reduce using rule 41 (Block -> LCURL StatementList RCURL .)
    SEMICOLON       reduce using rule 41 (Block -> LCURL StatementList RCURL .)


state 293

    (78) ExpressionListOpt -> EQUALS MALLOC LPAREN I INT_LIT . RPAREN

    RPAREN          shift and go to state 338


state 294

    (109) Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt . RSQUARE

    RSQUARE         shift and go to state 339


state 295

    (110) Slice -> LSQUARE ExpressionOpt COLON Expression . COLON Expression RSQUARE
    (134) ExpressionOpt -> Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    COLON           shift and go to state 340
    RSQUARE         reduce using rule 134 (ExpressionOpt -> Expression .)
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191


state 296

    (111) TypeAssertion -> DOT LPAREN Type RPAREN .

    DOT             reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSQUARE         reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LPAREN          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COMPARE_OR      reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COMPARE_AND     reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    EQEQ            reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    NOTEQUALS       reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LESSTHAN        reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    GREATERTHAN     reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LESSTHAN_EQUAL  reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    GREATERTHAN_EQUAL reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OR              reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    XOR             reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    ANDXOR          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DIVIDE          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MODULO          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSHIFT          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSHIFT          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUS            reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUS           reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MULTIPLY        reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    AND             reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COMMA           reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RPAREN          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSQUARE         reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COLON           reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LCURL           reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUSEQUAL       reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUSEQUAL      reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    TIMESEQUAL      reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DIVIDE_EQUAL    reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MODEQUAL        reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    ANDEQUAL        reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OREQUAL         reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    XOREQUAL        reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    ANDXOR_EQUAL    reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSHIFT_EQUAL    reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSHIFT_EQUAL    reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    EQUALS          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    INCREMENT       reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DECREMENT       reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)


state 297

    (143) Conversion -> TYPECAST Type LPAREN Expression RPAREN .

    DOT             reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSQUARE         reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COMPARE_OR      reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COMPARE_AND     reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    EQEQ            reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    NOTEQUALS       reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LESSTHAN        reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    GREATERTHAN     reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LESSTHAN_EQUAL  reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    GREATERTHAN_EQUAL reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    OR              reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    XOR             reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    ANDXOR          reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MODULO          reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    PLUS            reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MINUS           reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MULTIPLY        reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    AND             reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COMMA           reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COLON           reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LCURL           reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    PLUSEQUAL       reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MINUSEQUAL      reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    TIMESEQUAL      reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DIVIDE_EQUAL    reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MODEQUAL        reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    ANDEQUAL        reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    OREQUAL         reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    XOREQUAL        reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    ANDXOR_EQUAL    reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSHIFT_EQUAL    reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSHIFT_EQUAL    reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    INCREMENT       reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DECREMENT       reduce using rule 143 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)


state 298

    (25) FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .

    RCURL           reduce using rule 25 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .)
    IDENTIFIER      reduce using rule 25 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .)


state 299

    (23) StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .

    EQUALS          reduce using rule 23 (StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    SEMICOLON       reduce using rule 23 (StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    RSQUARE         reduce using rule 23 (StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    LCURL           reduce using rule 23 (StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    RPAREN          reduce using rule 23 (StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    COMMA           reduce using rule 23 (StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    LPAREN          reduce using rule 23 (StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)


state 300

    (27) FieldDecl -> IdentifierList Type .

    SEMICOLON       reduce using rule 27 (FieldDecl -> IdentifierList Type .)


state 301

    (165) GoStmt -> GO Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 165 (GoStmt -> GO Expression .)
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191


state 302

    (43) StatementRep -> StatementRep Statement SEMICOLON .

    RETURN          reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    BREAK           reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    CONTINUE        reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    GOTO            reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    IF              reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    FOR             reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    DEFER           reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    FALLTHROUGH     reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    GO              reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    PRINT           reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    SCAN            reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    CONST           reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    TYPE            reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    VAR             reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    IDENTIFIER      reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    SWITCH          reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    NOT             reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    PLUS            reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    MINUS           reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    MULTIPLY        reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    AND             reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    LPAREN          reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    TYPECAST        reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    SEMICOLON       reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    LCURL           reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    INT_LIT         reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    FLOAT_LIT       reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    IMAGINARY_LIT   reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    STRING_LIT      reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    RCURL           reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    CASE            reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)
    DEFAULT         reduce using rule 43 (StatementRep -> StatementRep Statement SEMICOLON .)


state 303

    (166) DeferStmt -> DEFER Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 166 (DeferStmt -> DEFER Expression .)
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191


state 304

    (173) Label -> IDENTIFIER .

    SEMICOLON       reduce using rule 173 (Label -> IDENTIFIER .)


state 305

    (219) GotoStmt -> GOTO Label .

    SEMICOLON       reduce using rule 219 (GotoStmt -> GOTO Label .)


state 306

    (212) ReturnStmt -> RETURN ExpressionListPureOpt .

    SEMICOLON       reduce using rule 212 (ReturnStmt -> RETURN ExpressionListPureOpt .)


state 307

    (214) ExpressionListPureOpt -> epsilon .

    SEMICOLON       reduce using rule 214 (ExpressionListPureOpt -> epsilon .)


state 308

    (213) ExpressionListPureOpt -> ExpressionList .

    SEMICOLON       reduce using rule 213 (ExpressionListPureOpt -> ExpressionList .)


state 309

    (172) LabeledStmt -> Label COLON . Statement
    (144) Statement -> . Declaration
    (145) Statement -> . LabeledStmt
    (146) Statement -> . SimpleStmt
    (147) Statement -> . ReturnStmt
    (148) Statement -> . BreakStmt
    (149) Statement -> . ContinueStmt
    (150) Statement -> . GotoStmt
    (151) Statement -> . CreateScope IFSYM Block EndScope_1
    (152) Statement -> . IfStmt
    (153) Statement -> . SwitchStmt
    (154) Statement -> . ForStmt
    (155) Statement -> . DeferStmt
    (156) Statement -> . FallThroughStmt
    (157) Statement -> . GoStmt
    (158) Statement -> . PrintStmt
    (159) Statement -> . ScanStmt
    (45) Declaration -> . ConstDecl
    (46) Declaration -> . TypeDecl
    (47) Declaration -> . VarDecl
    (172) LabeledStmt -> . Label COLON Statement
    (167) SimpleStmt -> . epsilon
    (168) SimpleStmt -> . ExpressionStmt
    (169) SimpleStmt -> . IncDecStmt
    (170) SimpleStmt -> . Assignment
    (171) SimpleStmt -> . ShortVarDecl
    (212) ReturnStmt -> . RETURN ExpressionListPureOpt
    (215) BreakStmt -> . BREAK LabelOpt
    (216) ContinueStmt -> . CONTINUE LabelOpt
    (219) GotoStmt -> . GOTO Label
    (82) CreateScope -> .
    (191) IfStmt -> . IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt
    (196) SwitchStmt -> . ExprSwitchStmt
    (204) ForStmt -> . FOR CreateScope ConditionBlockOpt Block EndScope_1
    (166) DeferStmt -> . DEFER Expression
    (164) FallThroughStmt -> . FALLTHROUGH
    (165) GoStmt -> . GO Expression
    (161) PrintStmt -> . PRINT PD Expression
    (162) PrintStmt -> . PRINT PS Expression
    (163) ScanStmt -> . SCAN Expression
    (50) ConstDecl -> . CONST ConstSpec
    (51) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (63) TypeDecl -> . TYPE TypeSpec
    (64) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (71) VarDecl -> . VAR VarSpec
    (72) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (173) Label -> . IDENTIFIER
    (236) epsilon -> .
    (174) ExpressionStmt -> . Expression
    (175) IncDecStmt -> . Expression INCREMENT
    (176) IncDecStmt -> . Expression DECREMENT
    (177) Assignment -> . ExpressionList assign_op ExpressionList
    (79) ShortVarDecl -> . IDENTIFIER SHORT_ASSIGNMENT Expression
    (197) ExprSwitchStmt -> . SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (60) ExpressionList -> . Expression ExpressionRep
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    RETURN          shift and go to state 266
    BREAK           shift and go to state 284
    CONTINUE        shift and go to state 276
    GOTO            shift and go to state 263
    LCURL           reduce using rule 82 (CreateScope -> .)
    IF              shift and go to state 290
    FOR             shift and go to state 273
    DEFER           shift and go to state 260
    FALLTHROUGH     shift and go to state 261
    GO              shift and go to state 254
    PRINT           shift and go to state 269
    SCAN            shift and go to state 285
    CONST           shift and go to state 14
    TYPE            shift and go to state 23
    VAR             shift and go to state 21
    IDENTIFIER      shift and go to state 280
    SEMICOLON       reduce using rule 236 (epsilon -> .)
    SWITCH          shift and go to state 278
    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    UnaryOp                        shift and go to state 114
    ContinueStmt                   shift and go to state 253
    Conversion                     shift and go to state 115
    SimpleStmt                     shift and go to state 286
    Label                          shift and go to state 267
    ExpressionStmt                 shift and go to state 255
    ForStmt                        shift and go to state 287
    ScanStmt                       shift and go to state 256
    Statement                      shift and go to state 341
    IfStmt                         shift and go to state 258
    GoStmt                         shift and go to state 270
    DeferStmt                      shift and go to state 271
    OperandName                    shift and go to state 118
    Assignment                     shift and go to state 277
    I                              shift and go to state 125
    IncDecStmt                     shift and go to state 262
    Declaration                    shift and go to state 279
    FallThroughStmt                shift and go to state 259
    GotoStmt                       shift and go to state 272
    C                              shift and go to state 123
    TypeDecl                       shift and go to state 19
    F                              shift and go to state 124
    LabeledStmt                    shift and go to state 264
    epsilon                        shift and go to state 281
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    S                              shift and go to state 128
    ExpressionList                 shift and go to state 282
    Expression                     shift and go to state 283
    ShortVarDecl                   shift and go to state 289
    BasicLit                       shift and go to state 119
    CreateScope                    shift and go to state 288
    BreakStmt                      shift and go to state 291
    SwitchStmt                     shift and go to state 275
    Literal                        shift and go to state 132
    VarDecl                        shift and go to state 22
    PrintStmt                      shift and go to state 265
    PrimaryExpr                    shift and go to state 127
    ReturnStmt                     shift and go to state 274
    ConstDecl                      shift and go to state 18
    ExprSwitchStmt                 shift and go to state 268

state 310

    (162) PrintStmt -> PRINT PS . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 342

state 311

    (161) PrintStmt -> PRINT PD . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 343

state 312

    (204) ForStmt -> FOR CreateScope . ConditionBlockOpt Block EndScope_1
    (205) ConditionBlockOpt -> . epsilon
    (206) ConditionBlockOpt -> . Condition
    (207) ConditionBlockOpt -> . ForClause
    (236) epsilon -> .
    (208) Condition -> . Expression
    (209) ForClause -> . SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (167) SimpleStmt -> . epsilon
    (168) SimpleStmt -> . ExpressionStmt
    (169) SimpleStmt -> . IncDecStmt
    (170) SimpleStmt -> . Assignment
    (171) SimpleStmt -> . ShortVarDecl
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (174) ExpressionStmt -> . Expression
    (175) IncDecStmt -> . Expression INCREMENT
    (176) IncDecStmt -> . Expression DECREMENT
    (177) Assignment -> . ExpressionList assign_op ExpressionList
    (79) ShortVarDecl -> . IDENTIFIER SHORT_ASSIGNMENT Expression
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (60) ExpressionList -> . Expression ExpressionRep
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    LCURL           reduce using rule 236 (epsilon -> .)
    SEMICOLON       reduce using rule 236 (epsilon -> .)
    NOT             shift and go to state 120
    IDENTIFIER      shift and go to state 350
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    S                              shift and go to state 128
    SimpleStmt                     shift and go to state 344
    ExpressionStmt                 shift and go to state 255
    OperandName                    shift and go to state 118
    Assignment                     shift and go to state 277
    IncDecStmt                     shift and go to state 262
    Condition                      shift and go to state 345
    C                              shift and go to state 123
    F                              shift and go to state 124
    I                              shift and go to state 125
    epsilon                        shift and go to state 346
    UnaryExpr                      shift and go to state 126
    ConditionBlockOpt              shift and go to state 347
    PrimaryExpr                    shift and go to state 127
    ExpressionList                 shift and go to state 282
    ForClause                      shift and go to state 348
    Expression                     shift and go to state 349
    ShortVarDecl                   shift and go to state 289
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    Operand                        shift and go to state 130

state 313

    (218) LabelOpt -> epsilon .

    SEMICOLON       reduce using rule 218 (LabelOpt -> epsilon .)


state 314

    (216) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOLON       reduce using rule 216 (ContinueStmt -> CONTINUE LabelOpt .)


state 315

    (217) LabelOpt -> Label .

    SEMICOLON       reduce using rule 217 (LabelOpt -> Label .)


state 316

    (197) ExprSwitchStmt -> SWITCH Expression . CreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression
    (82) CreateScope -> .

    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191
    LCURL           reduce using rule 82 (CreateScope -> .)

    CreateScope                    shift and go to state 351

state 317

    (79) ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 352

state 318

    (188) AssignOp -> LSHIFT_EQUAL .

    NOT             reduce using rule 188 (AssignOp -> LSHIFT_EQUAL .)
    PLUS            reduce using rule 188 (AssignOp -> LSHIFT_EQUAL .)
    MINUS           reduce using rule 188 (AssignOp -> LSHIFT_EQUAL .)
    MULTIPLY        reduce using rule 188 (AssignOp -> LSHIFT_EQUAL .)
    AND             reduce using rule 188 (AssignOp -> LSHIFT_EQUAL .)
    LPAREN          reduce using rule 188 (AssignOp -> LSHIFT_EQUAL .)
    TYPECAST        reduce using rule 188 (AssignOp -> LSHIFT_EQUAL .)
    IDENTIFIER      reduce using rule 188 (AssignOp -> LSHIFT_EQUAL .)
    INT_LIT         reduce using rule 188 (AssignOp -> LSHIFT_EQUAL .)
    FLOAT_LIT       reduce using rule 188 (AssignOp -> LSHIFT_EQUAL .)
    IMAGINARY_LIT   reduce using rule 188 (AssignOp -> LSHIFT_EQUAL .)
    STRING_LIT      reduce using rule 188 (AssignOp -> LSHIFT_EQUAL .)


state 319

    (178) assign_op -> AssignOp .

    NOT             reduce using rule 178 (assign_op -> AssignOp .)
    PLUS            reduce using rule 178 (assign_op -> AssignOp .)
    MINUS           reduce using rule 178 (assign_op -> AssignOp .)
    MULTIPLY        reduce using rule 178 (assign_op -> AssignOp .)
    AND             reduce using rule 178 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 178 (assign_op -> AssignOp .)
    TYPECAST        reduce using rule 178 (assign_op -> AssignOp .)
    IDENTIFIER      reduce using rule 178 (assign_op -> AssignOp .)
    INT_LIT         reduce using rule 178 (assign_op -> AssignOp .)
    FLOAT_LIT       reduce using rule 178 (assign_op -> AssignOp .)
    IMAGINARY_LIT   reduce using rule 178 (assign_op -> AssignOp .)
    STRING_LIT      reduce using rule 178 (assign_op -> AssignOp .)


state 320

    (189) AssignOp -> RSHIFT_EQUAL .

    NOT             reduce using rule 189 (AssignOp -> RSHIFT_EQUAL .)
    PLUS            reduce using rule 189 (AssignOp -> RSHIFT_EQUAL .)
    MINUS           reduce using rule 189 (AssignOp -> RSHIFT_EQUAL .)
    MULTIPLY        reduce using rule 189 (AssignOp -> RSHIFT_EQUAL .)
    AND             reduce using rule 189 (AssignOp -> RSHIFT_EQUAL .)
    LPAREN          reduce using rule 189 (AssignOp -> RSHIFT_EQUAL .)
    TYPECAST        reduce using rule 189 (AssignOp -> RSHIFT_EQUAL .)
    IDENTIFIER      reduce using rule 189 (AssignOp -> RSHIFT_EQUAL .)
    INT_LIT         reduce using rule 189 (AssignOp -> RSHIFT_EQUAL .)
    FLOAT_LIT       reduce using rule 189 (AssignOp -> RSHIFT_EQUAL .)
    IMAGINARY_LIT   reduce using rule 189 (AssignOp -> RSHIFT_EQUAL .)
    STRING_LIT      reduce using rule 189 (AssignOp -> RSHIFT_EQUAL .)


state 321

    (180) AssignOp -> MINUSEQUAL .

    NOT             reduce using rule 180 (AssignOp -> MINUSEQUAL .)
    PLUS            reduce using rule 180 (AssignOp -> MINUSEQUAL .)
    MINUS           reduce using rule 180 (AssignOp -> MINUSEQUAL .)
    MULTIPLY        reduce using rule 180 (AssignOp -> MINUSEQUAL .)
    AND             reduce using rule 180 (AssignOp -> MINUSEQUAL .)
    LPAREN          reduce using rule 180 (AssignOp -> MINUSEQUAL .)
    TYPECAST        reduce using rule 180 (AssignOp -> MINUSEQUAL .)
    IDENTIFIER      reduce using rule 180 (AssignOp -> MINUSEQUAL .)
    INT_LIT         reduce using rule 180 (AssignOp -> MINUSEQUAL .)
    FLOAT_LIT       reduce using rule 180 (AssignOp -> MINUSEQUAL .)
    IMAGINARY_LIT   reduce using rule 180 (AssignOp -> MINUSEQUAL .)
    STRING_LIT      reduce using rule 180 (AssignOp -> MINUSEQUAL .)


state 322

    (183) AssignOp -> MODEQUAL .

    NOT             reduce using rule 183 (AssignOp -> MODEQUAL .)
    PLUS            reduce using rule 183 (AssignOp -> MODEQUAL .)
    MINUS           reduce using rule 183 (AssignOp -> MODEQUAL .)
    MULTIPLY        reduce using rule 183 (AssignOp -> MODEQUAL .)
    AND             reduce using rule 183 (AssignOp -> MODEQUAL .)
    LPAREN          reduce using rule 183 (AssignOp -> MODEQUAL .)
    TYPECAST        reduce using rule 183 (AssignOp -> MODEQUAL .)
    IDENTIFIER      reduce using rule 183 (AssignOp -> MODEQUAL .)
    INT_LIT         reduce using rule 183 (AssignOp -> MODEQUAL .)
    FLOAT_LIT       reduce using rule 183 (AssignOp -> MODEQUAL .)
    IMAGINARY_LIT   reduce using rule 183 (AssignOp -> MODEQUAL .)
    STRING_LIT      reduce using rule 183 (AssignOp -> MODEQUAL .)


state 323

    (186) AssignOp -> XOREQUAL .

    NOT             reduce using rule 186 (AssignOp -> XOREQUAL .)
    PLUS            reduce using rule 186 (AssignOp -> XOREQUAL .)
    MINUS           reduce using rule 186 (AssignOp -> XOREQUAL .)
    MULTIPLY        reduce using rule 186 (AssignOp -> XOREQUAL .)
    AND             reduce using rule 186 (AssignOp -> XOREQUAL .)
    LPAREN          reduce using rule 186 (AssignOp -> XOREQUAL .)
    TYPECAST        reduce using rule 186 (AssignOp -> XOREQUAL .)
    IDENTIFIER      reduce using rule 186 (AssignOp -> XOREQUAL .)
    INT_LIT         reduce using rule 186 (AssignOp -> XOREQUAL .)
    FLOAT_LIT       reduce using rule 186 (AssignOp -> XOREQUAL .)
    IMAGINARY_LIT   reduce using rule 186 (AssignOp -> XOREQUAL .)
    STRING_LIT      reduce using rule 186 (AssignOp -> XOREQUAL .)


state 324

    (190) AssignOp -> EQUALS .

    NOT             reduce using rule 190 (AssignOp -> EQUALS .)
    PLUS            reduce using rule 190 (AssignOp -> EQUALS .)
    MINUS           reduce using rule 190 (AssignOp -> EQUALS .)
    MULTIPLY        reduce using rule 190 (AssignOp -> EQUALS .)
    AND             reduce using rule 190 (AssignOp -> EQUALS .)
    LPAREN          reduce using rule 190 (AssignOp -> EQUALS .)
    TYPECAST        reduce using rule 190 (AssignOp -> EQUALS .)
    IDENTIFIER      reduce using rule 190 (AssignOp -> EQUALS .)
    INT_LIT         reduce using rule 190 (AssignOp -> EQUALS .)
    FLOAT_LIT       reduce using rule 190 (AssignOp -> EQUALS .)
    IMAGINARY_LIT   reduce using rule 190 (AssignOp -> EQUALS .)
    STRING_LIT      reduce using rule 190 (AssignOp -> EQUALS .)


state 325

    (179) AssignOp -> PLUSEQUAL .

    NOT             reduce using rule 179 (AssignOp -> PLUSEQUAL .)
    PLUS            reduce using rule 179 (AssignOp -> PLUSEQUAL .)
    MINUS           reduce using rule 179 (AssignOp -> PLUSEQUAL .)
    MULTIPLY        reduce using rule 179 (AssignOp -> PLUSEQUAL .)
    AND             reduce using rule 179 (AssignOp -> PLUSEQUAL .)
    LPAREN          reduce using rule 179 (AssignOp -> PLUSEQUAL .)
    TYPECAST        reduce using rule 179 (AssignOp -> PLUSEQUAL .)
    IDENTIFIER      reduce using rule 179 (AssignOp -> PLUSEQUAL .)
    INT_LIT         reduce using rule 179 (AssignOp -> PLUSEQUAL .)
    FLOAT_LIT       reduce using rule 179 (AssignOp -> PLUSEQUAL .)
    IMAGINARY_LIT   reduce using rule 179 (AssignOp -> PLUSEQUAL .)
    STRING_LIT      reduce using rule 179 (AssignOp -> PLUSEQUAL .)


state 326

    (187) AssignOp -> ANDXOR_EQUAL .

    NOT             reduce using rule 187 (AssignOp -> ANDXOR_EQUAL .)
    PLUS            reduce using rule 187 (AssignOp -> ANDXOR_EQUAL .)
    MINUS           reduce using rule 187 (AssignOp -> ANDXOR_EQUAL .)
    MULTIPLY        reduce using rule 187 (AssignOp -> ANDXOR_EQUAL .)
    AND             reduce using rule 187 (AssignOp -> ANDXOR_EQUAL .)
    LPAREN          reduce using rule 187 (AssignOp -> ANDXOR_EQUAL .)
    TYPECAST        reduce using rule 187 (AssignOp -> ANDXOR_EQUAL .)
    IDENTIFIER      reduce using rule 187 (AssignOp -> ANDXOR_EQUAL .)
    INT_LIT         reduce using rule 187 (AssignOp -> ANDXOR_EQUAL .)
    FLOAT_LIT       reduce using rule 187 (AssignOp -> ANDXOR_EQUAL .)
    IMAGINARY_LIT   reduce using rule 187 (AssignOp -> ANDXOR_EQUAL .)
    STRING_LIT      reduce using rule 187 (AssignOp -> ANDXOR_EQUAL .)


state 327

    (177) Assignment -> ExpressionList assign_op . ExpressionList
    (60) ExpressionList -> . Expression ExpressionRep
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Conversion                     shift and go to state 115
    ExpressionList                 shift and go to state 353
    C                              shift and go to state 123
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    Literal                        shift and go to state 132
    Expression                     shift and go to state 133

state 328

    (184) AssignOp -> ANDEQUAL .

    NOT             reduce using rule 184 (AssignOp -> ANDEQUAL .)
    PLUS            reduce using rule 184 (AssignOp -> ANDEQUAL .)
    MINUS           reduce using rule 184 (AssignOp -> ANDEQUAL .)
    MULTIPLY        reduce using rule 184 (AssignOp -> ANDEQUAL .)
    AND             reduce using rule 184 (AssignOp -> ANDEQUAL .)
    LPAREN          reduce using rule 184 (AssignOp -> ANDEQUAL .)
    TYPECAST        reduce using rule 184 (AssignOp -> ANDEQUAL .)
    IDENTIFIER      reduce using rule 184 (AssignOp -> ANDEQUAL .)
    INT_LIT         reduce using rule 184 (AssignOp -> ANDEQUAL .)
    FLOAT_LIT       reduce using rule 184 (AssignOp -> ANDEQUAL .)
    IMAGINARY_LIT   reduce using rule 184 (AssignOp -> ANDEQUAL .)
    STRING_LIT      reduce using rule 184 (AssignOp -> ANDEQUAL .)


state 329

    (185) AssignOp -> OREQUAL .

    NOT             reduce using rule 185 (AssignOp -> OREQUAL .)
    PLUS            reduce using rule 185 (AssignOp -> OREQUAL .)
    MINUS           reduce using rule 185 (AssignOp -> OREQUAL .)
    MULTIPLY        reduce using rule 185 (AssignOp -> OREQUAL .)
    AND             reduce using rule 185 (AssignOp -> OREQUAL .)
    LPAREN          reduce using rule 185 (AssignOp -> OREQUAL .)
    TYPECAST        reduce using rule 185 (AssignOp -> OREQUAL .)
    IDENTIFIER      reduce using rule 185 (AssignOp -> OREQUAL .)
    INT_LIT         reduce using rule 185 (AssignOp -> OREQUAL .)
    FLOAT_LIT       reduce using rule 185 (AssignOp -> OREQUAL .)
    IMAGINARY_LIT   reduce using rule 185 (AssignOp -> OREQUAL .)
    STRING_LIT      reduce using rule 185 (AssignOp -> OREQUAL .)


state 330

    (181) AssignOp -> TIMESEQUAL .

    NOT             reduce using rule 181 (AssignOp -> TIMESEQUAL .)
    PLUS            reduce using rule 181 (AssignOp -> TIMESEQUAL .)
    MINUS           reduce using rule 181 (AssignOp -> TIMESEQUAL .)
    MULTIPLY        reduce using rule 181 (AssignOp -> TIMESEQUAL .)
    AND             reduce using rule 181 (AssignOp -> TIMESEQUAL .)
    LPAREN          reduce using rule 181 (AssignOp -> TIMESEQUAL .)
    TYPECAST        reduce using rule 181 (AssignOp -> TIMESEQUAL .)
    IDENTIFIER      reduce using rule 181 (AssignOp -> TIMESEQUAL .)
    INT_LIT         reduce using rule 181 (AssignOp -> TIMESEQUAL .)
    FLOAT_LIT       reduce using rule 181 (AssignOp -> TIMESEQUAL .)
    IMAGINARY_LIT   reduce using rule 181 (AssignOp -> TIMESEQUAL .)
    STRING_LIT      reduce using rule 181 (AssignOp -> TIMESEQUAL .)


state 331

    (182) AssignOp -> DIVIDE_EQUAL .

    NOT             reduce using rule 182 (AssignOp -> DIVIDE_EQUAL .)
    PLUS            reduce using rule 182 (AssignOp -> DIVIDE_EQUAL .)
    MINUS           reduce using rule 182 (AssignOp -> DIVIDE_EQUAL .)
    MULTIPLY        reduce using rule 182 (AssignOp -> DIVIDE_EQUAL .)
    AND             reduce using rule 182 (AssignOp -> DIVIDE_EQUAL .)
    LPAREN          reduce using rule 182 (AssignOp -> DIVIDE_EQUAL .)
    TYPECAST        reduce using rule 182 (AssignOp -> DIVIDE_EQUAL .)
    IDENTIFIER      reduce using rule 182 (AssignOp -> DIVIDE_EQUAL .)
    INT_LIT         reduce using rule 182 (AssignOp -> DIVIDE_EQUAL .)
    FLOAT_LIT       reduce using rule 182 (AssignOp -> DIVIDE_EQUAL .)
    IMAGINARY_LIT   reduce using rule 182 (AssignOp -> DIVIDE_EQUAL .)
    STRING_LIT      reduce using rule 182 (AssignOp -> DIVIDE_EQUAL .)


state 332

    (175) IncDecStmt -> Expression INCREMENT .

    SEMICOLON       reduce using rule 175 (IncDecStmt -> Expression INCREMENT .)
    LCURL           reduce using rule 175 (IncDecStmt -> Expression INCREMENT .)


state 333

    (176) IncDecStmt -> Expression DECREMENT .

    SEMICOLON       reduce using rule 176 (IncDecStmt -> Expression DECREMENT .)
    LCURL           reduce using rule 176 (IncDecStmt -> Expression DECREMENT .)


state 334

    (215) BreakStmt -> BREAK LabelOpt .

    SEMICOLON       reduce using rule 215 (BreakStmt -> BREAK LabelOpt .)


state 335

    (163) ScanStmt -> SCAN Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 163 (ScanStmt -> SCAN Expression .)
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191


state 336

    (151) Statement -> CreateScope IFSYM . Block EndScope_1
    (41) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 201

    Block                          shift and go to state 354

state 337

    (191) IfStmt -> IF Expression . CreateScope IFSYM Block EndScope_1 ElseOpt
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression
    (82) CreateScope -> .

    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191
    LCURL           reduce using rule 82 (CreateScope -> .)

    CreateScope                    shift and go to state 355

state 338

    (78) ExpressionListOpt -> EQUALS MALLOC LPAREN I INT_LIT RPAREN .

    SEMICOLON       reduce using rule 78 (ExpressionListOpt -> EQUALS MALLOC LPAREN I INT_LIT RPAREN .)


state 339

    (109) Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .

    DOT             reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSQUARE         reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LPAREN          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COMPARE_OR      reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COMPARE_AND     reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    EQEQ            reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    NOTEQUALS       reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LESSTHAN        reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    GREATERTHAN     reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LESSTHAN_EQUAL  reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    GREATERTHAN_EQUAL reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    OR              reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    XOR             reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    ANDXOR          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DIVIDE          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MODULO          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSHIFT          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSHIFT          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    PLUS            reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MINUS           reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MULTIPLY        reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    AND             reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COMMA           reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    SEMICOLON       reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RPAREN          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSQUARE         reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COLON           reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LCURL           reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    PLUSEQUAL       reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MINUSEQUAL      reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    TIMESEQUAL      reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DIVIDE_EQUAL    reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MODEQUAL        reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    ANDEQUAL        reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    OREQUAL         reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    XOREQUAL        reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    ANDXOR_EQUAL    reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSHIFT_EQUAL    reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSHIFT_EQUAL    reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    EQUALS          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    INCREMENT       reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DECREMENT       reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)


state 340

    (110) Slice -> LSQUARE ExpressionOpt COLON Expression COLON . Expression RSQUARE
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    C                              shift and go to state 123
    Expression                     shift and go to state 356

state 341

    (172) LabeledStmt -> Label COLON Statement .

    SEMICOLON       reduce using rule 172 (LabeledStmt -> Label COLON Statement .)


state 342

    (162) PrintStmt -> PRINT PS Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 162 (PrintStmt -> PRINT PS Expression .)
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191


state 343

    (161) PrintStmt -> PRINT PD Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 161 (PrintStmt -> PRINT PD Expression .)
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191


state 344

    (209) ForClause -> SimpleStmt . SEMICOLON ConditionOpt SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 357


state 345

    (206) ConditionBlockOpt -> Condition .

    LCURL           reduce using rule 206 (ConditionBlockOpt -> Condition .)


state 346

    (205) ConditionBlockOpt -> epsilon .
    (167) SimpleStmt -> epsilon .

    LCURL           reduce using rule 205 (ConditionBlockOpt -> epsilon .)
    SEMICOLON       reduce using rule 167 (SimpleStmt -> epsilon .)


state 347

    (204) ForStmt -> FOR CreateScope ConditionBlockOpt . Block EndScope_1
    (41) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 201

    Block                          shift and go to state 358

state 348

    (207) ConditionBlockOpt -> ForClause .

    LCURL           reduce using rule 207 (ConditionBlockOpt -> ForClause .)


state 349

    (208) Condition -> Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression
    (174) ExpressionStmt -> Expression .
    (175) IncDecStmt -> Expression . INCREMENT
    (176) IncDecStmt -> Expression . DECREMENT
    (60) ExpressionList -> Expression . ExpressionRep
    (61) ExpressionRep -> . ExpressionRep COMMA Expression
    (62) ExpressionRep -> . epsilon
    (236) epsilon -> .

    LCURL           reduce using rule 208 (Condition -> Expression .)
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191
    SEMICOLON       reduce using rule 174 (ExpressionStmt -> Expression .)
    INCREMENT       shift and go to state 332
    DECREMENT       shift and go to state 333
    COMMA           reduce using rule 236 (epsilon -> .)
    PLUSEQUAL       reduce using rule 236 (epsilon -> .)
    MINUSEQUAL      reduce using rule 236 (epsilon -> .)
    TIMESEQUAL      reduce using rule 236 (epsilon -> .)
    DIVIDE_EQUAL    reduce using rule 236 (epsilon -> .)
    MODEQUAL        reduce using rule 236 (epsilon -> .)
    ANDEQUAL        reduce using rule 236 (epsilon -> .)
    OREQUAL         reduce using rule 236 (epsilon -> .)
    XOREQUAL        reduce using rule 236 (epsilon -> .)
    ANDXOR_EQUAL    reduce using rule 236 (epsilon -> .)
    LSHIFT_EQUAL    reduce using rule 236 (epsilon -> .)
    RSHIFT_EQUAL    reduce using rule 236 (epsilon -> .)
    EQUALS          reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 189
    ExpressionRep                  shift and go to state 176

state 350

    (79) ShortVarDecl -> IDENTIFIER . SHORT_ASSIGNMENT Expression
    (100) OperandName -> IDENTIFIER .

    SHORT_ASSIGNMENT shift and go to state 317
    DOT             reduce using rule 100 (OperandName -> IDENTIFIER .)
    LSQUARE         reduce using rule 100 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 100 (OperandName -> IDENTIFIER .)
    INCREMENT       reduce using rule 100 (OperandName -> IDENTIFIER .)
    DECREMENT       reduce using rule 100 (OperandName -> IDENTIFIER .)
    COMPARE_OR      reduce using rule 100 (OperandName -> IDENTIFIER .)
    COMPARE_AND     reduce using rule 100 (OperandName -> IDENTIFIER .)
    EQEQ            reduce using rule 100 (OperandName -> IDENTIFIER .)
    NOTEQUALS       reduce using rule 100 (OperandName -> IDENTIFIER .)
    LESSTHAN        reduce using rule 100 (OperandName -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 100 (OperandName -> IDENTIFIER .)
    LESSTHAN_EQUAL  reduce using rule 100 (OperandName -> IDENTIFIER .)
    GREATERTHAN_EQUAL reduce using rule 100 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 100 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 100 (OperandName -> IDENTIFIER .)
    ANDXOR          reduce using rule 100 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 100 (OperandName -> IDENTIFIER .)
    MODULO          reduce using rule 100 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 100 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 100 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 100 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 100 (OperandName -> IDENTIFIER .)
    MULTIPLY        reduce using rule 100 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 100 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 100 (OperandName -> IDENTIFIER .)
    LCURL           reduce using rule 100 (OperandName -> IDENTIFIER .)
    PLUSEQUAL       reduce using rule 100 (OperandName -> IDENTIFIER .)
    MINUSEQUAL      reduce using rule 100 (OperandName -> IDENTIFIER .)
    TIMESEQUAL      reduce using rule 100 (OperandName -> IDENTIFIER .)
    DIVIDE_EQUAL    reduce using rule 100 (OperandName -> IDENTIFIER .)
    MODEQUAL        reduce using rule 100 (OperandName -> IDENTIFIER .)
    ANDEQUAL        reduce using rule 100 (OperandName -> IDENTIFIER .)
    OREQUAL         reduce using rule 100 (OperandName -> IDENTIFIER .)
    XOREQUAL        reduce using rule 100 (OperandName -> IDENTIFIER .)
    ANDXOR_EQUAL    reduce using rule 100 (OperandName -> IDENTIFIER .)
    LSHIFT_EQUAL    reduce using rule 100 (OperandName -> IDENTIFIER .)
    RSHIFT_EQUAL    reduce using rule 100 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 100 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 100 (OperandName -> IDENTIFIER .)


state 351

    (197) ExprSwitchStmt -> SWITCH Expression CreateScope . LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1

    LCURL           shift and go to state 359


state 352

    (79) ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    LCURL           reduce using rule 79 (ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression .)
    SEMICOLON       reduce using rule 79 (ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression .)
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191


state 353

    (177) Assignment -> ExpressionList assign_op ExpressionList .

    LCURL           reduce using rule 177 (Assignment -> ExpressionList assign_op ExpressionList .)
    SEMICOLON       reduce using rule 177 (Assignment -> ExpressionList assign_op ExpressionList .)


state 354

    (151) Statement -> CreateScope IFSYM Block . EndScope_1
    (160) EndScope_1 -> .

    SEMICOLON       reduce using rule 160 (EndScope_1 -> .)

    EndScope_1                     shift and go to state 360

state 355

    (191) IfStmt -> IF Expression CreateScope . IFSYM Block EndScope_1 ElseOpt
    (192) IFSYM -> .

    LCURL           reduce using rule 192 (IFSYM -> .)

    IFSYM                          shift and go to state 361

state 356

    (110) Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression . RSQUARE
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    RSQUARE         shift and go to state 362
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191


state 357

    (209) ForClause -> SimpleStmt SEMICOLON . ConditionOpt SEMICOLON SimpleStmt
    (210) ConditionOpt -> . epsilon
    (211) ConditionOpt -> . Condition
    (236) epsilon -> .
    (208) Condition -> . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    SEMICOLON       reduce using rule 236 (epsilon -> .)
    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    Conversion                     shift and go to state 115
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    epsilon                        shift and go to state 364
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    ConditionOpt                   shift and go to state 365
    C                              shift and go to state 123
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    Literal                        shift and go to state 132
    Expression                     shift and go to state 366
    Condition                      shift and go to state 363

state 358

    (204) ForStmt -> FOR CreateScope ConditionBlockOpt Block . EndScope_1
    (160) EndScope_1 -> .

    SEMICOLON       reduce using rule 160 (EndScope_1 -> .)

    EndScope_1                     shift and go to state 367

state 359

    (197) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL . StartSwitch ExprCaseClauseList RCURL EndScope_1
    (198) StartSwitch -> .

    RCURL           reduce using rule 198 (StartSwitch -> .)
    CASE            reduce using rule 198 (StartSwitch -> .)
    DEFAULT         reduce using rule 198 (StartSwitch -> .)

    StartSwitch                    shift and go to state 368

state 360

    (151) Statement -> CreateScope IFSYM Block EndScope_1 .

    SEMICOLON       reduce using rule 151 (Statement -> CreateScope IFSYM Block EndScope_1 .)


state 361

    (191) IfStmt -> IF Expression CreateScope IFSYM . Block EndScope_1 ElseOpt
    (41) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 201

    Block                          shift and go to state 369

state 362

    (110) Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .

    DOT             reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSQUARE         reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LPAREN          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COMPARE_OR      reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COMPARE_AND     reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    EQEQ            reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    NOTEQUALS       reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LESSTHAN        reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    GREATERTHAN     reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LESSTHAN_EQUAL  reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    GREATERTHAN_EQUAL reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    OR              reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    XOR             reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    ANDXOR          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DIVIDE          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MODULO          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSHIFT          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSHIFT          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    PLUS            reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MINUS           reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MULTIPLY        reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    AND             reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COMMA           reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    SEMICOLON       reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RPAREN          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSQUARE         reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COLON           reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LCURL           reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    PLUSEQUAL       reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MINUSEQUAL      reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    TIMESEQUAL      reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DIVIDE_EQUAL    reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MODEQUAL        reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    ANDEQUAL        reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    OREQUAL         reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    XOREQUAL        reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    ANDXOR_EQUAL    reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSHIFT_EQUAL    reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSHIFT_EQUAL    reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    EQUALS          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    INCREMENT       reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DECREMENT       reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)


state 363

    (211) ConditionOpt -> Condition .

    SEMICOLON       reduce using rule 211 (ConditionOpt -> Condition .)


state 364

    (210) ConditionOpt -> epsilon .

    SEMICOLON       reduce using rule 210 (ConditionOpt -> epsilon .)


state 365

    (209) ForClause -> SimpleStmt SEMICOLON ConditionOpt . SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 370


state 366

    (208) Condition -> Expression .
    (115) Expression -> Expression . COMPARE_OR Expression
    (116) Expression -> Expression . COMPARE_AND Expression
    (117) Expression -> Expression . EQEQ Expression
    (118) Expression -> Expression . NOTEQUALS Expression
    (119) Expression -> Expression . LESSTHAN Expression
    (120) Expression -> Expression . GREATERTHAN Expression
    (121) Expression -> Expression . LESSTHAN_EQUAL Expression
    (122) Expression -> Expression . GREATERTHAN_EQUAL Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . ANDXOR Expression
    (126) Expression -> Expression . DIVIDE Expression
    (127) Expression -> Expression . MODULO Expression
    (128) Expression -> Expression . LSHIFT Expression
    (129) Expression -> Expression . RSHIFT Expression
    (130) Expression -> Expression . PLUS Expression
    (131) Expression -> Expression . MINUS Expression
    (132) Expression -> Expression . MULTIPLY Expression
    (133) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 208 (Condition -> Expression .)
    COMPARE_OR      shift and go to state 178
    COMPARE_AND     shift and go to state 193
    EQEQ            shift and go to state 179
    NOTEQUALS       shift and go to state 175
    LESSTHAN        shift and go to state 180
    GREATERTHAN     shift and go to state 190
    LESSTHAN_EQUAL  shift and go to state 192
    GREATERTHAN_EQUAL shift and go to state 185
    OR              shift and go to state 194
    XOR             shift and go to state 187
    ANDXOR          shift and go to state 174
    DIVIDE          shift and go to state 188
    MODULO          shift and go to state 183
    LSHIFT          shift and go to state 181
    RSHIFT          shift and go to state 177
    PLUS            shift and go to state 186
    MINUS           shift and go to state 184
    MULTIPLY        shift and go to state 182
    AND             shift and go to state 191


state 367

    (204) ForStmt -> FOR CreateScope ConditionBlockOpt Block EndScope_1 .

    SEMICOLON       reduce using rule 204 (ForStmt -> FOR CreateScope ConditionBlockOpt Block EndScope_1 .)


state 368

    (197) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch . ExprCaseClauseList RCURL EndScope_1
    (199) ExprCaseClauseList -> . epsilon
    (200) ExprCaseClauseList -> . ExprCaseClauseList ExprCaseClause
    (236) epsilon -> .

    RCURL           reduce using rule 236 (epsilon -> .)
    CASE            reduce using rule 236 (epsilon -> .)
    DEFAULT         reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 371
    ExprCaseClauseList             shift and go to state 372

state 369

    (191) IfStmt -> IF Expression CreateScope IFSYM Block . EndScope_1 ElseOpt
    (160) EndScope_1 -> .

    ELSE            reduce using rule 160 (EndScope_1 -> .)
    SEMICOLON       reduce using rule 160 (EndScope_1 -> .)

    EndScope_1                     shift and go to state 373

state 370

    (209) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON . SimpleStmt
    (167) SimpleStmt -> . epsilon
    (168) SimpleStmt -> . ExpressionStmt
    (169) SimpleStmt -> . IncDecStmt
    (170) SimpleStmt -> . Assignment
    (171) SimpleStmt -> . ShortVarDecl
    (236) epsilon -> .
    (174) ExpressionStmt -> . Expression
    (175) IncDecStmt -> . Expression INCREMENT
    (176) IncDecStmt -> . Expression DECREMENT
    (177) Assignment -> . ExpressionList assign_op ExpressionList
    (79) ShortVarDecl -> . IDENTIFIER SHORT_ASSIGNMENT Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (60) ExpressionList -> . Expression ExpressionRep
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    LCURL           reduce using rule 236 (epsilon -> .)
    IDENTIFIER      shift and go to state 350
    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    UnaryOp                        shift and go to state 114
    S                              shift and go to state 128
    PrimaryExpr                    shift and go to state 127
    Conversion                     shift and go to state 115
    SimpleStmt                     shift and go to state 374
    ExpressionStmt                 shift and go to state 255
    Operand                        shift and go to state 130
    OperandName                    shift and go to state 118
    Assignment                     shift and go to state 277
    IncDecStmt                     shift and go to state 262
    C                              shift and go to state 123
    F                              shift and go to state 124
    I                              shift and go to state 125
    epsilon                        shift and go to state 281
    UnaryExpr                      shift and go to state 126
    ExpressionList                 shift and go to state 282
    Expression                     shift and go to state 283
    ShortVarDecl                   shift and go to state 289
    Literal                        shift and go to state 132
    BasicLit                       shift and go to state 119

state 371

    (199) ExprCaseClauseList -> epsilon .

    RCURL           reduce using rule 199 (ExprCaseClauseList -> epsilon .)
    CASE            reduce using rule 199 (ExprCaseClauseList -> epsilon .)
    DEFAULT         reduce using rule 199 (ExprCaseClauseList -> epsilon .)


state 372

    (197) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseList . RCURL EndScope_1
    (200) ExprCaseClauseList -> ExprCaseClauseList . ExprCaseClause
    (201) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (202) ExprSwitchCase -> . CASE ExpressionList
    (203) ExprSwitchCase -> . DEFAULT

    RCURL           shift and go to state 378
    CASE            shift and go to state 375
    DEFAULT         shift and go to state 377

    ExprSwitchCase                 shift and go to state 376
    ExprCaseClause                 shift and go to state 379

state 373

    (191) IfStmt -> IF Expression CreateScope IFSYM Block EndScope_1 . ElseOpt
    (193) ElseOpt -> . ELSE IfStmt
    (194) ElseOpt -> . ELSE CreateScope IFSYM Block EndScope_1
    (195) ElseOpt -> . epsilon
    (236) epsilon -> .

    ELSE            shift and go to state 381
    SEMICOLON       reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 380
    ElseOpt                        shift and go to state 382

state 374

    (209) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .

    LCURL           reduce using rule 209 (ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .)


state 375

    (202) ExprSwitchCase -> CASE . ExpressionList
    (60) ExpressionList -> . Expression ExpressionRep
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression COMPARE_OR Expression
    (116) Expression -> . Expression COMPARE_AND Expression
    (117) Expression -> . Expression EQEQ Expression
    (118) Expression -> . Expression NOTEQUALS Expression
    (119) Expression -> . Expression LESSTHAN Expression
    (120) Expression -> . Expression GREATERTHAN Expression
    (121) Expression -> . Expression LESSTHAN_EQUAL Expression
    (122) Expression -> . Expression GREATERTHAN_EQUAL Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression ANDXOR Expression
    (126) Expression -> . Expression DIVIDE Expression
    (127) Expression -> . Expression MODULO Expression
    (128) Expression -> . Expression LSHIFT Expression
    (129) Expression -> . Expression RSHIFT Expression
    (130) Expression -> . Expression PLUS Expression
    (131) Expression -> . Expression MINUS Expression
    (132) Expression -> . Expression MULTIPLY Expression
    (133) Expression -> . Expression AND Expression
    (136) UnaryExpr -> . PrimaryExpr
    (137) UnaryExpr -> . UnaryOp UnaryExpr
    (138) UnaryExpr -> . NOT UnaryExpr
    (102) PrimaryExpr -> . Operand
    (103) PrimaryExpr -> . PrimaryExpr DOT IDENTIFIER
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (139) UnaryOp -> . PLUS
    (140) UnaryOp -> . MINUS
    (141) UnaryOp -> . MULTIPLY
    (142) UnaryOp -> . AND
    (88) Operand -> . Literal
    (89) Operand -> . OperandName
    (90) Operand -> . LPAREN Expression RPAREN
    (143) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (91) Literal -> . BasicLit
    (100) OperandName -> . IDENTIFIER
    (92) BasicLit -> . I INT_LIT
    (93) BasicLit -> . F FLOAT_LIT
    (94) BasicLit -> . C IMAGINARY_LIT
    (95) BasicLit -> . S STRING_LIT
    (96) I -> .
    (97) F -> .
    (98) C -> .
    (99) S -> .

    NOT             shift and go to state 120
    PLUS            shift and go to state 121
    MINUS           shift and go to state 117
    MULTIPLY        shift and go to state 116
    AND             shift and go to state 134
    LPAREN          shift and go to state 131
    TYPECAST        shift and go to state 135
    IDENTIFIER      shift and go to state 122
    INT_LIT         reduce using rule 96 (I -> .)
    FLOAT_LIT       reduce using rule 97 (F -> .)
    IMAGINARY_LIT   reduce using rule 98 (C -> .)
    STRING_LIT      reduce using rule 99 (S -> .)

    S                              shift and go to state 128
    OperandName                    shift and go to state 118
    UnaryOp                        shift and go to state 114
    I                              shift and go to state 125
    F                              shift and go to state 124
    UnaryExpr                      shift and go to state 126
    Operand                        shift and go to state 130
    Conversion                     shift and go to state 115
    ExpressionList                 shift and go to state 383
    C                              shift and go to state 123
    BasicLit                       shift and go to state 119
    PrimaryExpr                    shift and go to state 127
    Literal                        shift and go to state 132
    Expression                     shift and go to state 133

state 376

    (201) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 384


state 377

    (203) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 203 (ExprSwitchCase -> DEFAULT .)


state 378

    (197) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseList RCURL . EndScope_1
    (160) EndScope_1 -> .

    SEMICOLON       reduce using rule 160 (EndScope_1 -> .)

    EndScope_1                     shift and go to state 385

state 379

    (200) ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .

    RCURL           reduce using rule 200 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)
    CASE            reduce using rule 200 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)
    DEFAULT         reduce using rule 200 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)


state 380

    (195) ElseOpt -> epsilon .

    SEMICOLON       reduce using rule 195 (ElseOpt -> epsilon .)


state 381

    (193) ElseOpt -> ELSE . IfStmt
    (194) ElseOpt -> ELSE . CreateScope IFSYM Block EndScope_1
    (191) IfStmt -> . IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt
    (82) CreateScope -> .

    IF              shift and go to state 290
    LCURL           reduce using rule 82 (CreateScope -> .)

    CreateScope                    shift and go to state 386
    IfStmt                         shift and go to state 387

state 382

    (191) IfStmt -> IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt .

    SEMICOLON       reduce using rule 191 (IfStmt -> IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt .)


state 383

    (202) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 202 (ExprSwitchCase -> CASE ExpressionList .)


state 384

    (201) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (42) StatementList -> . StatementRep
    (43) StatementRep -> . StatementRep Statement SEMICOLON
    (44) StatementRep -> . epsilon
    (236) epsilon -> .

    RETURN          reduce using rule 236 (epsilon -> .)
    BREAK           reduce using rule 236 (epsilon -> .)
    CONTINUE        reduce using rule 236 (epsilon -> .)
    GOTO            reduce using rule 236 (epsilon -> .)
    IF              reduce using rule 236 (epsilon -> .)
    FOR             reduce using rule 236 (epsilon -> .)
    DEFER           reduce using rule 236 (epsilon -> .)
    FALLTHROUGH     reduce using rule 236 (epsilon -> .)
    GO              reduce using rule 236 (epsilon -> .)
    PRINT           reduce using rule 236 (epsilon -> .)
    SCAN            reduce using rule 236 (epsilon -> .)
    CONST           reduce using rule 236 (epsilon -> .)
    TYPE            reduce using rule 236 (epsilon -> .)
    VAR             reduce using rule 236 (epsilon -> .)
    IDENTIFIER      reduce using rule 236 (epsilon -> .)
    SWITCH          reduce using rule 236 (epsilon -> .)
    NOT             reduce using rule 236 (epsilon -> .)
    PLUS            reduce using rule 236 (epsilon -> .)
    MINUS           reduce using rule 236 (epsilon -> .)
    MULTIPLY        reduce using rule 236 (epsilon -> .)
    AND             reduce using rule 236 (epsilon -> .)
    LPAREN          reduce using rule 236 (epsilon -> .)
    TYPECAST        reduce using rule 236 (epsilon -> .)
    SEMICOLON       reduce using rule 236 (epsilon -> .)
    LCURL           reduce using rule 236 (epsilon -> .)
    INT_LIT         reduce using rule 236 (epsilon -> .)
    FLOAT_LIT       reduce using rule 236 (epsilon -> .)
    IMAGINARY_LIT   reduce using rule 236 (epsilon -> .)
    STRING_LIT      reduce using rule 236 (epsilon -> .)
    RCURL           reduce using rule 236 (epsilon -> .)
    CASE            reduce using rule 236 (epsilon -> .)
    DEFAULT         reduce using rule 236 (epsilon -> .)

    epsilon                        shift and go to state 240
    StatementRep                   shift and go to state 239
    StatementList                  shift and go to state 388

state 385

    (197) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1 .

    SEMICOLON       reduce using rule 197 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1 .)


state 386

    (194) ElseOpt -> ELSE CreateScope . IFSYM Block EndScope_1
    (192) IFSYM -> .

    LCURL           reduce using rule 192 (IFSYM -> .)

    IFSYM                          shift and go to state 389

state 387

    (193) ElseOpt -> ELSE IfStmt .

    SEMICOLON       reduce using rule 193 (ElseOpt -> ELSE IfStmt .)


state 388

    (201) ExprCaseClause -> ExprSwitchCase COLON StatementList .

    RCURL           reduce using rule 201 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 201 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 201 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)


state 389

    (194) ElseOpt -> ELSE CreateScope IFSYM . Block EndScope_1
    (41) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 201

    Block                          shift and go to state 390

state 390

    (194) ElseOpt -> ELSE CreateScope IFSYM Block . EndScope_1
    (160) EndScope_1 -> .

    SEMICOLON       reduce using rule 160 (EndScope_1 -> .)

    EndScope_1                     shift and go to state 391

state 391

    (194) ElseOpt -> ELSE CreateScope IFSYM Block EndScope_1 .

    SEMICOLON       reduce using rule 194 (ElseOpt -> ELSE CreateScope IFSYM Block EndScope_1 .)

