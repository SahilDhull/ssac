
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDENTIFIERrightEQUALSNOTleftINT_LITleftFLOAT_LITleftSTRING_LITleftCOMPARE_ORleftCOMPARE_ANDleftEQEQNOTEQUALSleftORleftXORleftANDANDXORleftLESSTHANGREATERTHANLESSTHAN_EQUALGREATERTHAN_EQUALleftPLUSMINUSleftLSHIFTRSHIFTleftMULTIPLYDIVIDEMODULOleftLPARENRPARENAND ANDEQUAL ANDXOR ANDXOR_EQUAL BOOL BOOL_LIT BREAK CASE COLON COMMA COMPARE_AND COMPARE_OR CONST CONTINUE DECREMENT DEFAULT DEFER DIVIDE DIVIDE_EQUAL DOT ELSE EQEQ EQUALS FALLTHROUGH FLOAT FLOAT_LIT FOR FUNC GO GOTO GREATERTHAN GREATERTHAN_EQUAL IDENTIFIER IF IMAGINARY_LIT IMPORT INCREMENT INT INT_LIT LCURL LESSTHAN LESSTHAN_EQUAL LPAREN LSHIFT LSHIFT_EQUAL LSQUARE MALLOC MAP MINUS MINUSEQUAL MODEQUAL MODULO MULTIPLY NOT NOTEQUALS NULL OR OREQUAL PACKAGE PLUS PLUSEQUAL PRINT RCURL RETURN RPAREN RSHIFT RSHIFT_EQUAL RSQUARE SCAN SEMICOLON SHORT_ASSIGNMENT STRING STRING_LIT STRUCT SWITCH TIMESEQUAL TYPE TYPECAST VAR XOR XOREQUALstart : SourceFileType : TypeName\n\t\t\t\t\t\t| TypeLitTypeName : TypeToken\n\t\t\t\t\t\t\t\t| QualifiedIdentTypeToken : INT\n\t\t\t\t\t\t\t\t | FLOAT\n\t\t\t\t\t\t\t\t | BOOL\n\t\t\t\t\t\t\t\t | STRING\n\t\t\t\t\t\t\t\t | TYPE IDENTIFIERTypeLit : ArrayType\n\t\t\t\t\t\t\t | ST StructType\n\t\t\t\t\t\t\t | PointerType\n\t\t\t\t\t\t\t | MapType\n\t\t\t\t\t\t\t | SliceTypeST : SliceType : LSQUARE RSQUARE ElementTypeMapType : MAP LSQUARE KeyType RSQUARE ElementType KeyType : TypeArrayType : LSQUARE ArrayLength RSQUARE ElementType ArrayLength : I INT_LIT  ElementType : Type StructType : FuncScope STRUCT LCURL FieldDeclRep RCURL EndScopeFuncScope :  FieldDeclRep : FieldDeclRep FieldDecl Semi\n\t\t\t\t\t\t\t\t\t| epsilon  FieldDecl : IdentifierList TypePointerType : MULTIPLY BaseTypeBaseType : TypeSignature : Parameters ResultOptResultOpt : Result\n\t\t\t\t\t\t\t\t | epsilonResult : Parameters\n\t\t\t\t\t\t\t| TypeParameters : LPAREN ParametersList RPAREN\n\t\t\t\t\t\t\t\t\t| LPAREN RPARENParametersList : ParameterDecl\n\t\t\t\t\t\t\t\t\t\t\t| ParametersList COMMA ParameterDeclParameterDecl : IdentifierList Type\n\t\t\t\t\t\t\t\t\t\t | TypeBlock : LCURL StatementList RCURLStatementList : StatementRepStatementRep : StatementRep Statement Semi\n\t\t\t\t\t\t\t\t\t\t| epsilonDeclaration : ConstDecl\n\t\t\t\t\t\t\t\t | TypeDecl\n\t\t\t\t\t\t\t\t | VarDeclTopLevelDecl : Declaration\n\t\t\t\t\t\t\t\t\t| FunctionDeclConstDecl : CONST ConstSpec\n\t\t\t\t\t\t\t\t | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec Semi\n\t\t\t\t\t\t\t\t\t\t| epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : Type EQUALS ExpressionListIdentifierList : IDENTIFIER \n\t\t\t\t\t\t\t\t\t\t\t| IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n\t\t\t\t\t\t\t\t\t\t | IDENTIFIER COMMA IDENTIFIERExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n\t\t\t\t\t\t\t\t\t\t | epsilonTypeDecl : TYPE TypeSpec\n\t\t\t\t\t\t\t\t| TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec Semi\n\t\t\t\t\t\t\t\t\t | epsilonTypeSpec : AliasDecl\n\t\t\t\t\t\t\t\t| TypeDefAliasDecl : IDENTIFIER EQUALS TypeTypeDef : IDENTIFIER TypeVarDecl : VAR VarSpec\n\t\t\t\t\t\t\t | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec Semi\n\t\t\t\t\t\t\t\t\t| epsilonVarSpec : IdentifierList Type ExpressionListOptExpressionListOpt : EQUALS ExpressionList\n\t\t\t\t\t\t\t\t\t\t\t\t | epsilon\n\t\t\t\t\t\t\t\t\t\t\t\t | EQUALS MALLOC LPAREN I INT_LIT RPAREN ShortVarDecl : IDENTIFIER SHORT_ASSIGNMENT Expression FunctionDecl : FUNC FunctionName CreateScope Function EndScope\n\t\t\t\t\t| FUNC FunctionName CreateScope Signature EndScopeCreateScope : EndScope : FunctionName : IDENTIFIERFunction : Signature RetTypeSet FunctionBodyRetTypeSet : FunctionBody : BlockOperand : Literal\n\t\t\t\t\t\t\t | OperandName\n\t\t\t\t\t\t\t | LPAREN Expression RPARENLiteral : BasicLitBasicLit : I INT_LIT\n              | F FLOAT_LIT\n              | C IMAGINARY_LIT\n              | B BOOL_LIT\n              | S STRING_LITB : I : F : C : S : OperandName : IDENTIFIERQualifiedIdent : IDENTIFIER DOT TypeNamePrimaryExpr : Operand\n                 | PrimaryExpr DOT IDENTIFIER\n                 | Conversion\n                 | PrimaryExpr LSQUARE Expression RSQUARE\n                 | PrimaryExpr Slice\n                 | PrimaryExpr TypeAssertion\n                 | PrimaryExpr LPAREN ExpressionListTypeOpt RPARENSlice : LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE\n\t\t\t\t\t\t | LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARETypeAssertion : DOT LPAREN Type RPARENExpressionListTypeOpt : ExpressionList\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t | epsilonExpression : UnaryExpr\n\t\t\t\t\t\t\t\t\t| Expression COMPARE_OR Expression\n\t\t\t\t\t\t\t\t\t| Expression COMPARE_AND Expression\n\t\t\t\t\t\t\t\t\t| Expression EQEQ Expression\n\t\t\t\t\t\t\t\t\t| Expression NOTEQUALS Expression\n\t\t\t\t\t\t\t\t\t| Expression LESSTHAN Expression\n\t\t\t\t\t\t\t\t\t| Expression GREATERTHAN Expression\n\t\t\t\t\t\t\t\t\t| Expression LESSTHAN_EQUAL Expression\n\t\t\t\t\t\t\t\t\t| Expression GREATERTHAN_EQUAL Expression\n\t\t\t\t\t\t\t\t\t| Expression OR Expression\n\t\t\t\t\t\t\t\t\t| Expression XOR Expression\n\t\t\t\t\t\t\t\t\t| Expression ANDXOR Expression\n\t\t\t\t\t\t\t\t\t| Expression DIVIDE Expression\n\t\t\t\t\t\t\t\t\t| Expression MODULO Expression\n\t\t\t\t\t\t\t\t\t| Expression LSHIFT Expression\n\t\t\t\t\t\t\t\t\t| Expression RSHIFT Expression\n\t\t\t\t\t\t\t\t\t| Expression PLUS Expression\n\t\t\t\t\t\t\t\t\t| Expression MINUS Expression\n\t\t\t\t\t\t\t\t\t| Expression MULTIPLY Expression\n\t\t\t\t\t\t\t\t\t| Expression AND ExpressionExpressionOpt : Expression\n\t\t\t\t\t\t\t\t\t\t | epsilonUnaryExpr : PrimaryExpr\n\t\t\t\t\t | UnaryOp UnaryExpr\n\t\t\t\t\t | NOT UnaryExpr\n\t\t\t\t\t | NULLUnaryOp : PLUS\n\t\t\t\t\t\t\t | MINUS\n\t\t\t\t\t\t\t | MULTIPLY\n\t\t\t\t\t\t\t | AND Conversion : TYPECAST Type LPAREN Expression RPARENStatement : Declaration\n\t\t\t\t\t\t\t | LabeledStmt\n\t\t\t\t\t\t\t | SimpleStmt\n\t\t\t\t\t\t\t | ReturnStmt\n\t\t\t\t\t\t\t | BreakStmt\n\t\t\t\t\t\t\t | ContinueStmt\n\t\t\t\t\t\t\t | GotoStmt\n\t\t\t\t\t\t\t | CreateScope IFSYM Block EndScope_1\n\t\t\t\t\t\t\t | IfStmt\n\t\t\t\t\t\t\t | SwitchStmt\n\t\t\t\t\t\t\t | ForStmt\n\t\t\t\t\t\t\t | DeferStmt\n\t\t\t\t\t\t\t | FallThroughStmt\n\t\t\t\t\t\t\t | GoStmt\n\t\t\t\t\t\t\t | PrintStmt\n\t\t\t\t\t\t\t | ScanStmtEndScope_1 : PrintStmt : PRINT ExpressionListScanStmt : SCAN ExpressionFallThroughStmt : FALLTHROUGHGoStmt : GO ExpressionDeferStmt : DEFER Expression SimpleStmt : epsilon\n\t\t\t\t\t\t\t\t | ExpressionStmt\n\t\t\t\t\t\t\t\t | IncDecStmt\n\t\t\t\t\t\t\t\t | Assignment\n\t\t\t\t\t\t\t\t | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : Expression INCREMENT\n\t\t\t\t\t\t\t\t | Expression DECREMENT  Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOp AssignOp : PLUSEQUAL\n\t\t\t\t\t\t\t | MINUSEQUAL\n\t\t\t\t\t\t\t | TIMESEQUAL\n\t\t\t\t\t\t\t | DIVIDE_EQUAL\n\t\t\t\t\t\t\t | MODEQUAL\n\t\t\t\t\t\t\t | ANDEQUAL\n\t\t\t\t\t\t\t | OREQUAL\n\t\t\t\t\t\t\t | XOREQUAL\n\t\t\t\t\t\t\t | ANDXOR_EQUAL\n\t\t\t\t\t\t\t | LSHIFT_EQUAL\n\t\t\t\t\t\t\t | RSHIFT_EQUAL\n\t\t\t\t\t\t\t | EQUALS  IfStmt : IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt IFSYM :  ElseOpt : ELSE IfStmt\n\t\t\t\t\t\t\t| ELSE CreateScope IFSYM Block EndScope_1\n\t\t\t\t\t\t\t| epsilon  SwitchStmt : ExprSwitchStmtExprSwitchStmt : SWITCH Expression CCreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1StartSwitch : ExprCaseClauseList : epsilon\n\t\t\t\t\t\t\t\t | ExprCaseClauseList ExprCaseClause\n\t\tExprCaseClause : ExprSwitchCase COLON StatementList ExprSwitchCase : CASE ExpressionList\n\t\t\t\t\t\t\t\t | DEFAULT \n\t\tForStmt : FOR CCreateScope ConditionBlockOpt Block EndScope_1CCreateScope : ConditionBlockOpt : epsilon\n\t\t\t\t\t\t | Condition\n\t\t\t\t\t\t | ForClauseCondition : Expression ForClause : SimpleStmt Semi ConditionOpt Semi SimpleStmtConditionOpt : epsilon\n\t\t\t\t\t| Condition ReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n\t\t\t\t\t\t | epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n\t\t\t\t| epsilon GotoStmt : GOTO Label SourceFile : PackageClause Semi ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n\t\t\t\t\t | ImportDeclRep ImportDecl SemiTopLevelDeclRep : TopLevelDeclRep TopLevelDecl Semi\n\t\t\t\t\t\t\t\t\t\t | epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n\t\t\t\t\t| IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec Semi\n\t\t\t\t\t\t| epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n\t\t\t\t\t\t\t\t\t\t\t\t| PackageName\n\t\t\t\t\t\t\t\t\t\t\t\t| epsilon ImportPath : STRING_LIT Semi : SEMICOLONepsilon : '
    
_lr_action_items = {'LSQUARE':([33,35,36,42,47,56,66,83,86,93,96,100,102,104,116,120,121,124,130,133,135,138,143,155,157,159,167,168,169,170,171,173,176,201,207,208,216,217,218,248,250,256,284,300,301,342,346,363,],[-57,65,-56,65,65,65,96,65,-58,65,65,-59,65,65,-106,-89,-91,-102,174,-104,-88,65,65,65,-36,-56,-94,-95,-93,-92,-108,-109,-96,65,65,-35,65,-105,-90,-110,-107,65,-102,-113,-146,-111,-102,-112,]),'ANDXOR':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,178,-139,-140,-94,-95,-93,-92,-108,-109,-96,178,178,-105,-90,-127,178,-131,178,178,-121,-130,-134,-129,-133,-124,-132,178,-128,-122,-135,-123,178,178,-110,-107,178,178,-102,178,178,-113,-146,178,178,178,178,178,-111,-102,178,178,178,-112,178,]),'DIVIDE':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,192,-139,-140,-94,-95,-93,-92,-108,-109,-96,192,192,-105,-90,192,192,192,192,192,192,192,-134,-129,192,192,192,192,-128,192,192,192,192,192,-110,-107,192,192,-102,192,192,-113,-146,192,192,192,192,192,-111,-102,192,192,192,-112,192,]),'CONST':([5,6,9,10,11,12,25,37,205,243,244,306,313,385,],[-239,-240,-224,-240,15,-227,-225,-226,-240,15,-44,-43,15,-240,]),'LPAREN':([5,14,15,22,24,38,39,55,57,58,60,62,63,64,67,68,71,72,74,76,89,90,91,97,99,102,107,115,116,117,119,120,121,122,123,124,130,133,134,135,137,139,140,141,157,162,167,168,169,170,171,172,173,174,175,176,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,205,208,217,218,221,239,240,243,244,248,249,250,255,258,264,270,273,277,282,284,289,294,300,301,303,306,313,315,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,342,343,346,358,363,371,376,385,],[-239,26,34,41,45,-84,-82,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,104,-29,-28,134,-12,-10,104,134,134,-106,-144,-143,-89,-91,134,-142,-102,172,-104,134,-88,-145,-103,-22,-17,-36,209,-94,-95,-93,-92,-108,134,-109,134,216,-96,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,239,-20,-240,-35,-105,-90,134,134,-18,134,-44,-110,134,-107,-83,134,134,134,134,-207,134,-102,134,134,-113,-146,-23,-43,134,134,134,-190,-180,-191,-182,-185,-188,-192,-181,-189,134,-186,-187,-183,-184,-111,134,-102,134,-112,134,134,-240,]),'SCAN':([5,205,243,244,306,313,385,],[-239,-240,289,-44,-43,289,-240,]),'DEFAULT':([5,243,244,306,360,369,372,373,380,385,389,],[-239,-42,-44,-43,-200,-240,-201,378,-202,-240,-203,]),'MODEQUAL':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,180,193,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,284,286,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,325,-240,-113,-146,-111,-102,-240,-112,]),'XOREQUAL':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,180,193,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,284,286,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,326,-240,-113,-146,-111,-102,-240,-112,]),'PRINT':([5,205,243,244,306,313,385,],[-239,-240,273,-44,-43,273,-240,]),'LESSTHAN':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,184,-139,-140,-94,-95,-93,-92,-108,-109,-96,184,184,-105,-90,184,184,-131,184,184,-121,-130,-134,-129,-133,-124,-132,184,-128,-122,184,-123,184,184,-110,-107,184,184,-102,184,184,-113,-146,184,184,184,184,184,-111,-102,184,184,184,-112,184,]),'COLON':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,174,176,180,193,213,214,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,271,284,299,300,301,342,363,377,378,384,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-240,-139,-140,-94,-95,-93,-92,-108,-109,-240,-96,-60,-62,249,-137,-136,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,313,-175,343,-113,-146,-111,-112,385,-205,-204,]),'NOTEQUALS':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,179,-139,-140,-94,-95,-93,-92,-108,-109,-96,179,179,-105,-90,-127,-120,-131,179,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,179,-125,-110,-107,179,179,-102,179,179,-113,-146,179,179,179,179,179,-111,-102,179,179,179,-112,179,]),'LSHIFT':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,185,-139,-140,-94,-95,-93,-92,-108,-109,-96,185,185,-105,-90,185,185,-131,185,185,185,-130,-134,-129,185,185,185,185,-128,185,185,185,185,185,-110,-107,185,185,-102,185,185,-113,-146,185,185,185,185,185,-111,-102,185,185,185,-112,185,]),'MULTIPLY':([5,33,35,36,42,47,56,83,86,91,93,96,100,102,104,107,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,137,138,143,155,157,159,165,166,167,168,169,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,201,205,207,208,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,243,244,248,249,250,252,253,256,258,264,270,273,277,282,284,287,289,294,299,300,301,305,306,307,313,315,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,338,340,342,343,346,351,353,357,358,363,367,371,376,385,],[-239,-57,56,-56,56,56,56,56,-58,117,56,56,-59,56,56,117,117,-106,-144,-141,-143,-89,-91,117,-142,-102,-116,-138,-104,117,-88,186,-145,56,56,56,-36,-56,-139,-140,-94,-95,-93,-92,-108,117,-109,117,-96,186,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,56,-240,56,-35,186,56,-105,-90,186,186,117,186,186,186,186,186,-134,-129,186,186,186,186,-128,186,186,186,186,186,117,117,-44,-110,117,-107,186,186,56,117,117,117,117,-207,117,-102,186,117,117,186,-113,-146,186,-43,186,117,117,186,117,-190,-180,-191,-182,-185,-188,-192,-181,-189,117,-186,-187,-183,-184,186,186,-111,117,-102,186,186,186,117,-112,186,117,117,-240,]),'RETURN':([5,205,243,244,306,313,385,],[-239,-240,270,-44,-43,270,-240,]),'NULL':([5,91,107,115,117,119,122,123,134,137,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,205,221,239,243,244,249,258,264,270,273,277,282,289,294,306,313,315,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,358,371,376,385,],[-239,118,118,118,-144,-143,118,-142,118,-145,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-240,118,118,118,-44,118,118,118,118,118,-207,118,118,118,-43,118,118,118,-190,-180,-191,-182,-185,-188,-192,-181,-189,118,-186,-187,-183,-184,118,118,118,118,-240,]),'MINUS':([5,91,107,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,137,165,166,167,168,169,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,205,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,243,244,248,249,250,252,253,258,264,270,273,277,282,284,287,289,294,299,300,301,305,306,307,313,315,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,338,340,342,343,346,351,353,357,358,363,367,371,376,385,],[-239,119,119,119,-106,-144,-141,-143,-89,-91,119,-142,-102,-116,-138,-104,119,-88,188,-145,-139,-140,-94,-95,-93,-92,-108,119,-109,119,-96,188,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-240,188,-105,-90,188,188,119,-131,188,188,188,-130,-134,-129,-133,188,-132,188,-128,188,188,188,188,188,119,119,-44,-110,119,-107,188,188,119,119,119,119,-207,119,-102,188,119,119,188,-113,-146,188,-43,188,119,119,188,119,-190,-180,-191,-182,-185,-188,-192,-181,-189,119,-186,-187,-183,-184,188,188,-111,119,-102,188,188,188,119,-112,188,119,119,-240,]),'DOT':([5,14,26,48,49,61,113,116,120,121,124,130,133,135,159,167,168,169,170,171,173,176,217,218,248,250,284,300,301,342,346,363,],[-239,31,-240,-233,31,92,-232,-106,-89,-91,-102,175,-104,-88,92,-94,-95,-93,-92,-108,-109,-96,-105,-90,-110,-107,-102,-113,-146,-111,-102,-112,]),'LCURL':([5,55,57,58,60,62,63,64,67,68,71,72,74,89,90,97,99,102,103,116,118,120,121,124,129,130,133,135,136,139,140,141,146,148,149,150,151,152,154,157,165,166,167,168,169,170,171,173,176,180,193,200,205,208,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,243,244,248,250,252,255,259,265,266,277,285,287,292,293,300,301,303,306,313,315,319,335,336,339,340,342,346,347,348,349,350,351,352,353,354,356,362,363,371,375,382,385,387,390,],[-239,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,-29,-28,-12,-10,-240,-86,-106,-141,-89,-91,-102,-116,-138,-104,-88,-240,-103,-22,-17,202,-33,-34,-30,-32,-31,205,-36,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-20,-240,-35,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-18,-82,-44,-110,-107,-61,-83,-170,-172,-171,-207,-169,-176,-194,-173,-113,-146,-23,-43,-82,-240,-207,-177,-178,205,-82,-111,-102,-209,-208,205,-210,-211,360,-79,-179,-194,205,-112,-240,-212,-82,-240,-194,205,]),'CASE':([5,243,244,306,360,369,372,373,380,385,389,],[-239,-42,-44,-43,-200,-240,-201,376,-202,-240,-203,]),'DEFER':([5,205,243,244,306,313,385,],[-239,-240,264,-44,-43,264,-240,]),'RPAREN':([5,26,34,41,45,48,49,53,54,55,57,58,60,62,63,64,67,68,71,72,74,77,78,80,81,89,90,97,99,104,113,114,116,118,120,121,124,129,130,133,135,136,139,140,141,156,158,160,161,164,165,166,167,168,169,170,171,172,173,176,177,180,193,200,206,210,211,212,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,246,248,250,251,252,253,255,297,300,301,303,342,363,],[-239,-240,-240,-240,-240,-233,84,88,-53,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,105,-74,110,-66,-29,-28,-12,-10,157,-232,-52,-106,-141,-89,-91,-102,-116,-138,-104,-88,-240,-103,-22,-17,-40,208,-37,-73,-65,-139,-140,-94,-95,-93,-92,-108,-240,-109,-96,218,-60,-62,-20,-39,-115,248,-114,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-18,-38,-110,-107,300,-61,301,-83,341,-113,-146,-23,-111,-112,]),'SEMICOLON':([1,5,7,8,13,16,17,18,19,20,23,27,32,40,43,44,46,50,51,55,57,58,60,62,63,64,67,68,70,71,72,74,79,82,84,85,87,88,89,90,97,99,101,102,103,105,106,108,109,110,111,112,116,118,120,121,124,129,130,132,133,135,136,139,140,141,147,148,149,150,151,152,153,157,163,165,166,167,168,169,170,171,173,176,180,193,200,203,204,205,208,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,243,244,248,250,252,254,255,257,259,260,261,262,263,265,266,268,269,270,272,274,275,276,277,278,279,280,281,283,284,285,287,288,290,291,293,295,296,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,335,336,337,338,341,342,344,345,346,348,351,353,354,355,358,359,361,363,364,365,366,367,368,370,374,379,381,383,385,386,388,391,392,],[5,-239,-228,-229,5,-49,5,-48,-45,-46,-47,-230,-50,-71,-68,-67,-63,-234,-238,-11,-3,-4,-2,-15,-9,-14,-6,-7,-54,-8,-13,-5,-240,-70,-231,5,5,-51,-29,-28,-12,-10,-83,-240,-83,-72,5,-77,-75,-64,5,-69,-106,-141,-89,-91,-102,-116,-138,-55,-104,-88,-240,-103,-22,-17,-80,-33,-34,-30,-32,-31,-81,-36,-76,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-20,-85,-87,-240,-35,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-18,-240,-44,-110,-107,-61,5,-83,-152,-170,-162,5,-155,-159,-172,-171,-148,-161,-240,-198,-160,-158,-153,-207,-150,-156,-240,-166,-147,-102,-169,-176,-240,-149,-157,-173,-151,-41,-113,-146,-23,-27,-167,-43,-168,-175,-222,-215,-217,-216,-240,-164,-240,-221,-219,-220,-177,-178,-218,-165,-78,-111,-174,5,-102,-169,-176,-79,-179,-163,-240,-163,-154,-112,-214,-213,5,-211,-206,-163,-240,-163,-197,-193,-240,-199,-195,-163,-196,]),'FALLTHROUGH':([5,205,243,244,306,313,385,],[-239,-240,281,-44,-43,281,-240,]),'STRUCT':([33,35,36,42,47,56,69,83,86,93,96,98,100,102,104,138,143,155,157,159,201,207,208,216,256,],[-57,-16,-56,-16,-16,-16,-24,-16,-58,-16,-16,146,-59,-16,-16,-16,-16,-16,-36,-56,-16,-16,-35,-16,-16,]),'GREATERTHAN_EQUAL':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,189,-139,-140,-94,-95,-93,-92,-108,-109,-96,189,189,-105,-90,189,189,-131,189,189,-121,-130,-134,-129,-133,-124,-132,189,-128,-122,189,-123,189,189,-110,-107,189,189,-102,189,189,-113,-146,189,189,189,189,189,-111,-102,189,189,189,-112,189,]),'RCURL':([5,202,205,241,242,243,244,245,302,306,360,369,372,373,380,385,389,],[-239,-240,-240,255,-26,-42,-44,296,-25,-43,-200,-240,-201,379,-202,-240,-203,]),'RSHIFT_EQUAL':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,180,193,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,284,286,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,323,-240,-113,-146,-111,-102,-240,-112,]),'EQEQ':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,183,-139,-140,-94,-95,-93,-92,-108,-109,-96,183,183,-105,-90,-127,-120,-131,183,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,183,-125,-110,-107,183,183,-102,183,183,-113,-146,183,183,183,183,183,-111,-102,183,183,183,-112,183,]),'SWITCH':([5,205,243,244,306,313,385,],[-239,-240,282,-44,-43,282,-240,]),'ANDXOR_EQUAL':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,180,193,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,284,286,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,329,-240,-113,-146,-111,-102,-240,-112,]),'PLUS':([5,91,107,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,137,165,166,167,168,169,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,205,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,243,244,248,249,250,252,253,258,264,270,273,277,282,284,287,289,294,299,300,301,305,306,307,313,315,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,338,340,342,343,346,351,353,357,358,363,367,371,376,385,],[-239,123,123,123,-106,-144,-141,-143,-89,-91,123,-142,-102,-116,-138,-104,123,-88,190,-145,-139,-140,-94,-95,-93,-92,-108,123,-109,123,-96,190,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-240,190,-105,-90,190,190,123,-131,190,190,190,-130,-134,-129,-133,190,-132,190,-128,190,190,190,190,190,123,123,-44,-110,123,-107,190,190,123,123,123,123,-207,123,-102,190,123,123,190,-113,-146,190,-43,190,123,123,190,123,-190,-180,-191,-182,-185,-188,-192,-181,-189,123,-186,-187,-183,-184,190,190,-111,123,-102,190,190,190,123,-112,190,123,123,-240,]),'DIVIDE_EQUAL':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,180,193,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,284,286,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,334,-240,-113,-146,-111,-102,-240,-112,]),'INCREMENT':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,284,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-102,335,-113,-146,-111,-102,335,-112,]),'IMPORT':([5,6,9,10,25,],[-239,-240,-224,14,-225,]),'STRING':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,138,143,155,157,159,201,207,208,216,256,],[-57,63,-56,63,63,63,63,-58,63,63,63,-59,63,63,63,63,63,-36,-56,63,63,-35,63,63,]),'IDENTIFIER':([2,5,14,15,21,22,24,26,33,34,35,36,41,42,45,47,48,49,52,53,54,56,73,75,77,78,80,81,83,86,91,92,93,96,100,102,104,107,113,114,115,117,119,122,123,134,137,138,143,155,157,159,161,164,172,174,175,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,201,202,205,207,208,216,221,239,241,242,243,244,249,256,258,264,267,270,273,277,280,282,288,289,294,302,306,313,315,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,358,371,376,385,],[8,-239,8,36,38,36,47,-240,-57,-240,61,-56,-240,61,-240,61,-233,8,86,36,-53,61,99,100,36,-74,47,-66,61,-58,124,61,61,61,-59,61,159,124,-232,-52,124,-144,-143,124,-142,124,-145,61,61,61,-36,-56,-73,-65,124,124,217,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,61,-240,-240,159,-35,61,124,124,36,-26,284,-44,124,61,124,124,308,124,124,-207,308,124,308,124,124,-25,-43,284,346,124,-190,-180,-191,-182,-185,-188,-192,-181,-189,124,-186,-187,-183,-184,124,124,346,124,-240,]),'SHORT_ASSIGNMENT':([284,346,],[320,320,]),'$end':([3,4,5,6,9,10,11,12,25,37,],[-1,0,-239,-240,-224,-240,-223,-227,-225,-226,]),'AND':([5,91,107,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,137,165,166,167,168,169,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,205,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,243,244,248,249,250,252,253,258,264,270,273,277,282,284,287,289,294,299,300,301,305,306,307,313,315,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,338,340,342,343,346,351,353,357,358,363,367,371,376,385,],[-239,137,137,137,-106,-144,-141,-143,-89,-91,137,-142,-102,-116,-138,-104,137,-88,195,-145,-139,-140,-94,-95,-93,-92,-108,137,-109,137,-96,195,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-240,195,-105,-90,-127,195,137,-131,195,195,-121,-130,-134,-129,-133,-124,-132,195,-128,-122,-135,-123,195,195,137,137,-44,-110,137,-107,195,195,137,137,137,137,-207,137,-102,195,137,137,195,-113,-146,195,-43,195,137,137,195,137,-190,-180,-191,-182,-185,-188,-192,-181,-189,137,-186,-187,-183,-184,195,195,-111,137,-102,195,195,195,137,-112,195,137,137,-240,]),'MALLOC':([107,],[162,]),'MODULO':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,187,-139,-140,-94,-95,-93,-92,-108,-109,-96,187,187,-105,-90,187,187,187,187,187,187,187,-134,-129,187,187,187,187,-128,187,187,187,187,187,-110,-107,187,187,-102,187,187,-113,-146,187,187,187,187,187,-111,-102,187,187,187,-112,187,]),'GOTO':([5,205,243,244,306,313,385,],[-239,-240,267,-44,-43,267,-240,]),'FOR':([5,205,243,244,306,313,385,],[-239,-240,277,-44,-43,277,-240,]),'PACKAGE':([0,],[2,]),'COMPARE_AND':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,197,-139,-140,-94,-95,-93,-92,-108,-109,-96,197,197,-105,-90,-127,-120,-131,197,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,197,197,-102,197,197,-113,-146,197,197,197,197,197,-111,-102,197,197,197,-112,197,]),'LSHIFT_EQUAL':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,180,193,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,284,286,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,321,-240,-113,-146,-111,-102,-240,-112,]),'RSQUARE':([55,57,58,60,62,63,64,65,67,68,71,72,74,89,90,95,97,99,116,118,120,121,124,129,130,133,135,139,140,141,142,144,145,165,166,167,168,169,170,171,173,176,200,214,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,248,249,250,255,298,299,300,301,303,342,357,363,],[-11,-3,-4,-2,-15,-9,-14,93,-6,-7,-8,-13,-5,-29,-28,143,-12,-10,-106,-141,-89,-91,-102,-116,-138,-104,-88,-103,-22,-17,-21,-19,201,-139,-140,-94,-95,-93,-92,-108,-109,-96,-20,-137,250,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-18,-110,-240,-107,-83,342,-136,-113,-146,-23,-111,363,-112,]),'XOR':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,191,-139,-140,-94,-95,-93,-92,-108,-109,-96,191,191,-105,-90,-127,191,-131,191,191,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,191,191,-110,-107,191,191,-102,191,191,-113,-146,191,191,191,191,191,-111,-102,191,191,191,-112,191,]),'EQUALS':([47,55,57,58,59,60,62,63,64,67,68,71,72,74,79,89,90,97,99,116,118,120,121,124,129,130,133,135,139,140,141,165,166,167,168,169,170,171,173,176,180,193,200,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,248,250,252,255,284,286,287,300,301,303,342,346,351,363,],[83,-11,-3,-4,91,-2,-15,-9,-14,-6,-7,-8,-13,-5,107,-29,-28,-12,-10,-106,-141,-89,-91,-102,-116,-138,-104,-88,-103,-22,-17,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-20,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-18,-110,-107,-61,-83,-102,327,-240,-113,-146,-23,-111,-102,-240,-112,]),'ELSE':([296,370,374,],[-41,-163,382,]),'PLUSEQUAL':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,180,193,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,284,286,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,328,-240,-113,-146,-111,-102,-240,-112,]),'GREATERTHAN':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,194,-139,-140,-94,-95,-93,-92,-108,-109,-96,194,194,-105,-90,194,194,-131,194,194,-121,-130,-134,-129,-133,-124,-132,194,-128,-122,194,-123,194,194,-110,-107,194,194,-102,194,194,-113,-146,194,194,194,194,194,-111,-102,194,194,194,-112,194,]),'FUNC':([5,6,9,10,11,12,25,37,],[-239,-240,-224,-240,21,-227,-225,-226,]),'GO':([5,205,243,244,306,313,385,],[-239,-240,258,-44,-43,258,-240,]),'VAR':([5,6,9,10,11,12,25,37,205,243,244,306,313,385,],[-239,-240,-224,-240,22,-227,-225,-226,-240,22,-44,-43,22,-240,]),'OREQUAL':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,180,193,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,284,286,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,332,-240,-113,-146,-111,-102,-240,-112,]),'IF':([5,205,243,244,306,313,382,385,],[-239,-240,294,-44,-43,294,294,-240,]),'IMAGINARY_LIT':([5,91,107,115,117,119,122,123,125,134,137,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,205,221,239,243,244,249,258,264,270,273,277,282,289,294,306,313,315,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,358,371,376,385,],[-239,-100,-100,-100,-144,-143,-100,-142,167,-100,-145,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-240,-100,-100,-100,-44,-100,-100,-100,-100,-100,-207,-100,-100,-100,-43,-100,-100,-100,-190,-180,-191,-182,-185,-188,-192,-181,-189,-100,-186,-187,-183,-184,-100,-100,-100,-100,-240,]),'MAP':([33,35,36,42,47,56,83,86,93,96,100,102,104,138,143,155,157,159,201,207,208,216,256,],[-57,66,-56,66,66,66,66,-58,66,66,-59,66,66,66,66,66,-36,-56,66,66,-35,66,66,]),'BOOL_LIT':([5,91,107,115,117,119,122,123,126,134,137,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,205,221,239,243,244,249,258,264,270,273,277,282,289,294,306,313,315,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,358,371,376,385,],[-239,-97,-97,-97,-144,-143,-97,-142,168,-97,-145,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-240,-97,-97,-97,-44,-97,-97,-97,-97,-97,-207,-97,-97,-97,-43,-97,-97,-97,-190,-180,-191,-182,-185,-188,-192,-181,-189,-97,-186,-187,-183,-184,-97,-97,-97,-97,-240,]),'TYPECAST':([5,91,107,115,117,119,122,123,134,137,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,205,221,239,243,244,249,258,264,270,273,277,282,289,294,306,313,315,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,358,371,376,385,],[-239,138,138,138,-144,-143,138,-142,138,-145,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,-240,138,138,138,-44,138,138,138,138,138,-207,138,138,138,-43,138,138,138,-190,-180,-191,-182,-185,-188,-192,-181,-189,138,-186,-187,-183,-184,138,138,138,138,-240,]),'RSHIFT':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,181,-139,-140,-94,-95,-93,-92,-108,-109,-96,181,181,-105,-90,181,181,-131,181,181,181,-130,-134,-129,181,181,181,181,-128,181,181,181,181,181,-110,-107,181,181,-102,181,181,-113,-146,181,181,181,181,181,-111,-102,181,181,181,-112,181,]),'LESSTHAN_EQUAL':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,196,-139,-140,-94,-95,-93,-92,-108,-109,-96,196,196,-105,-90,196,196,-131,196,196,-121,-130,-134,-129,-133,-124,-132,196,-128,-122,196,-123,196,196,-110,-107,196,196,-102,196,196,-113,-146,196,196,196,196,196,-111,-102,196,196,196,-112,196,]),'INT':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,138,143,155,157,159,201,207,208,216,256,],[-57,67,-56,67,67,67,67,-58,67,67,67,-59,67,67,67,67,67,-36,-56,67,67,-35,67,67,]),'TIMESEQUAL':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,180,193,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,284,286,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,333,-240,-113,-146,-111,-102,-240,-112,]),'MINUSEQUAL':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,180,193,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,284,286,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,324,-240,-113,-146,-111,-102,-240,-112,]),'FLOAT':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,138,143,155,157,159,201,207,208,216,256,],[-57,68,-56,68,68,68,68,-58,68,68,68,-59,68,68,68,68,68,-36,-56,68,68,-35,68,68,]),'FLOAT_LIT':([5,91,107,115,117,119,122,123,127,134,137,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,205,221,239,243,244,249,258,264,270,273,277,282,289,294,306,313,315,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,358,371,376,385,],[-239,-99,-99,-99,-144,-143,-99,-142,169,-99,-145,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-240,-99,-99,-99,-44,-99,-99,-99,-99,-99,-207,-99,-99,-99,-43,-99,-99,-99,-190,-180,-191,-182,-185,-188,-192,-181,-189,-99,-186,-187,-183,-184,-99,-99,-99,-99,-240,]),'BREAK':([5,205,243,244,306,313,385,],[-239,-240,288,-44,-43,288,-240,]),'COMPARE_OR':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,182,-139,-140,-94,-95,-93,-92,-108,-109,-96,182,182,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,182,182,-102,182,182,-113,-146,182,182,182,182,182,-111,-102,182,182,182,-112,182,]),'INT_LIT':([5,65,91,94,107,115,117,119,122,123,128,134,137,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,205,209,221,239,243,244,247,249,258,264,270,273,277,282,289,294,306,313,315,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,358,371,376,385,],[-239,-98,-98,142,-98,-98,-144,-143,-98,-142,170,-98,-145,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-240,-98,-98,-98,-98,-44,297,-98,-98,-98,-98,-98,-207,-98,-98,-98,-43,-98,-98,-98,-190,-180,-191,-182,-185,-188,-192,-181,-189,-98,-186,-187,-183,-184,-98,-98,-98,-98,-240,]),'CONTINUE':([5,205,243,244,306,313,385,],[-239,-240,280,-44,-43,280,-240,]),'BOOL':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,138,143,155,157,159,201,207,208,216,256,],[-57,71,-56,71,71,71,71,-58,71,71,71,-59,71,71,71,71,71,-36,-56,71,71,-35,71,71,]),'STRING_LIT':([5,8,14,26,28,29,30,31,48,49,91,107,113,115,117,119,122,123,131,134,137,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,205,221,239,243,244,249,258,264,270,273,277,282,289,294,306,313,315,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,358,371,376,385,],[-239,-229,-240,-240,-237,-236,51,-235,-233,-240,-101,-101,-232,-101,-144,-143,-101,-142,176,-101,-145,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-240,-101,-101,-101,-44,-101,-101,-101,-101,-101,-207,-101,-101,-101,-43,-101,-101,-101,-190,-180,-191,-182,-185,-188,-192,-181,-189,-101,-186,-187,-183,-184,-101,-101,-101,-101,-240,]),'NOT':([5,91,107,115,117,119,122,123,134,137,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,205,221,239,243,244,249,258,264,270,273,277,282,289,294,306,313,315,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,358,371,376,385,],[-239,122,122,122,-144,-143,122,-142,122,-145,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-240,122,122,122,-44,122,122,122,122,122,-207,122,122,122,-43,122,122,122,-190,-180,-191,-182,-185,-188,-192,-181,-189,122,-186,-187,-183,-184,122,122,122,122,-240,]),'ANDEQUAL':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,180,193,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,284,286,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,331,-240,-113,-146,-111,-102,-240,-112,]),'DECREMENT':([116,118,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,284,287,300,301,342,346,351,363,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-102,336,-113,-146,-111,-102,336,-112,]),'COMMA':([33,36,55,57,58,60,62,63,64,67,68,71,72,74,86,89,90,97,99,100,116,118,120,121,124,129,130,133,135,136,139,140,141,156,158,159,160,165,166,167,168,169,170,171,173,176,180,193,200,206,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,246,248,250,252,255,284,287,300,301,303,342,346,351,363,],[52,75,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,-58,-29,-28,-12,-10,-59,-106,-141,-89,-91,-102,-116,-138,-104,-88,-240,-103,-22,-17,-40,207,75,-37,-139,-140,-94,-95,-93,-92,-108,-109,-96,221,-62,-20,-39,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-18,-38,-110,-107,-61,-83,-102,-240,-113,-146,-23,-111,-102,-240,-112,]),'TYPE':([5,6,9,10,11,12,25,33,35,36,37,42,47,56,83,86,92,93,96,100,102,104,138,143,155,157,159,201,205,207,208,216,243,244,256,306,313,385,],[-239,-240,-224,-240,24,-227,-225,-57,73,-56,-226,73,73,73,73,-58,73,73,73,-59,73,73,73,73,73,-36,-56,73,-240,73,-35,73,24,-44,73,-43,24,-240,]),'OR':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,215,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,248,250,252,253,284,287,299,300,301,305,307,319,338,340,342,346,351,353,357,363,367,],[-106,-141,-89,-91,-102,-116,-138,-104,-88,198,-139,-140,-94,-95,-93,-92,-108,-109,-96,198,198,-105,-90,-127,198,-131,198,198,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,198,-125,-110,-107,198,198,-102,198,198,-113,-146,198,198,198,198,198,-111,-102,198,198,198,-112,198,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([154,],[203,]),'Conversion':([91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ContinueStmt':([243,313,],[257,257,]),'ExpressionRep':([136,287,351,],[180,180,180,]),'ExpressionStmt':([243,313,315,371,],[259,259,259,259,]),'ScanStmt':([243,313,],[260,260,]),'Statement':([243,313,],[261,344,]),'IfStmt':([243,313,382,],[262,262,388,]),'FallThroughStmt':([243,313,],[263,263,]),'StatementRep':([205,385,],[243,243,]),'TypeToken':([35,42,47,56,83,92,93,96,102,104,138,143,155,201,207,216,256,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'AliasDecl':([24,80,],[44,44,]),'PackageNameDotOpt':([14,49,],[30,30,]),'TypeName':([35,42,47,56,83,92,93,96,102,104,138,143,155,201,207,216,256,],[60,60,60,60,60,139,60,60,60,60,60,60,60,60,60,60,60,]),'ExprCaseClause':([373,],[380,]),'ParametersList':([104,],[158,]),'ParameterDecl':([104,207,],[160,246,]),'FuncScope':([69,],[98,]),'FunctionName':([21,],[39,]),'LabeledStmt':([243,313,],[268,268,]),'KeyType':([96,],[145,]),'StatementList':([205,385,],[245,389,]),'TypeAssertion':([130,],[173,]),'ConditionOpt':([358,],[366,]),'EndScope_1':([355,359,370,379,391,],[361,368,374,386,392,]),'ElementType':([93,143,201,],[141,200,240,]),'RetTypeSet':([103,],[154,]),'PointerType':([35,42,47,56,83,93,96,102,104,138,143,155,201,207,216,256,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'EndScope':([101,103,255,],[147,153,303,]),'VarSpecRep':([41,],[77,]),'VarDecl':([11,243,313,],[23,23,23,]),'PrintStmt':([243,313,],[269,269,]),'ConstSpecRep':([34,],[53,]),'Operand':([91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'TypeSpec':([24,80,],[46,111,]),'CCreateScope':([277,319,],[315,352,]),'Parameters':([76,102,],[102,148,]),'UnaryOp':([91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'PackageName':([2,14,49,],[7,29,29,]),'SourceFile':([0,],[3,]),'ExpressionListPureOpt':([270,],[310,]),'Label':([243,267,280,288,313,],[271,309,318,318,271,]),'FunctionDecl':([11,],[16,]),'TopLevelDecl':([11,],[17,]),'ExprSwitchStmt':([243,313,],[272,272,]),'IdentifierList':([15,22,53,77,104,207,241,],[35,42,35,42,155,155,256,]),'IdentifierRep':([15,22,53,77,104,207,241,],[33,33,33,33,33,33,33,]),'Type':([35,42,47,56,83,93,96,102,104,138,143,155,201,207,216,256,],[59,79,82,89,112,140,144,149,156,199,140,206,140,156,251,304,]),'ImportDeclRep':([6,],[10,]),'GoStmt':([243,313,],[274,274,]),'DeferStmt':([243,313,],[275,275,]),'PackageClause':([0,],[1,]),'ResultOpt':([102,],[150,]),'IncDecStmt':([243,313,315,371,],[266,266,266,266,]),'GotoStmt':([243,313,],[276,276,]),'TopLevelDeclRep':([10,],[11,]),'C':([91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'Semi':([1,13,17,85,87,106,111,254,261,345,366,],[6,25,37,113,114,161,164,302,306,358,371,]),'PrimaryExpr':([91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'S':([91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'StartSwitch':([360,],[369,]),'assign_op':([286,],[330,]),'Signature':([76,],[103,]),'Block':([154,339,349,362,390,],[204,355,359,370,391,]),'ExprCaseClauseList':([369,],[373,]),'SwitchStmt':([243,313,],[279,279,]),'VarSpec':([22,77,],[40,106,]),'Result':([102,],[152,]),'Assignment':([243,313,315,371,],[265,265,265,265,]),'ExpressionListTypeOpt':([172,],[211,]),'QualifiedIdent':([35,42,47,56,83,92,93,96,102,104,138,143,155,201,207,216,256,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'Literal':([91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'ImportDecl':([10,],[13,]),'OperandName':([91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'AssignOp':([286,],[322,]),'LabelOpt':([280,288,],[317,337,]),'FieldDeclRep':([202,],[241,]),'start':([0,],[4,]),'Declaration':([11,243,313,],[18,283,283,]),'Condition':([315,358,],[347,364,]),'StructType':([69,],[97,]),'B':([91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'ConstSpec':([15,53,],[32,87,]),'F':([91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'epsilon':([6,10,14,26,34,41,45,49,79,102,136,172,174,202,205,243,249,270,280,287,288,313,315,351,358,369,371,374,385,],[9,12,28,48,54,78,81,28,108,151,193,210,214,242,244,285,214,311,316,193,316,285,348,193,365,372,285,381,244,]),'ConditionBlockOpt':([315,],[349,]),'ExpressionList':([91,107,172,243,270,273,313,315,330,371,376,],[132,163,212,286,312,314,286,286,354,286,384,]),'SimpleStmt':([243,313,315,371,],[290,290,345,375,]),'ImportSpecRep':([26,],[49,]),'Expression':([91,107,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[136,136,177,136,215,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,252,253,287,299,305,307,136,136,319,338,340,287,351,353,136,357,367,287,136,]),'ImportPath':([30,],[50,]),'ExprSwitchCase':([373,],[377,]),'ExpressionOpt':([174,249,],[213,298,]),'ST':([35,42,47,56,83,93,96,102,104,138,143,155,201,207,216,256,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'TypeExprListOpt':([35,],[70,]),'ReturnStmt':([243,313,],[278,278,]),'ConstDecl':([11,243,313,],[19,19,19,]),'Slice':([130,],[171,]),'ArrayType':([35,42,47,56,83,93,96,102,104,138,143,155,201,207,216,256,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ForStmt':([243,313,],[291,291,]),'Function':([76,],[101,]),'ImportSpec':([14,49,],[27,85,]),'TypeLit':([35,42,47,56,83,93,96,102,104,138,143,155,201,207,216,256,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'TypeSpecRep':([45,],[80,]),'CreateScope':([39,243,313,340,382,],[76,292,292,356,387,]),'SliceType':([35,42,47,56,83,93,96,102,104,138,143,155,201,207,216,256,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'TypeDecl':([11,243,313,],[20,20,20,]),'BaseType':([56,],[90,]),'I':([65,91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,209,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[94,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,247,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'IFSYM':([292,356,387,],[339,362,390,]),'UnaryExpr':([91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[129,129,165,166,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'ArrayLength':([65,],[95,]),'MapType':([35,42,47,56,83,93,96,102,104,138,143,155,201,207,216,256,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ForClause':([315,],[350,]),'ShortVarDecl':([243,313,315,371,],[293,293,293,293,]),'TypeDef':([24,80,],[43,43,]),'FieldDecl':([241,],[254,]),'BreakStmt':([243,313,],[295,295,]),'BasicLit':([91,107,115,122,134,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,221,239,243,249,258,264,270,273,282,289,294,313,315,320,330,343,358,371,376,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'ExpressionListOpt':([79,],[109,]),'ElseOpt':([374,],[383,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',242),
  ('Type -> TypeName','Type',1,'p_type','parser.py',251),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',252),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','parser.py',256),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',257),
  ('TypeToken -> INT','TypeToken',1,'p_type_token','parser.py',267),
  ('TypeToken -> FLOAT','TypeToken',1,'p_type_token','parser.py',268),
  ('TypeToken -> BOOL','TypeToken',1,'p_type_token','parser.py',269),
  ('TypeToken -> STRING','TypeToken',1,'p_type_token','parser.py',270),
  ('TypeToken -> TYPE IDENTIFIER','TypeToken',2,'p_type_token','parser.py',271),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',307),
  ('TypeLit -> ST StructType','TypeLit',2,'p_type_lit','parser.py',308),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',309),
  ('TypeLit -> MapType','TypeLit',1,'p_type_lit','parser.py',310),
  ('TypeLit -> SliceType','TypeLit',1,'p_type_lit','parser.py',311),
  ('ST -> <empty>','ST',0,'p_S_T','parser.py',318),
  ('SliceType -> LSQUARE RSQUARE ElementType','SliceType',3,'p_slice_type','parser.py',333),
  ('MapType -> MAP LSQUARE KeyType RSQUARE ElementType','MapType',5,'p_map_type','parser.py',342),
  ('KeyType -> Type','KeyType',1,'p_key_type','parser.py',349),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE ElementType','ArrayType',4,'p_array_type','parser.py',356),
  ('ArrayLength -> I INT_LIT','ArrayLength',2,'p_array_length','parser.py',382),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',388),
  ('StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope','StructType',6,'p_struct_type','parser.py',393),
  ('FuncScope -> <empty>','FuncScope',0,'p_func_scope','parser.py',401),
  ('FieldDeclRep -> FieldDeclRep FieldDecl Semi','FieldDeclRep',3,'p_field_decl_rep','parser.py',409),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',410),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_field_decl','parser.py',423),
  ('PointerType -> MULTIPLY BaseType','PointerType',2,'p_point_type','parser.py',444),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',452),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_sign','parser.py',459),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',485),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',486),
  ('Result -> Parameters','Result',1,'p_result','parser.py',490),
  ('Result -> Type','Result',1,'p_result','parser.py',491),
  ('Parameters -> LPAREN ParametersList RPAREN','Parameters',3,'p_params','parser.py',497),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_params','parser.py',498),
  ('ParametersList -> ParameterDecl','ParametersList',1,'p_param_list','parser.py',521),
  ('ParametersList -> ParametersList COMMA ParameterDecl','ParametersList',3,'p_param_list','parser.py',522),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_param_decl','parser.py',534),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_param_decl','parser.py',535),
  ('Block -> LCURL StatementList RCURL','Block',3,'p_block','parser.py',572),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',576),
  ('StatementRep -> StatementRep Statement Semi','StatementRep',3,'p_stat_rep','parser.py',580),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',581),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',594),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',595),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',596),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',600),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',601),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',608),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',609),
  ('ConstSpecRep -> ConstSpecRep ConstSpec Semi','ConstSpecRep',3,'p_const_spec_rep','parser.py',616),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',617),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',626),
  ('TypeExprListOpt -> Type EQUALS ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',648),
  ('IdentifierList -> IDENTIFIER','IdentifierList',1,'p_identifier_list','parser.py',662),
  ('IdentifierList -> IdentifierRep','IdentifierList',1,'p_identifier_list','parser.py',663),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',680),
  ('IdentifierRep -> IDENTIFIER COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',681),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',712),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',726),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',727),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',748),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',749),
  ('TypeSpecRep -> TypeSpecRep TypeSpec Semi','TypeSpecRep',3,'p_type_spec_rep','parser.py',756),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',757),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',764),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',765),
  ('AliasDecl -> IDENTIFIER EQUALS Type','AliasDecl',3,'p_alias_decl','parser.py',769),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_type_def','parser.py',781),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',794),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',795),
  ('VarSpecRep -> VarSpecRep VarSpec Semi','VarSpecRep',3,'p_var_spec_rep','parser.py',802),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',803),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',813),
  ('ExpressionListOpt -> EQUALS ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',888),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',889),
  ('ExpressionListOpt -> EQUALS MALLOC LPAREN I INT_LIT RPAREN','ExpressionListOpt',6,'p_expr_list_opt','parser.py',890),
  ('ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',904),
  ('FunctionDecl -> FUNC FunctionName CreateScope Function EndScope','FunctionDecl',5,'p_func_decl','parser.py',934),
  ('FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope','FunctionDecl',5,'p_func_decl','parser.py',935),
  ('CreateScope -> <empty>','CreateScope',0,'p_create_scope','parser.py',957),
  ('EndScope -> <empty>','EndScope',0,'p_end_scope','parser.py',961),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',965),
  ('Function -> Signature RetTypeSet FunctionBody','Function',3,'p_func','parser.py',977),
  ('RetTypeSet -> <empty>','RetTypeSet',0,'p_ret_type_set','parser.py',996),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',1010),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',1022),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',1023),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',1024),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',1031),
  ('BasicLit -> I INT_LIT','BasicLit',2,'p_basic_lit','parser.py',1036),
  ('BasicLit -> F FLOAT_LIT','BasicLit',2,'p_basic_lit','parser.py',1037),
  ('BasicLit -> C IMAGINARY_LIT','BasicLit',2,'p_basic_lit','parser.py',1038),
  ('BasicLit -> B BOOL_LIT','BasicLit',2,'p_basic_lit','parser.py',1039),
  ('BasicLit -> S STRING_LIT','BasicLit',2,'p_basic_lit','parser.py',1040),
  ('B -> <empty>','B',0,'p_B','parser.py',1060),
  ('I -> <empty>','I',0,'p_I','parser.py',1066),
  ('F -> <empty>','F',0,'p_F','parser.py',1072),
  ('C -> <empty>','C',0,'p_C','parser.py',1078),
  ('S -> <empty>','S',0,'p_S','parser.py',1084),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',1090),
  ('QualifiedIdent -> IDENTIFIER DOT TypeName','QualifiedIdent',3,'p_qualified_ident','parser.py',1139),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',1151),
  ('PrimaryExpr -> PrimaryExpr DOT IDENTIFIER','PrimaryExpr',3,'p_prim_expr','parser.py',1152),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',1153),
  ('PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE','PrimaryExpr',4,'p_prim_expr','parser.py',1154),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',1155),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser.py',1156),
  ('PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN','PrimaryExpr',4,'p_prim_expr','parser.py',1157),
  ('Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE','Slice',5,'p_slice','parser.py',1401),
  ('Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE','Slice',7,'p_slice','parser.py',1402),
  ('TypeAssertion -> DOT LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser.py',1410),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1415),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1416),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser.py',1420),
  ('Expression -> Expression COMPARE_OR Expression','Expression',3,'p_expr','parser.py',1421),
  ('Expression -> Expression COMPARE_AND Expression','Expression',3,'p_expr','parser.py',1422),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expr','parser.py',1423),
  ('Expression -> Expression NOTEQUALS Expression','Expression',3,'p_expr','parser.py',1424),
  ('Expression -> Expression LESSTHAN Expression','Expression',3,'p_expr','parser.py',1425),
  ('Expression -> Expression GREATERTHAN Expression','Expression',3,'p_expr','parser.py',1426),
  ('Expression -> Expression LESSTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',1427),
  ('Expression -> Expression GREATERTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',1428),
  ('Expression -> Expression OR Expression','Expression',3,'p_expr','parser.py',1429),
  ('Expression -> Expression XOR Expression','Expression',3,'p_expr','parser.py',1430),
  ('Expression -> Expression ANDXOR Expression','Expression',3,'p_expr','parser.py',1431),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expr','parser.py',1432),
  ('Expression -> Expression MODULO Expression','Expression',3,'p_expr','parser.py',1433),
  ('Expression -> Expression LSHIFT Expression','Expression',3,'p_expr','parser.py',1434),
  ('Expression -> Expression RSHIFT Expression','Expression',3,'p_expr','parser.py',1435),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expr','parser.py',1436),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expr','parser.py',1437),
  ('Expression -> Expression MULTIPLY Expression','Expression',3,'p_expr','parser.py',1438),
  ('Expression -> Expression AND Expression','Expression',3,'p_expr','parser.py',1439),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',1542),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',1543),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',1547),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1548),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1549),
  ('UnaryExpr -> NULL','UnaryExpr',1,'p_unary_expr','parser.py',1550),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',1608),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',1609),
  ('UnaryOp -> MULTIPLY','UnaryOp',1,'p_unary_op','parser.py',1610),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser.py',1611),
  ('Conversion -> TYPECAST Type LPAREN Expression RPAREN','Conversion',5,'p_conversion','parser.py',1625),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',1633),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',1634),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',1635),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',1636),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',1637),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',1638),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',1639),
  ('Statement -> CreateScope IFSYM Block EndScope_1','Statement',4,'p_statement','parser.py',1640),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',1641),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',1642),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',1643),
  ('Statement -> DeferStmt','Statement',1,'p_statement','parser.py',1644),
  ('Statement -> FallThroughStmt','Statement',1,'p_statement','parser.py',1645),
  ('Statement -> GoStmt','Statement',1,'p_statement','parser.py',1646),
  ('Statement -> PrintStmt','Statement',1,'p_statement','parser.py',1647),
  ('Statement -> ScanStmt','Statement',1,'p_statement','parser.py',1648),
  ('EndScope_1 -> <empty>','EndScope_1',0,'p_end_scope_new','parser.py',1655),
  ('PrintStmt -> PRINT ExpressionList','PrintStmt',2,'p_print_stmt','parser.py',1662),
  ('ScanStmt -> SCAN Expression','ScanStmt',2,'p_scan_stmt','parser.py',1687),
  ('FallThroughStmt -> FALLTHROUGH','FallThroughStmt',1,'p_fallthrough_stmt','parser.py',1711),
  ('GoStmt -> GO Expression','GoStmt',2,'p_go_stmt','parser.py',1715),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_defer_stmt','parser.py',1721),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',1726),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1727),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1728),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',1729),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',1730),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',1735),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',1753),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',1758),
  ('IncDecStmt -> Expression INCREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1764),
  ('IncDecStmt -> Expression DECREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1765),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',1772),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1815),
  ('AssignOp -> PLUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1819),
  ('AssignOp -> MINUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1820),
  ('AssignOp -> TIMESEQUAL','AssignOp',1,'p_AssignOp','parser.py',1821),
  ('AssignOp -> DIVIDE_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1822),
  ('AssignOp -> MODEQUAL','AssignOp',1,'p_AssignOp','parser.py',1823),
  ('AssignOp -> ANDEQUAL','AssignOp',1,'p_AssignOp','parser.py',1824),
  ('AssignOp -> OREQUAL','AssignOp',1,'p_AssignOp','parser.py',1825),
  ('AssignOp -> XOREQUAL','AssignOp',1,'p_AssignOp','parser.py',1826),
  ('AssignOp -> ANDXOR_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1827),
  ('AssignOp -> LSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1828),
  ('AssignOp -> RSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1829),
  ('AssignOp -> EQUALS','AssignOp',1,'p_AssignOp','parser.py',1830),
  ('IfStmt -> IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt','IfStmt',7,'p_if_statement','parser.py',1836),
  ('IFSYM -> <empty>','IFSYM',0,'p_if_sym','parser.py',1853),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1859),
  ('ElseOpt -> ELSE CreateScope IFSYM Block EndScope_1','ElseOpt',5,'p_else_opt','parser.py',1860),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1861),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',1873),
  ('ExprSwitchStmt -> SWITCH Expression CCreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1','ExprSwitchStmt',8,'p_ExprSwitchStmt','parser.py',1877),
  ('StartSwitch -> <empty>','StartSwitch',0,'p_start_switch','parser.py',1908),
  ('ExprCaseClauseList -> epsilon','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',1924),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',1925),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',1941),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',1964),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',1965),
  ('ForStmt -> FOR CCreateScope ConditionBlockOpt Block EndScope_1','ForStmt',5,'p_for','parser.py',1989),
  ('CCreateScope -> <empty>','CCreateScope',0,'p_c_create_scope','parser.py',2000),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',2005),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',2006),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',2007),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',2018),
  ('ForClause -> SimpleStmt Semi ConditionOpt Semi SimpleStmt','ForClause',5,'p_forclause','parser.py',2023),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',2040),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',2041),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',2048),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',2086),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',2087),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',2092),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',2096),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',2100),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',2101),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',2106),
  ('SourceFile -> PackageClause Semi ImportDeclRep TopLevelDeclRep','SourceFile',4,'p_source_file','parser.py',2112),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',2120),
  ('ImportDeclRep -> ImportDeclRep ImportDecl Semi','ImportDeclRep',3,'p_import_decl_rep','parser.py',2121),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl Semi','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',2130),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',2131),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',2142),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',2147),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',2158),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',2159),
  ('ImportSpecRep -> ImportSpecRep ImportSpec Semi','ImportSpecRep',3,'p_import_spec_rep','parser.py',2166),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',2167),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',2175),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2183),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2184),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2185),
  ('ImportPath -> STRING_LIT','ImportPath',1,'p_import_path','parser.py',2193),
  ('Semi -> SEMICOLON','Semi',1,'p_SemiColon','parser.py',2201),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',2214),
]
