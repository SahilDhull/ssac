
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDENTIFIERrightEQUALSNOTleftINT_LITleftFLOAT_LITleftSTRING_LITleftCOMPARE_ORleftCOMPARE_ANDleftEQEQNOTEQUALSleftORleftXORleftANDANDXORleftLESSTHANGREATERTHANLESSTHAN_EQUALGREATERTHAN_EQUALleftPLUSMINUSleftLSHIFTRSHIFTleftMULTIPLYDIVIDEMODULOleftLPARENRPARENAND ANDEQUAL ANDXOR ANDXOR_EQUAL BOOL BREAK CASE COLON COMMA COMPARE_AND COMPARE_OR CONST CONTINUE DECREMENT DEFAULT DEFER DIVIDE DIVIDE_EQUAL DOT ELSE EQEQ EQUALS FALLTHROUGH FLOAT FLOAT_LIT FOR FUNC GO GOTO GREATERTHAN GREATERTHAN_EQUAL IDENTIFIER IF IMAGINARY_LIT IMPORT INCREMENT INT INT_LIT LCURL LESSTHAN LESSTHAN_EQUAL LPAREN LSHIFT LSHIFT_EQUAL LSQUARE MAP MINUS MINUSEQUAL MODEQUAL MODULO MULTIPLY NOT NOTEQUALS OR OREQUAL PACKAGE PD PLUS PLUSEQUAL PRINT PS RANGE RCURL RETURN RPAREN RSHIFT RSHIFT_EQUAL RSQUARE SCAN SEMICOLON SHORT_ASSIGNMENT STRING STRING_LIT STRUCT SWITCH TIMESEQUAL TYPE TYPECAST VAR XOR XOREQUALstart : SourceFileType : TypeName\n            | TypeLitTypeName : TypeToken\n                | QualifiedIdentTypeToken : INT\n                 | FLOAT\n                 | BOOL\n                 | STRING\n                 | TYPE IDENTIFIERTypeLit : ArrayType\n               | StructType\n               | PointerType\n               | MapType\n               | SliceTypeSliceType : LSQUARE RSQUARE ElementTypeMapType : MAP LSQUARE KeyType RSQUARE ElementType KeyType : TypeArrayType : LSQUARE ArrayLength RSQUARE ElementType ArrayLength : Expression  ElementType : Type StructType : FuncScope STRUCT LCURL FieldDeclRep RCURLFuncScope :  FieldDeclRep : FieldDeclRep FieldDecl SEMICOLON\n                  | epsilon  FieldDecl : IdentifierList TypePointerType : MULTIPLY BaseTypeBaseType : TypeSignature : Parameters ResultOptResultOpt : Result\n                 | epsilonResult : Parameters\n              | TypeParameters : LPAREN ParametersList RPAREN\n                  | LPAREN RPARENParametersList : ParameterDecl\n                      | ParametersList COMMA ParameterDeclParameterDecl : IdentifierList Type\n                     | TypeBlock : LCURL StatementList RCURLStatementList : StatementRepStatementRep : StatementRep Statement SEMICOLON\n                    | epsilonDeclaration : ConstDecl\n                 | TypeDecl\n                 | VarDeclTopLevelDecl : Declaration\n                  | FunctionDeclConstDecl : CONST ConstSpec\n                 | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOLON\n                    | epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : Type EQUALS ExpressionList\n                       | epsilonIdentifierList : IDENTIFIER \n                      | IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n                     | IDENTIFIER COMMA IDENTIFIERExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n                     | epsilonTypeDecl : TYPE TypeSpec\n                | TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOLON\n                   | epsilonTypeSpec : AliasDecl\n                | TypeDefAliasDecl : IDENTIFIER EQUALS TypeTypeDef : IDENTIFIER TypeVarDecl : VAR VarSpec\n               | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOLON\n                  | epsilonVarSpec : IdentifierList Type ExpressionListOptExpressionListOpt : EQUALS ExpressionList\n                         | epsilon ShortVarDecl : IDENTIFIER SHORT_ASSIGNMENT Expression FunctionDecl : FUNC FunctionName CreateScope Function EndScope\n                  | FUNC FunctionName CreateScope Signature EndScopeCreateScope : EndScope : FunctionName : IDENTIFIERFunction : Signature RetTypeSet FunctionBodyRetTypeSet : FunctionBody : BlockOperand : Literal\n               | OperandName\n               | LPAREN Expression RPARENLiteral : BasicLit\n               | CompositeLitCompositeLit : LiteralType LiteralValueLiteralType : StructType\n                 | ArrayType\n                 | SliceType\n                 | MapType\n                 | TypeNameLiteralValue : LCURL RCURL\n                  | LCURL ElementList RCURL\n                  | LCURL ElementList COMMA RCURLElementList : KeyedElement\n                 | ElementList COMMA KeyedElementKeyedElement : Element\n                  | Key COLON Element\n                  | IDENTIFIER COLON ElementKey : Expression\n         | LiteralValueElement : Expression\n             | LiteralValueBasicLit : I INT_LIT\n              | F FLOAT_LIT\n              | C IMAGINARY_LIT\n              | S STRING_LITI : F : C : S : OperandName : IDENTIFIERQualifiedIdent : IDENTIFIER DOT TypeNamePrimaryExpr : Operand\n                   | PrimaryExpr Selector\n                   | Conversion\n                   | PrimaryExpr LSQUARE Expression RSQUARE\n                   | PrimaryExpr Slice\n                   | PrimaryExpr TypeAssertion\n                   | PrimaryExpr LPAREN ExpressionListTypeOpt RPARENSelector : DOT IDENTIFIERSlice : LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE\n             | LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARETypeAssertion : DOT LPAREN Type RPARENExpressionListTypeOpt : ExpressionList\n                             | epsilonExpression : UnaryExpr\n                  | Expression COMPARE_OR Expression\n                  | Expression COMPARE_AND Expression\n                  | Expression EQEQ Expression\n                  | Expression NOTEQUALS Expression\n                  | Expression LESSTHAN Expression\n                  | Expression GREATERTHAN Expression\n                  | Expression LESSTHAN_EQUAL Expression\n                  | Expression GREATERTHAN_EQUAL Expression\n                  | Expression OR Expression\n                  | Expression XOR Expression\n                  | Expression ANDXOR Expression\n                  | Expression DIVIDE Expression\n                  | Expression MODULO Expression\n                  | Expression LSHIFT Expression\n                  | Expression RSHIFT Expression\n                  | Expression PLUS Expression\n                  | Expression MINUS Expression\n                  | Expression MULTIPLY Expression\n                  | Expression AND ExpressionExpressionOpt : Expression\n                     | epsilonUnaryExpr : PrimaryExpr\n                 | UnaryOp UnaryExpr\n                 | NOT UnaryExprUnaryOp : PLUS\n               | MINUS\n               | MULTIPLY\n               | AND Conversion : TYPECAST Type LPAREN Expression RPARENStatement : Declaration\n               | LabeledStmt\n               | SimpleStmt\n               | ReturnStmt\n               | BreakStmt\n               | ContinueStmt\n               | GotoStmt\n               | CreateScope Block EndScope\n               | IfStmt\n               | SwitchStmt\n               | ForStmt\n               | DeferStmt\n               | FallThroughStmt\n               | GoStmt\n               | PrintStmt\n               | ScanStmtPrintStmt : PRINT PD Expression\n               | PRINT PS ExpressionScanStmt : SCAN ExpressionFallThroughStmt : FALLTHROUGHGoStmt : GO ExpressionDeferStmt : DEFER Expression SimpleStmt : epsilon\n                 | ExpressionStmt\n                 | IncDecStmt\n                 | Assignment\n                 | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : Expression INCREMENT\n                 | Expression DECREMENT  Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOp AssignOp : PLUSEQUAL\n               | MINUSEQUAL\n               | TIMESEQUAL\n               | DIVIDE_EQUAL\n               | MODEQUAL\n               | ANDEQUAL\n               | OREQUAL\n               | XOREQUAL\n               | ANDXOR_EQUAL\n               | LSHIFT_EQUAL\n               | RSHIFT_EQUAL\n               | EQUALS  IfStmt : IF Expression Block ElseOpt  ElseOpt : ELSE IfStmt\n              | ELSE Block\n              | epsilon  SwitchStmt : ExprSwitchStmtExprSwitchStmt : SWITCH SimpleStmt SEMICOLON  ExpressionOpt LCURL ExprCaseClauseList RCURL\n                 | SWITCH ExpressionOpt LCURL ExprCaseClauseList RCURL ExprCaseClauseList : epsilon\n                 | ExprCaseClauseList ExprCaseClause\n    ExprCaseClause : ExprSwitchCase COLON StatementList \n    ExprSwitchCase : CASE ExpressionList\n                 | DEFAULT \n    ForStmt : FOR ConditionBlockOpt BlockConditionBlockOpt : epsilon\n             | Condition\n             | ForClause\n             | RangeClauseCondition : Expression ForClause : SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmtConditionOpt : epsilon\n          | Condition RangeClause : ExpressionIdentListOpt RANGE ExpressionExpressionIdentListOpt : epsilon\n             | ExpressionIdentifierExpressionIdentifier : ExpressionList EQUALSReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n             | epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n        | epsilon GotoStmt : GOTO Label SourceFile : PackageClause SEMICOLON ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n           | ImportDeclRep ImportDecl SEMICOLONTopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOLON\n                     | epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n          | IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOLON\n            | epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n                        | PackageName\n                        | epsilon ImportPath : STRING_LIT epsilon : '
    
_lr_action_items = {end':([3,4,5,8,9,10,11,24,36,],[-1,0,-258,-243,-258,-242,-246,-244,-245,]),'IMAGINARY_LIT':([66,92,95,97,98,103,104,108,116,119,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,248,252,254,258,260,261,266,267,284,290,296,303,309,316,321,325,327,334,335,336,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[-116,-116,-116,-160,-159,-116,-158,149,-116,-161,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-258,-116,-116,-116,-116,-116,-116,-43,-116,-116,-116,-116,-116,-116,-116,-116,-42,-116,-116,-116,-116,-206,-196,-207,-198,-201,-204,-208,-197,-205,-116,-202,-203,-199,-200,-116,-208,-116,-116,-116,-116,-258,]),'PD':([299,],[336,]),'MODULO':([94,100,101,105,106,111,112,117,118,122,143,145,148,149,150,151,152,154,155,158,160,181,210,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,238,241,253,255,257,259,270,272,273,274,275,279,311,314,324,326,328,339,344,354,374,376,377,379,380,387,391,392,396,400,],[-122,-88,-90,-91,-118,-133,-155,-87,177,-120,177,-156,-157,-112,-111,-110,-124,-121,-125,-113,177,-92,177,-127,-89,177,177,-145,177,177,177,177,177,177,177,177,-151,177,177,177,177,-146,177,177,-98,-118,177,-126,-123,177,-99,177,177,-130,-162,-100,177,-118,177,-128,177,177,-118,177,177,177,177,177,177,177,177,-129,177,177,177,]),'STRING':([32,34,35,41,46,55,66,84,87,92,93,95,97,98,99,103,104,116,119,120,124,127,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,196,198,212,234,243,248,250,251,252,254,258,260,261,265,266,267,284,290,296,303,309,316,321,325,327,334,335,336,348,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[-57,63,-56,63,63,63,63,63,-58,63,63,63,-160,-159,63,63,-158,63,-161,63,63,-59,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-35,-56,63,63,63,-258,63,-34,63,63,63,63,63,63,63,-43,63,63,63,63,63,63,63,63,-42,63,63,63,63,63,-206,-196,-207,-198,-201,-204,-208,-197,-205,63,-202,-203,-199,-200,63,-208,63,63,63,63,-258,]),'FOR':([248,266,267,327,334,415,],[-258,303,-43,-42,303,-258,]),'PACKAGE':([0,],[2,]),'COMPARE_AND':([94,100,101,105,106,111,112,117,118,122,143,145,148,149,150,151,152,154,155,158,160,181,210,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,238,241,253,255,257,259,270,272,273,274,275,279,311,314,324,326,328,339,344,354,374,376,377,379,380,387,391,392,396,400,],[-122,-88,-90,-91,-118,-133,-155,-87,176,-120,176,-156,-157,-112,-111,-110,-124,-121,-125,-113,176,-92,176,-127,-89,-144,-137,-145,-152,-143,176,-148,-150,-136,-140,-149,-151,-138,-139,-147,-135,-146,-142,-141,-98,-118,176,-126,-123,176,-99,176,176,-130,-162,-100,176,-118,176,-128,176,176,-118,176,176,176,176,176,176,176,176,-129,176,176,176,]),'LSHIFT_EQUAL':([94,100,101,105,106,111,112,117,122,145,148,149,150,151,152,154,155,158,181,203,204,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,253,255,259,270,273,274,275,311,313,314,324,339,343,344,354,391,],[-122,-88,-90,-91,-118,-133,-155,-87,-120,-156,-157,-112,-111,-110,-124,-121,-125,-113,-92,-60,-62,-127,-89,-144,-137,-145,-152,-143,-134,-148,-150,-136,-140,-149,-151,-138,-139,-147,-135,-146,-142,-141,-98,-126,-123,-99,-61,-130,-162,-100,-118,357,-258,-128,-118,357,-258,-258,-129,]),'XOR':([94,100,101,105,106,111,112,117,118,122,143,145,148,149,150,151,152,154,155,158,160,181,210,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,238,241,253,255,257,259,270,272,273,274,275,279,311,314,324,326,328,339,344,354,374,376,377,379,380,387,391,392,396,400,],[-122,-88,-90,-91,-118,-133,-155,-87,165,-120,165,-156,-157,-112,-111,-110,-124,-121,-125,-113,165,-92,165,-127,-89,-144,165,-145,-152,-143,165,-148,-150,165,-140,-149,-151,-138,-139,-147,165,-146,165,-141,-98,-118,165,-126,-123,165,-99,165,165,-130,-162,-100,165,-118,165,-128,165,165,-118,165,165,165,165,165,165,165,165,-129,165,165,165,]),'EQUALS':([46,54,56,57,58,59,61,62,63,65,68,69,71,72,75,80,90,91,94,100,101,105,106,111,112,117,122,126,144,145,146,147,148,149,150,151,152,154,155,158,181,203,204,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,253,255,259,262,264,270,273,274,275,311,313,314,324,339,343,344,348,354,391,],[84,-11,-3,-4,92,-2,-15,-12,-9,-14,-6,-7,-8,-13,-5,134,-28,-27,-122,-88,-90,-91,-118,-133,-155,-87,-120,-10,-119,-156,-21,-16,-157,-112,-111,-110,-124,-121,-125,-113,-92,-60,-62,-127,-19,-89,-144,-137,-145,-152,-143,-134,-148,-150,-136,-140,-149,-151,-138,-139,-147,-135,-146,-142,-141,-98,-126,-123,-99,-17,-22,-61,-130,-162,-100,-118,363,-258,-128,-118,383,-258,84,-258,-129,]),'ELSE':([323,390,],[-40,402,]),'PLUSEQUAL':([94,100,101,105,106,111,112,117,122,145,148,149,150,151,152,154,155,158,181,203,204,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,253,255,259,270,273,274,275,311,313,314,324,339,343,344,354,391,],[-122,-88,-90,-91,-118,-133,-155,-87,-120,-156,-157,-112,-111,-110,-124,-121,-125,-113,-92,-60,-62,-127,-89,-144,-137,-145,-152,-143,-134,-148,-150,-136,-140,-149,-151,-138,-139,-147,-135,-146,-142,-141,-98,-126,-123,-99,-61,-130,-162,-100,-118,364,-258,-128,-118,364,-258,-258,-129,]),'RANGE':([303,338,341,345,383,],[-258,381,-231,-232,-233,]),'GREATERTHAN':([94,100,101,105,106,111,112,117,118,122,143,145,148,149,150,151,152,154,155,158,160,181,210,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,238,241,253,255,257,259,270,272,273,274,275,279,311,314,324,326,328,339,344,354,374,376,377,379,380,387,391,392,396,400,],[-122,-88,-90,-91,-118,-133,-155,-87,174,-120,174,-156,-157,-112,-111,-110,-124,-121,-125,-113,174,-92,174,-127,-89,174,174,-145,174,174,174,-148,-150,174,-140,-149,-151,-138,-139,-147,174,-146,174,-141,-98,-118,174,-126,-123,174,-99,174,174,-130,-162,-100,174,-118,174,-128,174,174,-118,174,174,174,174,174,174,174,174,-129,174,174,174,]),'LSQUARE':([32,34,35,41,46,55,66,67,84,87,92,94,95,97,98,99,100,101,103,104,105,106,112,116,117,119,120,122,124,127,129,131,134,149,150,151,152,153,154,155,156,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,194,196,198,211,212,214,234,236,238,243,248,250,251,252,253,254,255,258,259,260,261,265,266,267,273,274,275,284,290,296,303,309,311,316,321,324,325,327,334,335,336,339,348,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,391,404,405,415,],[-57,66,-56,66,66,66,66,124,66,-58,66,-122,66,-160,-159,66,-88,-90,66,-158,-91,-118,156,66,-87,-161,66,-120,66,-59,66,66,66,-112,-111,-110,-124,66,-121,-125,66,-113,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-92,66,66,-35,-56,-127,66,-89,66,-98,-118,66,-258,66,-34,66,-126,66,-123,66,-99,66,66,66,66,-43,-130,-162,-100,66,66,66,66,66,-118,66,66,-128,66,-42,66,66,66,-118,66,66,-206,-196,-207,-198,-201,-204,-208,-197,-205,66,-202,-203,-199,-200,66,-208,66,66,-129,66,66,-258,]),'VAR':([5,8,9,10,11,24,36,248,266,267,327,334,415,],[-258,-243,-258,21,-246,-244,-245,-258,21,-43,-42,21,-258,]),'OREQUAL':([94,100,101,105,106,111,112,117,122,145,148,149,150,151,152,154,155,158,181,203,204,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,253,255,259,270,273,274,275,311,313,314,324,339,343,344,354,391,],[-122,-88,-90,-91,-118,-133,-155,-87,-120,-156,-157,-112,-111,-110,-124,-121,-125,-113,-92,-60,-62,-127,-89,-144,-137,-145,-152,-143,-134,-148,-150,-136,-140,-149,-151,-138,-139,-147,-135,-146,-142,-141,-98,-126,-123,-99,-61,-130,-162,-100,-118,368,-258,-128,-118,368,-258,-258,-129,]),'TYPECAST':([66,92,95,97,98,103,104,116,119,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,248,252,254,258,260,261,266,267,284,290,296,303,309,316,321,325,327,334,335,336,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[120,120,120,-160,-159,120,-158,120,-161,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,-258,120,120,120,120,120,120,-43,120,120,120,120,120,120,120,120,-42,120,120,120,120,-206,-196,-207,-198,-201,-204,-208,-197,-205,120,-202,-203,-199,-200,120,-208,120,120,120,120,-258,]),'AND':([66,92,94,95,97,98,100,101,103,104,105,106,111,112,116,117,118,119,122,134,143,145,148,149,150,151,152,153,154,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,210,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,238,241,248,252,253,254,255,257,258,259,260,261,266,267,270,272,273,274,275,279,284,290,296,303,309,311,314,316,321,324,325,326,327,328,334,335,336,339,344,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,374,376,377,379,380,381,383,384,386,387,391,392,396,400,404,405,415,],[119,119,-122,119,-160,-159,-88,-90,119,-158,-91,-118,-133,-155,119,-87,164,-161,-120,119,164,-156,-157,-112,-111,-110,-124,119,-121,-125,119,-113,164,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-92,119,164,-127,-89,-144,164,-145,-152,164,164,-148,-150,164,-140,-149,-151,-138,-139,-147,164,-146,164,-141,119,-98,-118,164,-258,119,-126,119,-123,164,119,-99,119,119,119,-43,164,164,-130,-162,-100,164,119,119,119,119,119,-118,164,119,119,-128,119,164,-42,164,119,119,119,-118,164,164,119,-206,-196,-207,-198,-201,-204,-208,-197,-205,119,-202,-203,-199,-200,164,164,164,164,164,119,-208,119,119,164,-129,164,164,164,119,119,-258,]),'MAP':([32,34,35,41,46,55,66,84,87,92,95,97,98,99,103,104,116,119,120,124,127,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,196,198,212,234,243,248,250,251,252,254,258,260,261,265,266,267,284,290,296,303,309,316,321,325,327,334,335,336,348,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[-57,67,-56,67,67,67,67,67,-58,67,67,-160,-159,67,67,-158,67,-161,67,67,-59,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-35,-56,67,67,67,-258,67,-34,67,67,67,67,67,67,67,-43,67,67,67,67,67,67,67,67,-42,67,67,67,67,67,-206,-196,-207,-198,-201,-204,-208,-197,-205,67,-202,-203,-199,-200,67,-208,67,67,67,67,-258,]),'RETURN':([248,266,267,327,334,415,],[-258,296,-43,-42,296,-258,]),'STRUCT':([32,34,35,41,46,55,66,73,84,87,92,95,97,98,99,103,104,116,119,120,124,127,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,196,198,212,234,243,248,250,251,252,254,258,260,261,265,266,267,284,290,296,303,309,316,321,325,327,334,335,336,348,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[-57,-23,-56,-23,-23,-23,-23,125,-23,-58,-23,-23,-160,-159,-23,-23,-158,-23,-161,-23,-23,-59,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-35,-56,-23,-23,-23,-258,-23,-34,-23,-23,-23,-23,-23,-23,-23,-43,-23,-23,-23,-23,-23,-23,-23,-23,-42,-23,-23,-23,-23,-23,-206,-196,-207,-198,-201,-204,-208,-197,-205,-23,-202,-203,-199,-200,-23,-208,-23,-23,-23,-23,-258,]),'CASE':([266,267,327,385,397,398,409,410,415,416,417,],[-41,-43,-42,-258,-216,405,-217,-258,-258,405,-218,]),'LESSTHAN_EQUAL':([94,100,101,105,106,111,112,117,118,122,143,145,148,149,150,151,152,154,155,158,160,181,210,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,238,241,253,255,257,259,270,272,273,274,275,279,311,314,324,326,328,339,344,354,374,376,377,379,380,387,391,392,396,400,],[-122,-88,-90,-91,-118,-133,-155,-87,170,-120,170,-156,-157,-112,-111,-110,-124,-121,-125,-113,170,-92,170,-127,-89,170,170,-145,170,170,170,-148,-150,170,-140,-149,-151,-138,-139,-147,170,-146,170,-141,-98,-118,170,-126,-123,170,-99,170,170,-130,-162,-100,170,-118,170,-128,170,170,-118,170,170,170,170,170,170,170,170,-129,170,170,170,]),'INT':([32,34,35,41,46,55,66,84,87,92,93,95,97,98,99,103,104,116,119,120,124,127,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,196,198,212,234,243,248,250,251,252,254,258,260,261,265,266,267,284,290,296,303,309,316,321,325,327,334,335,336,348,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[-57,68,-56,68,68,68,68,68,-58,68,68,68,-160,-159,68,68,-158,68,-161,68,68,-59,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-35,-56,68,68,68,-258,68,-34,68,68,68,68,68,68,68,-43,68,68,68,68,68,68,68,68,-42,68,68,68,68,68,-206,-196,-207,-198,-201,-204,-208,-197,-205,68,-202,-203,-199,-200,68,-208,68,68,68,68,-258,]),'TIMESEQUAL':([94,100,101,105,106,111,112,117,122,145,148,149,150,151,152,154,155,158,181,203,204,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,253,255,259,270,273,274,275,311,313,314,324,339,343,344,354,391,],[-122,-88,-90,-91,-118,-133,-155,-87,-120,-156,-157,-112,-111,-110,-124,-121,-125,-113,-92,-60,-62,-127,-89,-144,-137,-145,-152,-143,-134,-148,-150,-136,-140,-149,-151,-138,-139,-147,-135,-146,-142,-141,-98,-126,-123,-99,-61,-130,-162,-100,-118,369,-258,-128,-118,369,-258,-258,-129,]),'MINUSEQUAL':([94,100,101,105,106,111,112,117,122,145,148,149,150,151,152,154,155,158,181,203,204,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,253,255,259,270,273,274,275,311,313,314,324,339,343,344,354,391,],[-122,-88,-90,-91,-118,-133,-155,-87,-120,-156,-157,-112,-111,-110,-124,-121,-125,-113,-92,-60,-62,-127,-89,-144,-137,-145,-152,-143,-134,-148,-150,-136,-140,-149,-151,-138,-139,-147,-135,-146,-142,-141,-98,-126,-123,-99,-61,-130,-162,-100,-118,360,-258,-128,-118,360,-258,-258,-129,]),'FLOAT':([32,34,35,41,46,55,66,84,87,92,93,95,97,98,99,103,104,116,119,120,124,127,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,196,198,212,234,243,248,250,251,252,254,258,260,261,265,266,267,284,290,296,303,309,316,321,325,327,334,335,336,348,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[-57,69,-56,69,69,69,69,69,-58,69,69,69,-160,-159,69,69,-158,69,-161,69,69,-59,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-35,-56,69,69,69,-258,69,-34,69,69,69,69,69,69,69,-43,69,69,69,69,69,69,69,69,-42,69,69,69,69,69,-206,-196,-207,-198,-201,-204,-208,-197,-205,69,-202,-203,-199,-200,69,-208,69,69,69,69,-258,]),'FLOAT_LIT':([66,92,95,97,98,103,104,109,116,119,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,248,252,254,258,260,261,266,267,284,290,296,303,309,316,321,325,327,334,335,336,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[-115,-115,-115,-160,-159,-115,-158,150,-115,-161,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-258,-115,-115,-115,-115,-115,-115,-43,-115,-115,-115,-115,-115,-115,-115,-115,-42,-115,-115,-115,-115,-206,-196,-207,-198,-201,-204,-208,-197,-205,-115,-202,-203,-199,-200,-115,-208,-115,-115,-115,-115,-258,]),'DEFAULT':([266,267,327,385,397,398,409,410,415,416,417,],[-41,-43,-42,-258,-216,407,-217,-258,-258,407,-218,]),'BREAK':([248,266,267,327,334,415,],[-258,315,-43,-42,315,-258,]),'INT_LIT':([66,92,95,97,98,103,104,110,116,119,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,248,252,254,258,260,261,266,267,284,290,296,303,309,316,321,325,327,334,335,336,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[-114,-114,-114,-160,-159,-114,-158,151,-114,-161,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-258,-114,-114,-114,-114,-114,-114,-43,-114,-114,-114,-114,-114,-114,-114,-114,-42,-114,-114,-114,-114,-206,-196,-207,-198,-201,-204,-208,-197,-205,-114,-202,-203,-199,-200,-114,-208,-114,-114,-114,-114,-258,]),'CONTINUE':([248,266,267,327,334,415,],[-258,307,-43,-42,307,-258,]),'BOOL':([32,34,35,41,46,55,66,84,87,92,93,95,97,98,99,103,104,116,119,120,124,127,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,196,198,212,234,243,248,250,251,252,254,258,260,261,265,266,267,284,290,296,303,309,316,321,325,327,334,335,336,348,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[-57,71,-56,71,71,71,71,71,-58,71,71,71,-160,-159,71,71,-158,71,-161,71,71,-59,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-35,-56,71,71,71,-258,71,-34,71,71,71,71,71,71,71,-43,71,71,71,71,71,71,71,71,-42,71,71,71,71,71,-206,-196,-207,-198,-201,-204,-208,-197,-205,71,-202,-203,-199,-200,71,-208,71,71,71,71,-258,]),'PS':([299,],[335,]),'STRING_LIT':([7,13,25,27,28,29,30,47,48,66,92,95,97,98,103,104,113,116,119,134,140,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,248,252,254,258,260,261,266,267,284,290,296,303,309,316,321,325,327,334,335,336,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[-248,-258,-258,-256,-255,50,-254,-252,-258,-117,-117,-117,-160,-159,-117,-158,158,-117,-161,-117,-251,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-258,-117,-117,-117,-117,-117,-117,-43,-117,-117,-117,-117,-117,-117,-117,-117,-42,-117,-117,-117,-117,-206,-196,-207,-198,-201,-204,-208,-197,-205,-117,-202,-203,-199,-200,-117,-208,-117,-117,-117,-117,-258,]),'NOT':([66,92,95,97,98,103,104,116,119,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,248,252,254,258,260,261,266,267,284,290,296,303,309,316,321,325,327,334,335,336,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[103,103,103,-160,-159,103,-158,103,-161,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-258,103,103,103,103,103,103,-43,103,103,103,103,103,103,103,103,-42,103,103,103,103,-206,-196,-207,-198,-201,-204,-208,-197,-205,103,-202,-203,-199,-200,103,-208,103,103,103,103,-258,]),'ANDEQUAL':([94,100,101,105,106,111,112,117,122,145,148,149,150,151,152,154,155,158,181,203,204,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,253,255,259,270,273,274,275,311,313,314,324,339,343,344,354,391,],[-122,-88,-90,-91,-118,-133,-155,-87,-120,-156,-157,-112,-111,-110,-124,-121,-125,-113,-92,-60,-62,-127,-89,-144,-137,-145,-152,-143,-134,-148,-150,-136,-140,-149,-151,-138,-139,-147,-135,-146,-142,-141,-98,-126,-123,-99,-61,-130,-162,-100,-118,367,-258,-128,-118,367,-258,-258,-129,]),'DECREMENT':([94,100,101,105,106,111,112,117,122,145,148,149,150,151,152,154,155,158,181,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,253,255,259,273,274,275,311,314,324,339,344,354,391,],[-122,-88,-90,-91,-118,-133,-155,-87,-120,-156,-157,-112,-111,-110,-124,-121,-125,-113,-92,-127,-89,-144,-137,-145,-152,-143,-134,-148,-150,-136,-140,-149,-151,-138,-139,-147,-135,-146,-142,-141,-98,-126,-123,-99,-130,-162,-100,-118,372,-128,-118,372,372,-129,]),'TYPE':([5,8,9,10,11,24,32,34,35,36,41,46,55,66,84,87,92,93,95,97,98,99,103,104,116,119,120,124,127,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,196,198,212,234,243,248,250,251,252,254,258,260,261,265,266,267,284,290,296,303,309,316,321,325,327,334,335,336,348,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,381,383,384,386,404,405,415,],[-258,-243,-258,23,-246,-244,-57,74,-56,-245,74,74,74,74,74,-58,74,74,74,-160,-159,74,74,-158,74,-161,74,74,-59,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-35,-56,74,74,74,-258,74,-34,74,74,74,74,74,74,305,-43,74,74,74,74,74,74,74,74,-42,305,74,74,74,74,-206,-196,-207,-198,-201,-204,-208,-197,-205,74,-202,-203,-199,-200,74,-208,74,74,74,74,-258,]),'OR':([94,100,101,105,106,111,112,117,118,122,143,145,148,149,150,151,152,154,155,158,160,181,210,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,238,241,253,255,257,259,270,272,273,274,275,279,311,314,324,326,328,339,344,354,374,376,377,379,380,387,391,392,396,400,],[-122,-88,-90,-91,-118,-133,-155,-87,178,-120,178,-156,-157,-112,-111,-110,-124,-121,-125,-113,178,-92,178,-127,-89,-144,178,-145,-152,-143,178,-148,-150,178,-140,-149,-151,-138,-139,-147,178,-146,-142,-141,-98,-118,178,-126,-123,178,-99,178,178,-130,-162,-100,178,-118,178,-128,178,178,-118,178,178,178,178,178,178,178,178,-129,178,178,178,]),'SCAN':([248,266,267,327,334,415,],[-258,316,-43,-42,316,-258,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([193,],[246,]),'Conversion':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'ContinueStmt':([266,334,],[283,283,]),'ExpressionRep':([143,314,344,354,],[203,203,203,203,]),'ExpressionStmt':([266,303,309,334,404,],[285,285,285,285,285,]),'ScanStmt':([266,334,],[286,286,]),'Statement':([266,334,],[287,378,]),'IfStmt':([266,334,402,],[288,288,411,]),'FallThroughStmt':([266,334,],[289,289,]),'StatementRep':([248,415,],[266,266,]),'TypeToken':([34,41,46,55,66,84,92,93,95,99,103,116,120,124,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,212,234,243,250,252,254,258,260,261,265,266,284,290,296,303,309,316,321,325,334,335,336,348,356,366,381,384,386,404,405,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'AliasDecl':([23,81,305,],[43,43,43,]),'TypeName':([34,41,46,55,66,84,92,93,95,99,103,116,120,124,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,212,234,243,250,252,254,258,260,261,265,266,284,290,296,303,309,316,321,325,334,335,336,348,356,366,381,384,386,404,405,],[59,59,59,59,102,59,102,144,102,59,102,102,59,59,59,59,102,102,102,59,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,59,59,102,59,59,102,102,102,102,102,59,102,102,102,102,102,102,102,102,102,102,102,102,59,102,102,102,102,102,102,102,]),'ExprCaseClause':([398,416,],[409,409,]),'ParametersList':([131,],[197,]),'ParameterDecl':([131,250,],[199,269,]),'FuncScope':([34,41,46,55,66,84,92,95,99,103,116,120,124,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,212,234,243,250,252,254,258,260,261,265,266,284,290,296,303,309,316,321,325,334,335,336,348,356,366,381,384,386,404,405,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'FunctionName':([20,],[38,]),'LabeledStmt':([266,334,],[294,294,]),'KeyType':([124,],[184,]),'StatementList':([248,415,],[268,417,]),'TypeAssertion':([112,],[155,]),'ConditionOpt':([384,],[395,]),'ElementType':([99,159,243,],[147,213,262,]),'RetTypeSet':([130,],[193,]),'PointerType':([34,41,46,55,84,99,120,124,129,131,159,194,212,243,250,265,348,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'EndScope':([128,130,375,],[186,192,389,]),'VarSpecRep':([40,],[78,]),'VarDecl':([10,266,334,],[22,22,22,]),'PrintStmt':([266,334,],[295,295,]),'ConstSpecRep':([33,],[52,]),'PrimaryExpr':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'TypeSpec':([23,81,305,],[45,138,45,]),'Parameters':([77,129,],[129,187,]),'UnaryOp':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'PackageName':([2,13,48,],[6,28,28,]),'SourceFile':([0,],[3,]),'ExpressionListPureOpt':([296,],[331,]),'Label':([266,293,307,315,334,],[297,330,351,351,297,]),'FunctionDecl':([10,],[15,]),'TopLevelDecl':([10,],[16,]),'ExprSwitchStmt':([266,334,],[298,298,]),'IdentifierList':([14,21,52,78,131,244,250,],[34,41,34,41,194,265,194,]),'TypeLit':([34,41,46,55,84,99,120,124,129,131,159,194,212,243,250,265,348,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'ImportDeclRep':([5,],[9,]),'GoStmt':([266,334,],[300,300,]),'DeferStmt':([266,334,],[301,301,]),'PackageClause':([0,],[1,]),'ResultOpt':([129,],[189,]),'Selector':([112,],[154,]),'RangeClause':([303,],[337,]),'IncDecStmt':([266,303,309,334,404,],[292,292,292,292,292,]),'Key':([182,258,],[237,237,]),'GotoStmt':([266,334,],[302,302,]),'TopLevelDeclRep':([9,],[10,]),'C':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'Operand':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'S':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'CompositeLit':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'assign_op':([313,343,],[366,366,]),'Signature':([77,],[130,]),'Block':([193,319,342,376,402,],[247,375,382,390,412,]),'ExpressionIdentListOpt':([303,],[338,]),'ExprCaseClauseList':([385,410,],[398,416,]),'SwitchStmt':([266,334,],[306,306,]),'VarSpec':([21,78,],[39,133,]),'Result':([129,],[191,]),'Assignment':([266,303,309,334,404,],[291,291,291,291,291,]),'ExpressionListTypeOpt':([153,],[206,]),'QualifiedIdent':([34,41,46,55,66,84,92,93,95,99,103,116,120,124,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,212,234,243,250,252,254,258,260,261,265,266,284,290,296,303,309,316,321,325,334,335,336,348,356,366,381,384,386,404,405,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'Literal':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'ImportDecl':([9,],[12,]),'OperandName':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'AssignOp':([313,343,],[358,358,]),'LabelOpt':([307,315,],[350,373,]),'FieldDeclRep':([185,],[244,]),'start':([0,],[4,]),'Declaration':([10,266,334,],[17,310,310,]),'Condition':([303,384,],[340,393,]),'StructType':([34,41,46,55,66,84,92,95,99,103,116,120,124,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,212,234,243,250,252,254,258,260,261,265,266,284,290,296,303,309,316,321,325,334,335,336,348,356,366,381,384,386,404,405,],[62,62,62,62,123,62,123,123,62,123,123,62,62,62,62,123,123,123,62,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,62,62,123,62,62,123,123,123,123,123,62,123,123,123,123,123,123,123,123,123,123,123,123,62,123,123,123,123,123,123,123,]),'ConstSpec':([14,52,],[31,88,]),'F':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'epsilon':([5,9,13,25,33,34,40,44,48,80,129,143,153,156,185,248,254,266,296,303,307,309,314,315,334,344,354,384,385,386,390,404,410,415,],[8,11,27,47,53,64,79,82,27,135,190,204,205,209,245,267,209,312,332,341,349,353,204,349,312,204,204,394,397,209,401,312,397,267,]),'LiteralValue':([121,182,258,260,261,],[181,240,240,278,278,]),'ExpressionList':([92,134,153,266,296,303,309,334,366,404,405,],[142,201,207,313,333,343,313,313,388,313,414,]),'SimpleStmt':([266,303,309,334,404,],[317,346,355,317,413,]),'ImportSpecRep':([25,],[48,]),'Expression':([66,92,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[118,143,160,143,143,210,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,241,257,270,272,241,279,279,314,326,328,143,344,354,374,376,377,314,379,380,387,143,392,396,400,314,143,]),'ImportPath':([29,],[49,]),'ExprSwitchCase':([398,416,],[406,406,]),'ExpressionOpt':([156,254,309,386,],[208,271,352,399,]),'IdentifierRep':([14,21,52,78,131,244,250,],[32,32,32,32,32,32,32,]),'TypeExprListOpt':([34,],[70,]),'FieldDecl':([244,],[263,]),'ReturnStmt':([266,334,],[304,304,]),'ConstDecl':([10,266,334,],[18,18,18,]),'ExpressionIdentifier':([303,],[345,]),'Slice':([112,],[152,]),'ArrayType':([34,41,46,55,66,84,92,95,99,103,116,120,124,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,212,234,243,250,252,254,258,260,261,265,266,284,290,296,303,309,316,321,325,334,335,336,348,356,366,381,384,386,404,405,],[54,54,54,54,96,54,96,96,54,96,96,54,54,54,54,96,96,96,54,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,54,54,96,54,54,96,96,96,96,96,54,96,96,96,96,96,96,96,96,96,96,96,96,54,96,96,96,96,96,96,96,]),'ForStmt':([266,334,],[318,318,]),'ElementList':([182,],[235,]),'Function':([77,],[128,]),'ImportSpec':([13,48,],[26,86,]),'Type':([34,41,46,55,84,99,120,124,129,131,159,194,212,243,250,265,348,],[58,80,83,90,139,146,180,183,188,195,146,249,256,146,195,282,83,]),'TypeSpecRep':([44,],[81,]),'CreateScope':([38,266,334,],[77,319,319,]),'SliceType':([34,41,46,55,66,84,92,95,99,103,116,120,124,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,212,234,243,250,252,254,258,260,261,265,266,284,290,296,303,309,316,321,325,334,335,336,348,356,366,381,384,386,404,405,],[61,61,61,61,107,61,107,107,61,107,107,61,61,61,61,107,107,107,61,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,61,61,107,61,61,107,107,107,107,107,61,107,107,107,107,107,107,107,107,107,107,107,107,61,107,107,107,107,107,107,107,]),'TypeDecl':([10,266,334,],[19,19,19,]),'BaseType':([55,],[91,]),'I':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'UnaryExpr':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[111,111,145,148,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'Element':([182,258,260,261,],[239,239,277,280,]),'ArrayLength':([66,],[114,]),'MapType':([34,41,46,55,66,84,92,95,99,103,116,120,124,129,131,134,153,156,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,194,212,234,243,250,252,254,258,260,261,265,266,284,290,296,303,309,316,321,325,334,335,336,348,356,366,381,384,386,404,405,],[65,65,65,65,115,65,115,115,65,115,115,65,65,65,65,115,115,115,65,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,65,65,115,65,65,115,115,115,115,115,65,115,115,115,115,115,115,115,115,115,115,115,115,65,115,115,115,115,115,115,115,]),'ForClause':([303,],[347,]),'ShortVarDecl':([266,303,309,334,404,],[320,320,320,320,320,]),'ConditionBlockOpt':([303,],[342,]),'TypeDef':([23,81,305,],[42,42,42,]),'LiteralType':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'PackageNameDotOpt':([13,48,],[29,29,]),'BreakStmt':([266,334,],[322,322,]),'KeyedElement':([182,258,],[242,276,]),'BasicLit':([66,92,95,103,116,134,153,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,234,252,254,258,260,261,266,284,290,296,303,309,316,321,325,334,335,336,356,366,381,384,386,404,405,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'ExpressionListOpt':([80,],[136,]),'ElseOpt':([390,],[403,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',143),
  ('Type -> TypeName','Type',1,'p_type','parser.py',152),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',153),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','parser.py',157),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',158),
  ('TypeToken -> INT','TypeToken',1,'p_type_token','parser.py',171),
  ('TypeToken -> FLOAT','TypeToken',1,'p_type_token','parser.py',172),
  ('TypeToken -> BOOL','TypeToken',1,'p_type_token','parser.py',173),
  ('TypeToken -> STRING','TypeToken',1,'p_type_token','parser.py',174),
  ('TypeToken -> TYPE IDENTIFIER','TypeToken',2,'p_type_token','parser.py',175),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',193),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',194),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',195),
  ('TypeLit -> MapType','TypeLit',1,'p_type_lit','parser.py',196),
  ('TypeLit -> SliceType','TypeLit',1,'p_type_lit','parser.py',197),
  ('SliceType -> LSQUARE RSQUARE ElementType','SliceType',3,'p_slice_type','parser.py',207),
  ('MapType -> MAP LSQUARE KeyType RSQUARE ElementType','MapType',5,'p_map_type','parser.py',215),
  ('KeyType -> Type','KeyType',1,'p_key_type','parser.py',222),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE ElementType','ArrayType',4,'p_array_type','parser.py',229),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser.py',238),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',242),
  ('StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL','StructType',5,'p_struct_type','parser.py',250),
  ('FuncScope -> <empty>','FuncScope',0,'p_func_scope','parser.py',255),
  ('FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON','FieldDeclRep',3,'p_field_decl_rep','parser.py',259),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',260),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_field_decl','parser.py',270),
  ('PointerType -> MULTIPLY BaseType','PointerType',2,'p_point_type','parser.py',288),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',294),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_sign','parser.py',301),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',319),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',320),
  ('Result -> Parameters','Result',1,'p_result','parser.py',324),
  ('Result -> Type','Result',1,'p_result','parser.py',325),
  ('Parameters -> LPAREN ParametersList RPAREN','Parameters',3,'p_params','parser.py',330),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_params','parser.py',331),
  ('ParametersList -> ParameterDecl','ParametersList',1,'p_param_list','parser.py',338),
  ('ParametersList -> ParametersList COMMA ParameterDecl','ParametersList',3,'p_param_list','parser.py',339),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_param_decl','parser.py',349),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_param_decl','parser.py',350),
  ('Block -> LCURL StatementList RCURL','Block',3,'p_block','parser.py',369),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',373),
  ('StatementRep -> StatementRep Statement SEMICOLON','StatementRep',3,'p_stat_rep','parser.py',377),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',378),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',389),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',390),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',391),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',395),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',396),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',403),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',404),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON','ConstSpecRep',3,'p_const_spec_rep','parser.py',411),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',412),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',420),
  ('TypeExprListOpt -> Type EQUALS ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',436),
  ('TypeExprListOpt -> epsilon','TypeExprListOpt',1,'p_type_expr_list','parser.py',437),
  ('IdentifierList -> IDENTIFIER','IdentifierList',1,'p_identifier_list','parser.py',452),
  ('IdentifierList -> IdentifierRep','IdentifierList',1,'p_identifier_list','parser.py',453),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',469),
  ('IdentifierRep -> IDENTIFIER COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',470),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',500),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',510),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',511),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',528),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',529),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON','TypeSpecRep',3,'p_type_spec_rep','parser.py',536),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',537),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',545),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',546),
  ('AliasDecl -> IDENTIFIER EQUALS Type','AliasDecl',3,'p_alias_decl','parser.py',549),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_type_def','parser.py',556),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',563),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',564),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOLON','VarSpecRep',3,'p_var_spec_rep','parser.py',571),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',572),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',580),
  ('ExpressionListOpt -> EQUALS ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',611),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',612),
  ('ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',622),
  ('FunctionDecl -> FUNC FunctionName CreateScope Function EndScope','FunctionDecl',5,'p_func_decl','parser.py',641),
  ('FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope','FunctionDecl',5,'p_func_decl','parser.py',642),
  ('CreateScope -> <empty>','CreateScope',0,'p_create_scope','parser.py',655),
  ('EndScope -> <empty>','EndScope',0,'p_end_scope','parser.py',659),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',663),
  ('Function -> Signature RetTypeSet FunctionBody','Function',3,'p_func','parser.py',677),
  ('RetTypeSet -> <empty>','RetTypeSet',0,'p_ret_type_set','parser.py',694),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',703),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',710),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',711),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',712),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',719),
  ('Literal -> CompositeLit','Literal',1,'p_literal','parser.py',720),
  ('CompositeLit -> LiteralType LiteralValue','CompositeLit',2,'p_composite_lit','parser.py',726),
  ('LiteralType -> StructType','LiteralType',1,'p_literal_type','parser.py',730),
  ('LiteralType -> ArrayType','LiteralType',1,'p_literal_type','parser.py',731),
  ('LiteralType -> SliceType','LiteralType',1,'p_literal_type','parser.py',732),
  ('LiteralType -> MapType','LiteralType',1,'p_literal_type','parser.py',733),
  ('LiteralType -> TypeName','LiteralType',1,'p_literal_type','parser.py',734),
  ('LiteralValue -> LCURL RCURL','LiteralValue',2,'p_literal_value','parser.py',738),
  ('LiteralValue -> LCURL ElementList RCURL','LiteralValue',3,'p_literal_value','parser.py',739),
  ('LiteralValue -> LCURL ElementList COMMA RCURL','LiteralValue',4,'p_literal_value','parser.py',740),
  ('ElementList -> KeyedElement','ElementList',1,'p_element_list','parser.py',749),
  ('ElementList -> ElementList COMMA KeyedElement','ElementList',3,'p_element_list','parser.py',750),
  ('KeyedElement -> Element','KeyedElement',1,'p_keyed_element','parser.py',758),
  ('KeyedElement -> Key COLON Element','KeyedElement',3,'p_keyed_element','parser.py',759),
  ('KeyedElement -> IDENTIFIER COLON Element','KeyedElement',3,'p_keyed_element','parser.py',760),
  ('Key -> Expression','Key',1,'p_key','parser.py',767),
  ('Key -> LiteralValue','Key',1,'p_key','parser.py',768),
  ('Element -> Expression','Element',1,'p_element','parser.py',772),
  ('Element -> LiteralValue','Element',1,'p_element','parser.py',773),
  ('BasicLit -> I INT_LIT','BasicLit',2,'p_basic_lit','parser.py',779),
  ('BasicLit -> F FLOAT_LIT','BasicLit',2,'p_basic_lit','parser.py',780),
  ('BasicLit -> C IMAGINARY_LIT','BasicLit',2,'p_basic_lit','parser.py',781),
  ('BasicLit -> S STRING_LIT','BasicLit',2,'p_basic_lit','parser.py',782),
  ('I -> <empty>','I',0,'p_I','parser.py',790),
  ('F -> <empty>','F',0,'p_F','parser.py',794),
  ('C -> <empty>','C',0,'p_C','parser.py',798),
  ('S -> <empty>','S',0,'p_S','parser.py',802),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',806),
  ('QualifiedIdent -> IDENTIFIER DOT TypeName','QualifiedIdent',3,'p_qualified_ident','parser.py',845),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',857),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_prim_expr','parser.py',858),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',859),
  ('PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE','PrimaryExpr',4,'p_prim_expr','parser.py',860),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',861),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser.py',862),
  ('PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN','PrimaryExpr',4,'p_prim_expr','parser.py',863),
  ('Selector -> DOT IDENTIFIER','Selector',2,'p_selector','parser.py',943),
  ('Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE','Slice',5,'p_slice','parser.py',947),
  ('Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE','Slice',7,'p_slice','parser.py',948),
  ('TypeAssertion -> DOT LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser.py',955),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',960),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',961),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser.py',967),
  ('Expression -> Expression COMPARE_OR Expression','Expression',3,'p_expr','parser.py',968),
  ('Expression -> Expression COMPARE_AND Expression','Expression',3,'p_expr','parser.py',969),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expr','parser.py',970),
  ('Expression -> Expression NOTEQUALS Expression','Expression',3,'p_expr','parser.py',971),
  ('Expression -> Expression LESSTHAN Expression','Expression',3,'p_expr','parser.py',972),
  ('Expression -> Expression GREATERTHAN Expression','Expression',3,'p_expr','parser.py',973),
  ('Expression -> Expression LESSTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',974),
  ('Expression -> Expression GREATERTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',975),
  ('Expression -> Expression OR Expression','Expression',3,'p_expr','parser.py',976),
  ('Expression -> Expression XOR Expression','Expression',3,'p_expr','parser.py',977),
  ('Expression -> Expression ANDXOR Expression','Expression',3,'p_expr','parser.py',978),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expr','parser.py',979),
  ('Expression -> Expression MODULO Expression','Expression',3,'p_expr','parser.py',980),
  ('Expression -> Expression LSHIFT Expression','Expression',3,'p_expr','parser.py',981),
  ('Expression -> Expression RSHIFT Expression','Expression',3,'p_expr','parser.py',982),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expr','parser.py',983),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expr','parser.py',984),
  ('Expression -> Expression MULTIPLY Expression','Expression',3,'p_expr','parser.py',985),
  ('Expression -> Expression AND Expression','Expression',3,'p_expr','parser.py',986),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',1033),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',1034),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',1038),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1039),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1040),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',1070),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',1071),
  ('UnaryOp -> MULTIPLY','UnaryOp',1,'p_unary_op','parser.py',1072),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser.py',1073),
  ('Conversion -> TYPECAST Type LPAREN Expression RPAREN','Conversion',5,'p_conversion','parser.py',1087),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',1094),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',1095),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',1096),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',1097),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',1098),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',1099),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',1100),
  ('Statement -> CreateScope Block EndScope','Statement',3,'p_statement','parser.py',1101),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',1102),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',1103),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',1104),
  ('Statement -> DeferStmt','Statement',1,'p_statement','parser.py',1105),
  ('Statement -> FallThroughStmt','Statement',1,'p_statement','parser.py',1106),
  ('Statement -> GoStmt','Statement',1,'p_statement','parser.py',1107),
  ('Statement -> PrintStmt','Statement',1,'p_statement','parser.py',1108),
  ('Statement -> ScanStmt','Statement',1,'p_statement','parser.py',1109),
  ('PrintStmt -> PRINT PD Expression','PrintStmt',3,'p_print_stmt','parser.py',1116),
  ('PrintStmt -> PRINT PS Expression','PrintStmt',3,'p_print_stmt','parser.py',1117),
  ('ScanStmt -> SCAN Expression','ScanStmt',2,'p_scan_stmt','parser.py',1125),
  ('FallThroughStmt -> FALLTHROUGH','FallThroughStmt',1,'p_fallthrough_stmt','parser.py',1132),
  ('GoStmt -> GO Expression','GoStmt',2,'p_go_stmt','parser.py',1136),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_defer_stmt','parser.py',1142),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',1147),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1148),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1149),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',1150),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',1151),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',1156),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',1174),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',1179),
  ('IncDecStmt -> Expression INCREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1185),
  ('IncDecStmt -> Expression DECREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1186),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',1193),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1227),
  ('AssignOp -> PLUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1231),
  ('AssignOp -> MINUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1232),
  ('AssignOp -> TIMESEQUAL','AssignOp',1,'p_AssignOp','parser.py',1233),
  ('AssignOp -> DIVIDE_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1234),
  ('AssignOp -> MODEQUAL','AssignOp',1,'p_AssignOp','parser.py',1235),
  ('AssignOp -> ANDEQUAL','AssignOp',1,'p_AssignOp','parser.py',1236),
  ('AssignOp -> OREQUAL','AssignOp',1,'p_AssignOp','parser.py',1237),
  ('AssignOp -> XOREQUAL','AssignOp',1,'p_AssignOp','parser.py',1238),
  ('AssignOp -> ANDXOR_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1239),
  ('AssignOp -> LSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1240),
  ('AssignOp -> RSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1241),
  ('AssignOp -> EQUALS','AssignOp',1,'p_AssignOp','parser.py',1242),
  ('IfStmt -> IF Expression Block ElseOpt','IfStmt',4,'p_if_statement','parser.py',1248),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1253),
  ('ElseOpt -> ELSE Block','ElseOpt',2,'p_else_opt','parser.py',1254),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1255),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',1266),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionOpt LCURL ExprCaseClauseList RCURL','ExprSwitchStmt',7,'p_ExprSwitchStmt','parser.py',1272),
  ('ExprSwitchStmt -> SWITCH ExpressionOpt LCURL ExprCaseClauseList RCURL','ExprSwitchStmt',5,'p_ExprSwitchStmt','parser.py',1273),
  ('ExprCaseClauseList -> epsilon','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',1281),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',1282),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',1290),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',1295),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',1296),
  ('ForStmt -> FOR ConditionBlockOpt Block','ForStmt',3,'p_for','parser.py',1310),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1314),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1315),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1316),
  ('ConditionBlockOpt -> RangeClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1317),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1322),
  ('ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt','ForClause',5,'p_forclause','parser.py',1326),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',1330),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',1331),
  ('RangeClause -> ExpressionIdentListOpt RANGE Expression','RangeClause',3,'p_rageclause','parser.py',1337),
  ('ExpressionIdentListOpt -> epsilon','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1341),
  ('ExpressionIdentListOpt -> ExpressionIdentifier','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1342),
  ('ExpressionIdentifier -> ExpressionList EQUALS','ExpressionIdentifier',2,'p_expressionidentifier','parser.py',1347),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',1354),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1358),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1359),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',1364),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',1368),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',1372),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',1373),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',1378),
  ('SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep','SourceFile',4,'p_source_file','parser.py',1385),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',1391),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON','ImportDeclRep',3,'p_import_decl_rep','parser.py',1392),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',1400),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',1401),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',1412),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',1417),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',1429),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',1430),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON','ImportSpecRep',3,'p_import_spec_rep','parser.py',1437),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',1438),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',1446),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1454),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1455),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1456),
  ('ImportPath -> STRING_LIT','ImportPath',1,'p_import_path','parser.py',1464),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',1473),
]
