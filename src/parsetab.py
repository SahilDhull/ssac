
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDENTIFIERrightEQUALSNOTleftINT_LITleftFLOAT_LITleftSTRING_LITleftCOMPARE_ORleftCOMPARE_ANDleftEQEQNOTEQUALSleftORleftXORleftANDANDXORleftLESSTHANGREATERTHANLESSTHAN_EQUALGREATERTHAN_EQUALleftPLUSMINUSleftLSHIFTRSHIFTleftMULTIPLYDIVIDEMODULOleftLPARENRPARENAND ANDEQUAL ANDXOR ANDXOR_EQUAL BOOL BREAK CASE COLON COMMA COMPARE_AND COMPARE_OR CONST CONTINUE DECREMENT DEFAULT DEFER DIVIDE DIVIDE_EQUAL DOT ELSE EQEQ EQUALS FALLTHROUGH FLOAT FLOAT_LIT FOR FUNC GO GOTO GREATERTHAN GREATERTHAN_EQUAL IDENTIFIER IF IMAGINARY_LIT IMPORT INCREMENT INT INT_LIT LCURL LESSTHAN LESSTHAN_EQUAL LPAREN LSHIFT LSHIFT_EQUAL LSQUARE MALLOC MAP MINUS MINUSEQUAL MODEQUAL MODULO MULTIPLY NOT NOTEQUALS OR OREQUAL PACKAGE PD PF PLUS PLUSEQUAL PRINT PS RCURL RETURN RPAREN RSHIFT RSHIFT_EQUAL RSQUARE SCAN SEMICOLON SHORT_ASSIGNMENT STRING STRING_LIT STRUCT SWITCH TIMESEQUAL TYPE TYPECAST VAR XOR XOREQUALstart : SourceFileType : TypeName\n            | TypeLitTypeName : TypeToken\n                | QualifiedIdentTypeToken : INT\n                 | FLOAT\n                 | BOOL\n                 | STRING\n                 | TYPE IDENTIFIERTypeLit : ArrayType\n               | ST StructType\n               | PointerType\n               | MapType\n               | SliceTypeST : SliceType : LSQUARE RSQUARE ElementTypeMapType : MAP LSQUARE KeyType RSQUARE ElementType KeyType : TypeArrayType : LSQUARE ArrayLength RSQUARE ElementType ArrayLength : I INT_LIT  ElementType : Type StructType : FuncScope STRUCT LCURL FieldDeclRep RCURL EndScopeFuncScope :  FieldDeclRep : FieldDeclRep FieldDecl Semi\n                  | epsilon  FieldDecl : IdentifierList TypePointerType : MULTIPLY BaseTypeBaseType : TypeSignature : Parameters ResultOptResultOpt : Result\n                 | epsilonResult : Parameters\n              | TypeParameters : LPAREN ParametersList RPAREN\n                  | LPAREN RPARENParametersList : ParameterDecl\n                      | ParametersList COMMA ParameterDeclParameterDecl : IdentifierList Type\n                     | TypeBlock : LCURL StatementList RCURLStatementList : StatementRepStatementRep : StatementRep Statement Semi\n                    | epsilonDeclaration : ConstDecl\n                 | TypeDecl\n                 | VarDeclTopLevelDecl : Declaration\n                  | FunctionDeclConstDecl : CONST ConstSpec\n                 | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec Semi\n                    | epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : Type EQUALS ExpressionListIdentifierList : IDENTIFIER \n                      | IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n                     | IDENTIFIER COMMA IDENTIFIERExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n                     | epsilonTypeDecl : TYPE TypeSpec\n                | TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec Semi\n                   | epsilonTypeSpec : AliasDecl\n                | TypeDefAliasDecl : IDENTIFIER EQUALS TypeTypeDef : IDENTIFIER TypeVarDecl : VAR VarSpec\n               | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec Semi\n                  | epsilonVarSpec : IdentifierList Type ExpressionListOptExpressionListOpt : EQUALS ExpressionList\n                         | epsilon\n                         | EQUALS MALLOC LPAREN I INT_LIT RPAREN ShortVarDecl : IDENTIFIER SHORT_ASSIGNMENT Expression FunctionDecl : FUNC FunctionName CreateScope Function EndScope\n                  | FUNC FunctionName CreateScope Signature EndScopeCreateScope : EndScope : FunctionName : IDENTIFIERFunction : Signature RetTypeSet FunctionBodyRetTypeSet : FunctionBody : BlockOperand : Literal\n               | OperandName\n               | LPAREN Expression RPARENLiteral : BasicLitBasicLit : I INT_LIT\n              | F FLOAT_LIT\n              | C IMAGINARY_LIT\n              | S STRING_LITI : F : C : S : OperandName : IDENTIFIERQualifiedIdent : IDENTIFIER DOT TypeNamePrimaryExpr : Operand\n                 | PrimaryExpr DOT IDENTIFIER\n                 | Conversion\n                 | PrimaryExpr LSQUARE Expression RSQUARE\n                 | PrimaryExpr Slice\n                 | PrimaryExpr TypeAssertion\n                 | PrimaryExpr LPAREN ExpressionListTypeOpt RPARENSlice : LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE\n             | LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARETypeAssertion : DOT LPAREN Type RPARENExpressionListTypeOpt : ExpressionList\n                             | epsilonExpression : UnaryExpr\n                  | Expression COMPARE_OR Expression\n                  | Expression COMPARE_AND Expression\n                  | Expression EQEQ Expression\n                  | Expression NOTEQUALS Expression\n                  | Expression LESSTHAN Expression\n                  | Expression GREATERTHAN Expression\n                  | Expression LESSTHAN_EQUAL Expression\n                  | Expression GREATERTHAN_EQUAL Expression\n                  | Expression OR Expression\n                  | Expression XOR Expression\n                  | Expression ANDXOR Expression\n                  | Expression DIVIDE Expression\n                  | Expression MODULO Expression\n                  | Expression LSHIFT Expression\n                  | Expression RSHIFT Expression\n                  | Expression PLUS Expression\n                  | Expression MINUS Expression\n                  | Expression MULTIPLY Expression\n                  | Expression AND ExpressionExpressionOpt : Expression\n                     | epsilonUnaryExpr : PrimaryExpr\n                 | UnaryOp UnaryExpr\n                 | NOT UnaryExprUnaryOp : PLUS\n               | MINUS\n               | MULTIPLY\n               | AND Conversion : TYPECAST Type LPAREN Expression RPARENStatement : Declaration\n               | LabeledStmt\n               | SimpleStmt\n               | ReturnStmt\n               | BreakStmt\n               | ContinueStmt\n               | GotoStmt\n               | CreateScope IFSYM Block EndScope_1\n               | IfStmt\n               | SwitchStmt\n               | ForStmt\n               | DeferStmt\n               | FallThroughStmt\n               | GoStmt\n               | PrintStmt\n               | ScanStmtEndScope_1 : PrintStmt : PRINT PD Expression\n               | PRINT PS Expression\n               | PRINT PF ExpressionScanStmt : SCAN ExpressionFallThroughStmt : FALLTHROUGHGoStmt : GO ExpressionDeferStmt : DEFER Expression SimpleStmt : epsilon\n                 | ExpressionStmt\n                 | IncDecStmt\n                 | Assignment\n                 | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : Expression INCREMENT\n                 | Expression DECREMENT  Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOp AssignOp : PLUSEQUAL\n               | MINUSEQUAL\n               | TIMESEQUAL\n               | DIVIDE_EQUAL\n               | MODEQUAL\n               | ANDEQUAL\n               | OREQUAL\n               | XOREQUAL\n               | ANDXOR_EQUAL\n               | LSHIFT_EQUAL\n               | RSHIFT_EQUAL\n               | EQUALS  IfStmt : IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt IFSYM :  ElseOpt : ELSE IfStmt\n              | ELSE CreateScope IFSYM Block EndScope_1\n              | epsilon  SwitchStmt : ExprSwitchStmtExprSwitchStmt : SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1StartSwitch : ExprCaseClauseList : epsilon\n                 | ExprCaseClauseList ExprCaseClause\n    ExprCaseClause : ExprSwitchCase COLON StatementList ExprSwitchCase : CASE ExpressionList\n                 | DEFAULT \n    ForStmt : FOR CreateScope ConditionBlockOpt Block EndScope_1ConditionBlockOpt : epsilon\n             | Condition\n             | ForClauseCondition : Expression ForClause : SimpleStmt Semi ConditionOpt Semi SimpleStmtConditionOpt : epsilon\n          | Condition ReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n             | epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n        | epsilon GotoStmt : GOTO Label SourceFile : PackageClause Semi ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n           | ImportDeclRep ImportDecl SemiTopLevelDeclRep : TopLevelDeclRep TopLevelDecl Semi\n                     | epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n          | IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec Semi\n            | epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n                        | PackageName\n                        | epsilon ImportPath : STRING_LIT Semi : SEMICOLONepsilon : '
    
_lr_action_items = {'LSQUARE':([33,35,36,42,47,56,66,83,86,93,96,100,102,104,116,119,120,123,128,131,133,136,141,153,155,157,165,166,167,168,170,173,198,204,205,213,214,215,245,247,253,280,297,298,341,353,365,],[-57,65,-56,65,65,65,96,65,-58,65,65,-59,65,65,-104,-89,-91,-100,171,-102,-88,65,65,65,-36,-56,-94,-93,-92,-106,-107,-95,65,65,-35,65,-103,-90,-108,-105,65,-100,-111,-143,-109,-100,-110,]),'ANDXOR':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,175,-137,-138,-94,-93,-92,-106,-107,-95,175,175,-103,-90,-125,175,-129,175,175,-119,-128,-132,-127,-131,-122,-130,175,-126,-120,-133,-121,175,175,-108,-105,175,175,-100,175,175,-111,-143,175,175,175,175,175,-109,175,175,175,175,-100,175,175,-110,175,]),'DIVIDE':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,189,-137,-138,-94,-93,-92,-106,-107,-95,189,189,-103,-90,189,189,189,189,189,189,189,-132,-127,189,189,189,189,-126,189,189,189,189,189,-108,-105,189,189,-100,189,189,-111,-143,189,189,189,189,189,-109,189,189,189,189,-100,189,189,-110,189,]),'PF':([269,],[312,]),'CONST':([5,6,9,10,11,12,25,37,202,240,241,303,310,387,],[-237,-238,-222,-238,15,-225,-223,-224,-238,15,-44,-43,15,-238,]),'LPAREN':([5,14,15,22,24,38,39,55,57,58,60,62,63,64,67,68,71,72,74,76,89,90,91,97,99,102,107,115,116,117,118,119,120,121,122,123,128,131,132,133,135,137,138,139,155,160,165,166,167,168,169,170,171,172,173,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,202,205,214,215,218,236,237,240,241,245,246,247,252,255,261,266,273,278,280,285,291,297,298,300,303,310,311,312,313,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,341,342,353,360,365,373,378,387,],[-237,26,34,41,45,-84,-82,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,104,-29,-28,132,-12,-10,104,132,132,-104,-141,-140,-89,-91,132,-139,-100,169,-102,132,-88,-142,-101,-22,-17,-36,206,-94,-93,-92,-106,132,-107,132,213,-95,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,236,-20,-238,-35,-103,-90,132,132,-18,132,-44,-108,132,-105,-83,132,132,132,-82,132,-100,132,132,-111,-143,-23,-43,132,132,132,132,132,132,-189,-179,-190,-181,-184,-187,-191,-180,-188,132,-185,-186,-182,-183,-109,132,-100,132,-110,132,132,-238,]),'SCAN':([5,202,240,241,303,310,387,],[-237,-238,285,-44,-43,285,-238,]),'DEFAULT':([5,240,241,303,362,371,374,375,382,387,391,],[-237,-42,-44,-43,-199,-238,-200,380,-201,-238,-202,]),'MODEQUAL':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,177,190,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,280,282,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,324,-238,-111,-143,-109,-238,-100,-110,]),'XOREQUAL':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,177,190,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,280,282,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,325,-238,-111,-143,-109,-238,-100,-110,]),'PRINT':([5,202,240,241,303,310,387,],[-237,-238,269,-44,-43,269,-238,]),'LESSTHAN':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,181,-137,-138,-94,-93,-92,-106,-107,-95,181,181,-103,-90,181,181,-129,181,181,-119,-128,-132,-127,-131,-122,-130,181,-126,-120,181,-121,181,181,-108,-105,181,181,-100,181,181,-111,-143,181,181,181,181,181,-109,181,181,181,181,-100,181,181,-110,181,]),'COLON':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,171,173,177,190,210,211,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,267,280,296,297,298,341,365,379,380,386,],[-104,-89,-91,-100,-114,-136,-102,-88,-238,-137,-138,-94,-93,-92,-106,-107,-238,-95,-60,-62,246,-135,-134,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,310,-174,342,-111,-143,-109,-110,387,-204,-203,]),'NOTEQUALS':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,176,-137,-138,-94,-93,-92,-106,-107,-95,176,176,-103,-90,-125,-118,-129,176,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,176,-123,-108,-105,176,176,-100,176,176,-111,-143,176,176,176,176,176,-109,176,176,176,176,-100,176,176,-110,176,]),'LSHIFT':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,182,-137,-138,-94,-93,-92,-106,-107,-95,182,182,-103,-90,182,182,-129,182,182,182,-128,-132,-127,182,182,182,182,-126,182,182,182,182,182,-108,-105,182,182,-100,182,182,-111,-143,182,182,182,182,182,-109,182,182,182,182,-100,182,182,-110,182,]),'MULTIPLY':([5,33,35,36,42,47,56,83,86,91,93,96,100,102,104,107,115,116,117,118,119,120,121,122,123,127,128,131,132,133,134,135,136,141,153,155,157,163,164,165,166,167,168,169,170,171,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,198,202,204,205,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,240,241,245,246,247,249,250,253,255,261,266,273,278,280,283,285,291,296,297,298,302,303,304,310,311,312,313,314,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,337,339,341,342,344,345,346,352,353,355,359,360,365,369,373,378,387,],[-237,-57,56,-56,56,56,56,56,-58,117,56,56,-59,56,56,117,117,-104,-141,-140,-89,-91,117,-139,-100,-114,-136,-102,117,-88,183,-142,56,56,56,-36,-56,-137,-138,-94,-93,-92,-106,117,-107,117,-95,183,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,56,-238,56,-35,183,56,-103,-90,183,183,117,183,183,183,183,183,-132,-127,183,183,183,183,-126,183,183,183,183,183,117,117,-44,-108,117,-105,183,183,56,117,117,117,-82,117,-100,183,117,117,183,-111,-143,183,-43,183,117,117,117,117,117,183,117,-189,-179,-190,-181,-184,-187,-191,-180,-188,117,-185,-186,-182,-183,183,183,-109,117,183,183,183,183,-100,183,183,117,-110,183,117,117,-238,]),'RETURN':([5,202,240,241,303,310,387,],[-237,-238,266,-44,-43,266,-238,]),'MINUS':([5,91,107,115,116,117,118,119,120,121,122,123,127,128,131,132,133,134,135,163,164,165,166,167,168,169,170,171,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,202,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,240,241,245,246,247,249,250,255,261,266,273,278,280,283,285,291,296,297,298,302,303,304,310,311,312,313,314,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,337,339,341,342,344,345,346,352,353,355,359,360,365,369,373,378,387,],[-237,118,118,118,-104,-141,-140,-89,-91,118,-139,-100,-114,-136,-102,118,-88,185,-142,-137,-138,-94,-93,-92,-106,118,-107,118,-95,185,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-238,185,-103,-90,185,185,118,-129,185,185,185,-128,-132,-127,-131,185,-130,185,-126,185,185,185,185,185,118,118,-44,-108,118,-105,185,185,118,118,118,-82,118,-100,185,118,118,185,-111,-143,185,-43,185,118,118,118,118,118,185,118,-189,-179,-190,-181,-184,-187,-191,-180,-188,118,-185,-186,-182,-183,185,185,-109,118,185,185,185,185,-100,185,185,118,-110,185,118,118,-238,]),'DOT':([5,14,26,48,49,61,113,116,119,120,123,128,131,133,157,165,166,167,168,170,173,214,215,245,247,280,297,298,341,353,365,],[-237,31,-238,-231,31,92,-230,-104,-89,-91,-100,172,-102,-88,92,-94,-93,-92,-106,-107,-95,-103,-90,-108,-105,-100,-111,-143,-109,-100,-110,]),'LCURL':([5,55,57,58,60,62,63,64,67,68,71,72,74,89,90,97,99,102,103,116,119,120,123,127,128,131,133,134,137,138,139,144,146,147,148,149,150,152,155,163,164,165,166,167,168,170,173,177,190,197,202,205,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,240,241,245,247,249,252,256,262,273,281,283,288,289,290,297,298,300,303,310,314,318,334,335,338,339,341,348,349,350,351,352,353,354,355,356,358,364,365,373,377,384,387,389,392,],[-237,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,-29,-28,-12,-10,-238,-86,-104,-89,-91,-100,-114,-136,-102,-88,-238,-101,-22,-17,199,-33,-34,-30,-32,-31,202,-36,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-20,-238,-35,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-18,-82,-44,-108,-105,-61,-83,-169,-171,-82,-168,-175,-170,-193,-172,-111,-143,-23,-43,-82,-238,-82,-176,-177,202,-82,-109,-207,-206,202,-208,-209,-100,362,-79,-178,-193,202,-110,-238,-210,-82,-238,-193,202,]),'CASE':([5,240,241,303,362,371,374,375,382,387,391,],[-237,-42,-44,-43,-199,-238,-200,378,-201,-238,-202,]),'DEFER':([5,202,240,241,303,310,387,],[-237,-238,261,-44,-43,261,-238,]),'RPAREN':([5,26,34,41,45,48,49,53,54,55,57,58,60,62,63,64,67,68,71,72,74,77,78,80,81,89,90,97,99,104,113,114,116,119,120,123,127,128,131,133,134,137,138,139,154,156,158,159,162,163,164,165,166,167,168,169,170,173,174,177,190,197,203,207,208,209,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,243,245,247,248,249,250,252,294,297,298,300,341,365,],[-237,-238,-238,-238,-238,-231,84,88,-53,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,105,-74,110,-66,-29,-28,-12,-10,155,-230,-52,-104,-89,-91,-100,-114,-136,-102,-88,-238,-101,-22,-17,-40,205,-37,-73,-65,-137,-138,-94,-93,-92,-106,-238,-107,-95,215,-60,-62,-20,-39,-113,245,-112,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-18,-38,-108,-105,297,-61,298,-83,340,-111,-143,-23,-109,-110,]),'SEMICOLON':([1,5,7,8,13,16,17,18,19,20,23,27,32,40,43,44,46,50,51,55,57,58,60,62,63,64,67,68,70,71,72,74,79,82,84,85,87,88,89,90,97,99,101,102,103,105,106,108,109,110,111,112,116,119,120,123,127,128,130,131,133,134,137,138,139,145,146,147,148,149,150,151,155,161,163,164,165,166,167,168,170,173,177,190,197,200,201,202,205,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,240,241,245,247,249,251,252,254,256,257,258,259,260,262,264,265,266,268,270,271,272,273,274,275,276,277,279,280,281,283,284,286,287,288,290,292,293,297,298,300,301,302,303,304,305,306,307,308,309,310,314,315,316,317,334,335,336,337,340,341,343,344,345,346,347,349,352,353,355,356,357,360,361,363,365,366,367,368,369,370,372,376,381,383,385,387,388,390,393,394,],[5,-237,-226,-227,5,-49,5,-48,-45,-46,-47,-228,-50,-71,-68,-67,-63,-232,-236,-11,-3,-4,-2,-15,-9,-14,-6,-7,-54,-8,-13,-5,-238,-70,-229,5,5,-51,-29,-28,-12,-10,-83,-238,-83,-72,5,-77,-75,-64,5,-69,-104,-89,-91,-100,-114,-136,-55,-102,-88,-238,-101,-22,-17,-80,-33,-34,-30,-32,-31,-81,-36,-76,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-20,-85,-87,-238,-35,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-18,-238,-44,-108,-105,-61,5,-83,-149,-169,-159,5,-152,-156,-171,-145,-158,-238,-197,-157,-155,-150,-82,-147,-153,-238,-165,-144,-100,-168,-175,-238,-146,-154,-170,-172,-148,-41,-111,-143,-23,-27,-166,-43,-167,-174,-220,-213,-215,-214,-238,-238,-219,-217,-218,-176,-177,-216,-164,-78,-109,-173,-162,-163,-161,5,-168,-175,-100,-79,-178,-160,-238,-160,-151,-110,-212,-211,5,-209,-205,-160,-238,-160,-196,-192,-238,-198,-194,-160,-195,]),'FALLTHROUGH':([5,202,240,241,303,310,387,],[-237,-238,277,-44,-43,277,-238,]),'STRUCT':([33,35,36,42,47,56,69,83,86,93,96,98,100,102,104,136,141,153,155,157,198,204,205,213,253,],[-57,-16,-56,-16,-16,-16,-24,-16,-58,-16,-16,144,-59,-16,-16,-16,-16,-16,-36,-56,-16,-16,-35,-16,-16,]),'GREATERTHAN_EQUAL':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,186,-137,-138,-94,-93,-92,-106,-107,-95,186,186,-103,-90,186,186,-129,186,186,-119,-128,-132,-127,-131,-122,-130,186,-126,-120,186,-121,186,186,-108,-105,186,186,-100,186,186,-111,-143,186,186,186,186,186,-109,186,186,186,186,-100,186,186,-110,186,]),'RCURL':([5,199,202,238,239,240,241,242,299,303,362,371,374,375,382,387,391,],[-237,-238,-238,252,-26,-42,-44,293,-25,-43,-199,-238,-200,381,-201,-238,-202,]),'RSHIFT_EQUAL':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,177,190,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,280,282,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,322,-238,-111,-143,-109,-238,-100,-110,]),'EQEQ':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,180,-137,-138,-94,-93,-92,-106,-107,-95,180,180,-103,-90,-125,-118,-129,180,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,180,-123,-108,-105,180,180,-100,180,180,-111,-143,180,180,180,180,180,-109,180,180,180,180,-100,180,180,-110,180,]),'SWITCH':([5,202,240,241,303,310,387,],[-237,-238,278,-44,-43,278,-238,]),'ANDXOR_EQUAL':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,177,190,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,280,282,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,328,-238,-111,-143,-109,-238,-100,-110,]),'PLUS':([5,91,107,115,116,117,118,119,120,121,122,123,127,128,131,132,133,134,135,163,164,165,166,167,168,169,170,171,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,202,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,240,241,245,246,247,249,250,255,261,266,273,278,280,283,285,291,296,297,298,302,303,304,310,311,312,313,314,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,337,339,341,342,344,345,346,352,353,355,359,360,365,369,373,378,387,],[-237,122,122,122,-104,-141,-140,-89,-91,122,-139,-100,-114,-136,-102,122,-88,187,-142,-137,-138,-94,-93,-92,-106,122,-107,122,-95,187,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-238,187,-103,-90,187,187,122,-129,187,187,187,-128,-132,-127,-131,187,-130,187,-126,187,187,187,187,187,122,122,-44,-108,122,-105,187,187,122,122,122,-82,122,-100,187,122,122,187,-111,-143,187,-43,187,122,122,122,122,122,187,122,-189,-179,-190,-181,-184,-187,-191,-180,-188,122,-185,-186,-182,-183,187,187,-109,122,187,187,187,187,-100,187,187,122,-110,187,122,122,-238,]),'DIVIDE_EQUAL':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,177,190,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,280,282,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,333,-238,-111,-143,-109,-238,-100,-110,]),'INCREMENT':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,280,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-100,334,-111,-143,-109,334,-100,-110,]),'IMPORT':([5,6,9,10,25,],[-237,-238,-222,14,-223,]),'STRING':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,136,141,153,155,157,198,204,205,213,253,],[-57,63,-56,63,63,63,63,-58,63,63,63,-59,63,63,63,63,63,-36,-56,63,63,-35,63,63,]),'IDENTIFIER':([2,5,14,15,21,22,24,26,33,34,35,36,41,42,45,47,48,49,52,53,54,56,73,75,77,78,80,81,83,86,91,92,93,96,100,102,104,107,113,114,115,117,118,121,122,132,135,136,141,153,155,157,159,162,169,171,172,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,198,199,202,204,205,213,218,236,238,239,240,241,246,253,255,261,263,266,273,276,278,284,285,291,299,303,310,311,312,313,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,360,373,378,387,],[8,-237,8,36,38,36,47,-238,-57,-238,61,-56,-238,61,-238,61,-231,8,86,36,-53,61,99,100,36,-74,47,-66,61,-58,123,61,61,61,-59,61,157,123,-230,-52,123,-141,-140,123,-139,123,-142,61,61,61,-36,-56,-73,-65,123,123,214,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,61,-238,-238,157,-35,61,123,123,36,-26,280,-44,123,61,123,123,305,123,-82,305,123,305,123,123,-25,-43,280,123,123,123,353,123,-189,-179,-190,-181,-184,-187,-191,-180,-188,123,-185,-186,-182,-183,123,123,353,123,-238,]),'SHORT_ASSIGNMENT':([280,353,],[319,319,]),'$end':([3,4,5,6,9,10,11,12,25,37,],[-1,0,-237,-238,-222,-238,-221,-225,-223,-224,]),'AND':([5,91,107,115,116,117,118,119,120,121,122,123,127,128,131,132,133,134,135,163,164,165,166,167,168,169,170,171,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,202,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,240,241,245,246,247,249,250,255,261,266,273,278,280,283,285,291,296,297,298,302,303,304,310,311,312,313,314,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,337,339,341,342,344,345,346,352,353,355,359,360,365,369,373,378,387,],[-237,135,135,135,-104,-141,-140,-89,-91,135,-139,-100,-114,-136,-102,135,-88,192,-142,-137,-138,-94,-93,-92,-106,135,-107,135,-95,192,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-238,192,-103,-90,-125,192,135,-129,192,192,-119,-128,-132,-127,-131,-122,-130,192,-126,-120,-133,-121,192,192,135,135,-44,-108,135,-105,192,192,135,135,135,-82,135,-100,192,135,135,192,-111,-143,192,-43,192,135,135,135,135,135,192,135,-189,-179,-190,-181,-184,-187,-191,-180,-188,135,-185,-186,-182,-183,192,192,-109,135,192,192,192,192,-100,192,192,135,-110,192,135,135,-238,]),'MALLOC':([107,],[160,]),'PD':([269,],[313,]),'MODULO':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,184,-137,-138,-94,-93,-92,-106,-107,-95,184,184,-103,-90,184,184,184,184,184,184,184,-132,-127,184,184,184,184,-126,184,184,184,184,184,-108,-105,184,184,-100,184,184,-111,-143,184,184,184,184,184,-109,184,184,184,184,-100,184,184,-110,184,]),'GOTO':([5,202,240,241,303,310,387,],[-237,-238,263,-44,-43,263,-238,]),'FOR':([5,202,240,241,303,310,387,],[-237,-238,273,-44,-43,273,-238,]),'PACKAGE':([0,],[2,]),'COMPARE_AND':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,194,-137,-138,-94,-93,-92,-106,-107,-95,194,194,-103,-90,-125,-118,-129,194,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,194,194,-100,194,194,-111,-143,194,194,194,194,194,-109,194,194,194,194,-100,194,194,-110,194,]),'LSHIFT_EQUAL':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,177,190,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,280,282,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,320,-238,-111,-143,-109,-238,-100,-110,]),'RSQUARE':([55,57,58,60,62,63,64,65,67,68,71,72,74,89,90,95,97,99,116,119,120,123,127,128,131,133,137,138,139,140,142,143,163,164,165,166,167,168,170,173,197,211,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,245,246,247,252,295,296,297,298,300,341,359,365,],[-11,-3,-4,-2,-15,-9,-14,93,-6,-7,-8,-13,-5,-29,-28,141,-12,-10,-104,-89,-91,-100,-114,-136,-102,-88,-101,-22,-17,-21,-19,198,-137,-138,-94,-93,-92,-106,-107,-95,-20,-135,247,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-18,-108,-238,-105,-83,341,-134,-111,-143,-23,-109,365,-110,]),'XOR':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,188,-137,-138,-94,-93,-92,-106,-107,-95,188,188,-103,-90,-125,188,-129,188,188,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,188,188,-108,-105,188,188,-100,188,188,-111,-143,188,188,188,188,188,-109,188,188,188,188,-100,188,188,-110,188,]),'EQUALS':([47,55,57,58,59,60,62,63,64,67,68,71,72,74,79,89,90,97,99,116,119,120,123,127,128,131,133,137,138,139,163,164,165,166,167,168,170,173,177,190,197,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,245,247,249,252,280,282,283,297,298,300,341,352,353,365,],[83,-11,-3,-4,91,-2,-15,-9,-14,-6,-7,-8,-13,-5,107,-29,-28,-12,-10,-104,-89,-91,-100,-114,-136,-102,-88,-101,-22,-17,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-20,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-18,-108,-105,-61,-83,-100,326,-238,-111,-143,-23,-109,-238,-100,-110,]),'ELSE':([293,372,376,],[-41,-160,384,]),'PLUSEQUAL':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,177,190,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,280,282,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,327,-238,-111,-143,-109,-238,-100,-110,]),'GREATERTHAN':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,191,-137,-138,-94,-93,-92,-106,-107,-95,191,191,-103,-90,191,191,-129,191,191,-119,-128,-132,-127,-131,-122,-130,191,-126,-120,191,-121,191,191,-108,-105,191,191,-100,191,191,-111,-143,191,191,191,191,191,-109,191,191,191,191,-100,191,191,-110,191,]),'FUNC':([5,6,9,10,11,12,25,37,],[-237,-238,-222,-238,21,-225,-223,-224,]),'GO':([5,202,240,241,303,310,387,],[-237,-238,255,-44,-43,255,-238,]),'VAR':([5,6,9,10,11,12,25,37,202,240,241,303,310,387,],[-237,-238,-222,-238,22,-225,-223,-224,-238,22,-44,-43,22,-238,]),'OREQUAL':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,177,190,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,280,282,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,331,-238,-111,-143,-109,-238,-100,-110,]),'IF':([5,202,240,241,303,310,384,387,],[-237,-238,291,-44,-43,291,291,-238,]),'IMAGINARY_LIT':([5,91,107,115,117,118,121,122,124,132,135,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,202,218,236,240,241,246,255,261,266,273,278,285,291,303,310,311,312,313,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,360,373,378,387,],[-237,-98,-98,-98,-141,-140,-98,-139,165,-98,-142,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-238,-98,-98,-98,-44,-98,-98,-98,-98,-82,-98,-98,-98,-43,-98,-98,-98,-98,-98,-98,-189,-179,-190,-181,-184,-187,-191,-180,-188,-98,-185,-186,-182,-183,-98,-98,-98,-98,-238,]),'MAP':([33,35,36,42,47,56,83,86,93,96,100,102,104,136,141,153,155,157,198,204,205,213,253,],[-57,66,-56,66,66,66,66,-58,66,66,-59,66,66,66,66,66,-36,-56,66,66,-35,66,66,]),'TYPECAST':([5,91,107,115,117,118,121,122,132,135,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,202,218,236,240,241,246,255,261,266,273,278,285,291,303,310,311,312,313,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,360,373,378,387,],[-237,136,136,136,-141,-140,136,-139,136,-142,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,-238,136,136,136,-44,136,136,136,136,-82,136,136,136,-43,136,136,136,136,136,136,-189,-179,-190,-181,-184,-187,-191,-180,-188,136,-185,-186,-182,-183,136,136,136,136,-238,]),'RSHIFT':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,178,-137,-138,-94,-93,-92,-106,-107,-95,178,178,-103,-90,178,178,-129,178,178,178,-128,-132,-127,178,178,178,178,-126,178,178,178,178,178,-108,-105,178,178,-100,178,178,-111,-143,178,178,178,178,178,-109,178,178,178,178,-100,178,178,-110,178,]),'LESSTHAN_EQUAL':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,193,-137,-138,-94,-93,-92,-106,-107,-95,193,193,-103,-90,193,193,-129,193,193,-119,-128,-132,-127,-131,-122,-130,193,-126,-120,193,-121,193,193,-108,-105,193,193,-100,193,193,-111,-143,193,193,193,193,193,-109,193,193,193,193,-100,193,193,-110,193,]),'INT':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,136,141,153,155,157,198,204,205,213,253,],[-57,67,-56,67,67,67,67,-58,67,67,67,-59,67,67,67,67,67,-36,-56,67,67,-35,67,67,]),'TIMESEQUAL':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,177,190,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,280,282,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,332,-238,-111,-143,-109,-238,-100,-110,]),'MINUSEQUAL':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,177,190,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,280,282,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,323,-238,-111,-143,-109,-238,-100,-110,]),'FLOAT':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,136,141,153,155,157,198,204,205,213,253,],[-57,68,-56,68,68,68,68,-58,68,68,68,-59,68,68,68,68,68,-36,-56,68,68,-35,68,68,]),'FLOAT_LIT':([5,91,107,115,117,118,121,122,125,132,135,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,202,218,236,240,241,246,255,261,266,273,278,285,291,303,310,311,312,313,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,360,373,378,387,],[-237,-97,-97,-97,-141,-140,-97,-139,166,-97,-142,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-238,-97,-97,-97,-44,-97,-97,-97,-97,-82,-97,-97,-97,-43,-97,-97,-97,-97,-97,-97,-189,-179,-190,-181,-184,-187,-191,-180,-188,-97,-185,-186,-182,-183,-97,-97,-97,-97,-238,]),'BREAK':([5,202,240,241,303,310,387,],[-237,-238,284,-44,-43,284,-238,]),'COMPARE_OR':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,179,-137,-138,-94,-93,-92,-106,-107,-95,179,179,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,179,179,-100,179,179,-111,-143,179,179,179,179,179,-109,179,179,179,179,-100,179,179,-110,179,]),'INT_LIT':([5,65,91,94,107,115,117,118,121,122,126,132,135,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,202,206,218,236,240,241,244,246,255,261,266,273,278,285,291,303,310,311,312,313,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,360,373,378,387,],[-237,-96,-96,140,-96,-96,-141,-140,-96,-139,167,-96,-142,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-238,-96,-96,-96,-96,-44,294,-96,-96,-96,-96,-82,-96,-96,-96,-43,-96,-96,-96,-96,-96,-96,-189,-179,-190,-181,-184,-187,-191,-180,-188,-96,-185,-186,-182,-183,-96,-96,-96,-96,-238,]),'CONTINUE':([5,202,240,241,303,310,387,],[-237,-238,276,-44,-43,276,-238,]),'BOOL':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,136,141,153,155,157,198,204,205,213,253,],[-57,71,-56,71,71,71,71,-58,71,71,71,-59,71,71,71,71,71,-36,-56,71,71,-35,71,71,]),'PS':([269,],[311,]),'STRING_LIT':([5,8,14,26,28,29,30,31,48,49,91,107,113,115,117,118,121,122,129,132,135,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,202,218,236,240,241,246,255,261,266,273,278,285,291,303,310,311,312,313,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,360,373,378,387,],[-237,-227,-238,-238,-235,-234,51,-233,-231,-238,-99,-99,-230,-99,-141,-140,-99,-139,173,-99,-142,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-238,-99,-99,-99,-44,-99,-99,-99,-99,-82,-99,-99,-99,-43,-99,-99,-99,-99,-99,-99,-189,-179,-190,-181,-184,-187,-191,-180,-188,-99,-185,-186,-182,-183,-99,-99,-99,-99,-238,]),'NOT':([5,91,107,115,117,118,121,122,132,135,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,202,218,236,240,241,246,255,261,266,273,278,285,291,303,310,311,312,313,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,360,373,378,387,],[-237,121,121,121,-141,-140,121,-139,121,-142,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-238,121,121,121,-44,121,121,121,121,-82,121,121,121,-43,121,121,121,121,121,121,-189,-179,-190,-181,-184,-187,-191,-180,-188,121,-185,-186,-182,-183,121,121,121,121,-238,]),'ANDEQUAL':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,177,190,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,280,282,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,330,-238,-111,-143,-109,-238,-100,-110,]),'DECREMENT':([116,119,120,123,127,128,131,133,163,164,165,166,167,168,170,173,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,280,283,297,298,341,352,353,365,],[-104,-89,-91,-100,-114,-136,-102,-88,-137,-138,-94,-93,-92,-106,-107,-95,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-100,335,-111,-143,-109,335,-100,-110,]),'COMMA':([33,36,55,57,58,60,62,63,64,67,68,71,72,74,86,89,90,97,99,100,116,119,120,123,127,128,131,133,134,137,138,139,154,156,157,158,163,164,165,166,167,168,170,173,177,190,197,203,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,243,245,247,249,252,280,283,297,298,300,341,352,353,365,],[52,75,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,-58,-29,-28,-12,-10,-59,-104,-89,-91,-100,-114,-136,-102,-88,-238,-101,-22,-17,-40,204,75,-37,-137,-138,-94,-93,-92,-106,-107,-95,218,-62,-20,-39,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-18,-38,-108,-105,-61,-83,-100,-238,-111,-143,-23,-109,-238,-100,-110,]),'TYPE':([5,6,9,10,11,12,25,33,35,36,37,42,47,56,83,86,92,93,96,100,102,104,136,141,153,155,157,198,202,204,205,213,240,241,253,303,310,387,],[-237,-238,-222,-238,24,-225,-223,-57,73,-56,-224,73,73,73,73,-58,73,73,73,-59,73,73,73,73,73,-36,-56,73,-238,73,-35,73,24,-44,73,-43,24,-238,]),'OR':([116,119,120,123,127,128,131,133,134,163,164,165,166,167,168,170,173,174,212,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,245,247,249,250,280,283,296,297,298,302,304,318,337,339,341,344,345,346,352,353,355,359,365,369,],[-104,-89,-91,-100,-114,-136,-102,-88,195,-137,-138,-94,-93,-92,-106,-107,-95,195,195,-103,-90,-125,195,-129,195,195,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,195,-123,-108,-105,195,195,-100,195,195,-111,-143,195,195,195,195,195,-109,195,195,195,195,-100,195,195,-110,195,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([152,],[200,]),'Conversion':([91,107,115,121,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ContinueStmt':([240,310,],[254,254,]),'ExpressionRep':([134,283,352,],[177,177,177,]),'ExpressionStmt':([240,310,314,373,],[256,256,256,256,]),'ScanStmt':([240,310,],[257,257,]),'Statement':([240,310,],[258,343,]),'IfStmt':([240,310,384,],[259,259,390,]),'FallThroughStmt':([240,310,],[260,260,]),'StatementRep':([202,387,],[240,240,]),'TypeToken':([35,42,47,56,83,92,93,96,102,104,136,141,153,198,204,213,253,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'AliasDecl':([24,80,],[44,44,]),'PackageNameDotOpt':([14,49,],[30,30,]),'TypeName':([35,42,47,56,83,92,93,96,102,104,136,141,153,198,204,213,253,],[60,60,60,60,60,137,60,60,60,60,60,60,60,60,60,60,60,]),'ExprCaseClause':([375,],[382,]),'ParametersList':([104,],[156,]),'ParameterDecl':([104,204,],[158,243,]),'FuncScope':([69,],[98,]),'FunctionName':([21,],[39,]),'LabeledStmt':([240,310,],[264,264,]),'KeyType':([96,],[143,]),'StatementList':([202,387,],[242,391,]),'TypeAssertion':([128,],[170,]),'ConditionOpt':([360,],[368,]),'EndScope_1':([357,361,372,381,393,],[363,370,376,388,394,]),'ElementType':([93,141,198,],[139,197,237,]),'RetTypeSet':([103,],[152,]),'PointerType':([35,42,47,56,83,93,96,102,104,136,141,153,198,204,213,253,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'EndScope':([101,103,252,],[145,151,300,]),'VarSpecRep':([41,],[77,]),'VarDecl':([11,240,310,],[23,23,23,]),'PrintStmt':([240,310,],[265,265,]),'ConstSpecRep':([34,],[53,]),'Operand':([91,107,115,121,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'TypeSpec':([24,80,],[46,111,]),'Parameters':([76,102,],[102,146,]),'UnaryOp':([91,107,115,121,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'PackageName':([2,14,49,],[7,29,29,]),'SourceFile':([0,],[3,]),'ExpressionListPureOpt':([266,],[307,]),'Label':([240,263,276,284,310,],[267,306,317,317,267,]),'FunctionDecl':([11,],[16,]),'TopLevelDecl':([11,],[17,]),'ExprSwitchStmt':([240,310,],[268,268,]),'IdentifierList':([15,22,53,77,104,204,238,],[35,42,35,42,153,153,253,]),'IdentifierRep':([15,22,53,77,104,204,238,],[33,33,33,33,33,33,33,]),'Type':([35,42,47,56,83,93,96,102,104,136,141,153,198,204,213,253,],[59,79,82,89,112,138,142,147,154,196,138,203,138,154,248,301,]),'ImportDeclRep':([6,],[10,]),'GoStmt':([240,310,],[270,270,]),'DeferStmt':([240,310,],[271,271,]),'PackageClause':([0,],[1,]),'ResultOpt':([102,],[148,]),'IncDecStmt':([240,310,314,373,],[288,288,288,288,]),'GotoStmt':([240,310,],[272,272,]),'TopLevelDeclRep':([10,],[11,]),'C':([91,107,115,121,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'Semi':([1,13,17,85,87,106,111,251,258,347,368,],[6,25,37,113,114,159,162,299,303,360,373,]),'PrimaryExpr':([91,107,115,121,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'S':([91,107,115,121,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'StartSwitch':([362,],[371,]),'assign_op':([282,],[329,]),'Signature':([76,],[103,]),'Block':([152,338,350,364,392,],[201,357,361,372,393,]),'ExprCaseClauseList':([371,],[375,]),'SwitchStmt':([240,310,],[275,275,]),'VarSpec':([22,77,],[40,106,]),'Result':([102,],[150,]),'Assignment':([240,310,314,373,],[262,262,262,262,]),'ExpressionListTypeOpt':([169,],[208,]),'QualifiedIdent':([35,42,47,56,83,92,93,96,102,104,136,141,153,198,204,213,253,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'Literal':([91,107,115,121,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'ImportDecl':([10,],[13,]),'OperandName':([91,107,115,121,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'AssignOp':([282,],[321,]),'LabelOpt':([276,284,],[316,336,]),'FieldDeclRep':([199,],[238,]),'start':([0,],[4,]),'Declaration':([11,240,310,],[18,279,279,]),'Condition':([314,360,],[348,366,]),'StructType':([69,],[97,]),'ConstSpec':([15,53,],[32,87,]),'F':([91,107,115,121,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'epsilon':([6,10,14,26,34,41,45,49,79,102,134,169,171,199,202,240,246,266,276,283,284,310,314,352,360,371,373,376,387,],[9,12,28,48,54,78,81,28,108,149,190,207,211,239,241,281,211,308,315,190,315,281,349,190,367,374,281,383,241,]),'ConditionBlockOpt':([314,],[350,]),'ExpressionList':([91,107,169,240,266,310,314,329,373,378,],[130,161,209,282,309,282,282,356,282,386,]),'SimpleStmt':([240,310,314,373,],[286,286,347,377,]),'ImportSpecRep':([26,],[49,]),'Expression':([91,107,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[134,134,174,134,212,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,249,250,283,296,302,304,134,318,337,339,283,344,345,346,352,355,134,359,369,283,134,]),'ImportPath':([30,],[50,]),'ExprSwitchCase':([375,],[379,]),'ExpressionOpt':([171,246,],[210,295,]),'ST':([35,42,47,56,83,93,96,102,104,136,141,153,198,204,213,253,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'TypeExprListOpt':([35,],[70,]),'ReturnStmt':([240,310,],[274,274,]),'ConstDecl':([11,240,310,],[19,19,19,]),'Slice':([128,],[168,]),'ArrayType':([35,42,47,56,83,93,96,102,104,136,141,153,198,204,213,253,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ForStmt':([240,310,],[287,287,]),'Function':([76,],[101,]),'ImportSpec':([14,49,],[27,85,]),'TypeLit':([35,42,47,56,83,93,96,102,104,136,141,153,198,204,213,253,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'TypeSpecRep':([45,],[80,]),'CreateScope':([39,240,273,310,318,339,384,],[76,289,314,289,354,358,389,]),'SliceType':([35,42,47,56,83,93,96,102,104,136,141,153,198,204,213,253,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'TypeDecl':([11,240,310,],[20,20,20,]),'BaseType':([56,],[90,]),'I':([65,91,107,115,121,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,206,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[94,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,244,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'IFSYM':([289,358,389,],[338,364,392,]),'UnaryExpr':([91,107,115,121,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[127,127,163,164,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'ArrayLength':([65,],[95,]),'MapType':([35,42,47,56,83,93,96,102,104,136,141,153,198,204,213,253,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ForClause':([314,],[351,]),'ShortVarDecl':([240,310,314,373,],[290,290,290,290,]),'TypeDef':([24,80,],[43,43,]),'FieldDecl':([238,],[251,]),'BreakStmt':([240,310,],[292,292,]),'BasicLit':([91,107,115,121,132,169,171,175,176,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,218,236,240,246,255,261,266,278,285,291,310,311,312,313,314,319,329,342,360,373,378,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'ExpressionListOpt':([79,],[109,]),'ElseOpt':([376,],[385,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',225),
  ('Type -> TypeName','Type',1,'p_type','parser.py',234),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',235),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','parser.py',239),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',240),
  ('TypeToken -> INT','TypeToken',1,'p_type_token','parser.py',253),
  ('TypeToken -> FLOAT','TypeToken',1,'p_type_token','parser.py',254),
  ('TypeToken -> BOOL','TypeToken',1,'p_type_token','parser.py',255),
  ('TypeToken -> STRING','TypeToken',1,'p_type_token','parser.py',256),
  ('TypeToken -> TYPE IDENTIFIER','TypeToken',2,'p_type_token','parser.py',257),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',293),
  ('TypeLit -> ST StructType','TypeLit',2,'p_type_lit','parser.py',294),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',295),
  ('TypeLit -> MapType','TypeLit',1,'p_type_lit','parser.py',296),
  ('TypeLit -> SliceType','TypeLit',1,'p_type_lit','parser.py',297),
  ('ST -> <empty>','ST',0,'p_S_T','parser.py',304),
  ('SliceType -> LSQUARE RSQUARE ElementType','SliceType',3,'p_slice_type','parser.py',319),
  ('MapType -> MAP LSQUARE KeyType RSQUARE ElementType','MapType',5,'p_map_type','parser.py',328),
  ('KeyType -> Type','KeyType',1,'p_key_type','parser.py',335),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE ElementType','ArrayType',4,'p_array_type','parser.py',342),
  ('ArrayLength -> I INT_LIT','ArrayLength',2,'p_array_length','parser.py',365),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',371),
  ('StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope','StructType',6,'p_struct_type','parser.py',376),
  ('FuncScope -> <empty>','FuncScope',0,'p_func_scope','parser.py',390),
  ('FieldDeclRep -> FieldDeclRep FieldDecl Semi','FieldDeclRep',3,'p_field_decl_rep','parser.py',399),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',400),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_field_decl','parser.py',413),
  ('PointerType -> MULTIPLY BaseType','PointerType',2,'p_point_type','parser.py',448),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',456),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_sign','parser.py',463),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',488),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',489),
  ('Result -> Parameters','Result',1,'p_result','parser.py',493),
  ('Result -> Type','Result',1,'p_result','parser.py',494),
  ('Parameters -> LPAREN ParametersList RPAREN','Parameters',3,'p_params','parser.py',500),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_params','parser.py',501),
  ('ParametersList -> ParameterDecl','ParametersList',1,'p_param_list','parser.py',524),
  ('ParametersList -> ParametersList COMMA ParameterDecl','ParametersList',3,'p_param_list','parser.py',525),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_param_decl','parser.py',537),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_param_decl','parser.py',538),
  ('Block -> LCURL StatementList RCURL','Block',3,'p_block','parser.py',572),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',576),
  ('StatementRep -> StatementRep Statement Semi','StatementRep',3,'p_stat_rep','parser.py',580),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',581),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',594),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',595),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',596),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',600),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',601),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',608),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',609),
  ('ConstSpecRep -> ConstSpecRep ConstSpec Semi','ConstSpecRep',3,'p_const_spec_rep','parser.py',616),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',617),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',626),
  ('TypeExprListOpt -> Type EQUALS ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',648),
  ('IdentifierList -> IDENTIFIER','IdentifierList',1,'p_identifier_list','parser.py',662),
  ('IdentifierList -> IdentifierRep','IdentifierList',1,'p_identifier_list','parser.py',663),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',678),
  ('IdentifierRep -> IDENTIFIER COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',679),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',709),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',722),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',723),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',744),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',745),
  ('TypeSpecRep -> TypeSpecRep TypeSpec Semi','TypeSpecRep',3,'p_type_spec_rep','parser.py',752),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',753),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',760),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',761),
  ('AliasDecl -> IDENTIFIER EQUALS Type','AliasDecl',3,'p_alias_decl','parser.py',765),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_type_def','parser.py',777),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',790),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',791),
  ('VarSpecRep -> VarSpecRep VarSpec Semi','VarSpecRep',3,'p_var_spec_rep','parser.py',798),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',799),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',809),
  ('ExpressionListOpt -> EQUALS ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',883),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',884),
  ('ExpressionListOpt -> EQUALS MALLOC LPAREN I INT_LIT RPAREN','ExpressionListOpt',6,'p_expr_list_opt','parser.py',885),
  ('ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',899),
  ('FunctionDecl -> FUNC FunctionName CreateScope Function EndScope','FunctionDecl',5,'p_func_decl','parser.py',920),
  ('FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope','FunctionDecl',5,'p_func_decl','parser.py',921),
  ('CreateScope -> <empty>','CreateScope',0,'p_create_scope','parser.py',938),
  ('EndScope -> <empty>','EndScope',0,'p_end_scope','parser.py',942),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',946),
  ('Function -> Signature RetTypeSet FunctionBody','Function',3,'p_func','parser.py',958),
  ('RetTypeSet -> <empty>','RetTypeSet',0,'p_ret_type_set','parser.py',977),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',991),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',998),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',999),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',1000),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',1007),
  ('BasicLit -> I INT_LIT','BasicLit',2,'p_basic_lit','parser.py',1012),
  ('BasicLit -> F FLOAT_LIT','BasicLit',2,'p_basic_lit','parser.py',1013),
  ('BasicLit -> C IMAGINARY_LIT','BasicLit',2,'p_basic_lit','parser.py',1014),
  ('BasicLit -> S STRING_LIT','BasicLit',2,'p_basic_lit','parser.py',1015),
  ('I -> <empty>','I',0,'p_I','parser.py',1039),
  ('F -> <empty>','F',0,'p_F','parser.py',1045),
  ('C -> <empty>','C',0,'p_C','parser.py',1051),
  ('S -> <empty>','S',0,'p_S','parser.py',1057),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',1063),
  ('QualifiedIdent -> IDENTIFIER DOT TypeName','QualifiedIdent',3,'p_qualified_ident','parser.py',1111),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',1123),
  ('PrimaryExpr -> PrimaryExpr DOT IDENTIFIER','PrimaryExpr',3,'p_prim_expr','parser.py',1124),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',1125),
  ('PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE','PrimaryExpr',4,'p_prim_expr','parser.py',1126),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',1127),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser.py',1128),
  ('PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN','PrimaryExpr',4,'p_prim_expr','parser.py',1129),
  ('Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE','Slice',5,'p_slice','parser.py',1321),
  ('Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE','Slice',7,'p_slice','parser.py',1322),
  ('TypeAssertion -> DOT LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser.py',1330),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1335),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1336),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser.py',1340),
  ('Expression -> Expression COMPARE_OR Expression','Expression',3,'p_expr','parser.py',1341),
  ('Expression -> Expression COMPARE_AND Expression','Expression',3,'p_expr','parser.py',1342),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expr','parser.py',1343),
  ('Expression -> Expression NOTEQUALS Expression','Expression',3,'p_expr','parser.py',1344),
  ('Expression -> Expression LESSTHAN Expression','Expression',3,'p_expr','parser.py',1345),
  ('Expression -> Expression GREATERTHAN Expression','Expression',3,'p_expr','parser.py',1346),
  ('Expression -> Expression LESSTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',1347),
  ('Expression -> Expression GREATERTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',1348),
  ('Expression -> Expression OR Expression','Expression',3,'p_expr','parser.py',1349),
  ('Expression -> Expression XOR Expression','Expression',3,'p_expr','parser.py',1350),
  ('Expression -> Expression ANDXOR Expression','Expression',3,'p_expr','parser.py',1351),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expr','parser.py',1352),
  ('Expression -> Expression MODULO Expression','Expression',3,'p_expr','parser.py',1353),
  ('Expression -> Expression LSHIFT Expression','Expression',3,'p_expr','parser.py',1354),
  ('Expression -> Expression RSHIFT Expression','Expression',3,'p_expr','parser.py',1355),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expr','parser.py',1356),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expr','parser.py',1357),
  ('Expression -> Expression MULTIPLY Expression','Expression',3,'p_expr','parser.py',1358),
  ('Expression -> Expression AND Expression','Expression',3,'p_expr','parser.py',1359),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',1440),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',1441),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',1445),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1446),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1447),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',1490),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',1491),
  ('UnaryOp -> MULTIPLY','UnaryOp',1,'p_unary_op','parser.py',1492),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser.py',1493),
  ('Conversion -> TYPECAST Type LPAREN Expression RPAREN','Conversion',5,'p_conversion','parser.py',1507),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',1515),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',1516),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',1517),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',1518),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',1519),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',1520),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',1521),
  ('Statement -> CreateScope IFSYM Block EndScope_1','Statement',4,'p_statement','parser.py',1522),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',1523),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',1524),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',1525),
  ('Statement -> DeferStmt','Statement',1,'p_statement','parser.py',1526),
  ('Statement -> FallThroughStmt','Statement',1,'p_statement','parser.py',1527),
  ('Statement -> GoStmt','Statement',1,'p_statement','parser.py',1528),
  ('Statement -> PrintStmt','Statement',1,'p_statement','parser.py',1529),
  ('Statement -> ScanStmt','Statement',1,'p_statement','parser.py',1530),
  ('EndScope_1 -> <empty>','EndScope_1',0,'p_end_scope_new','parser.py',1537),
  ('PrintStmt -> PRINT PD Expression','PrintStmt',3,'p_print_stmt','parser.py',1545),
  ('PrintStmt -> PRINT PS Expression','PrintStmt',3,'p_print_stmt','parser.py',1546),
  ('PrintStmt -> PRINT PF Expression','PrintStmt',3,'p_print_stmt','parser.py',1547),
  ('ScanStmt -> SCAN Expression','ScanStmt',2,'p_scan_stmt','parser.py',1563),
  ('FallThroughStmt -> FALLTHROUGH','FallThroughStmt',1,'p_fallthrough_stmt','parser.py',1570),
  ('GoStmt -> GO Expression','GoStmt',2,'p_go_stmt','parser.py',1574),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_defer_stmt','parser.py',1580),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',1585),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1586),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1587),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',1588),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',1589),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',1594),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',1612),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',1617),
  ('IncDecStmt -> Expression INCREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1623),
  ('IncDecStmt -> Expression DECREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1624),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',1631),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1668),
  ('AssignOp -> PLUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1672),
  ('AssignOp -> MINUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1673),
  ('AssignOp -> TIMESEQUAL','AssignOp',1,'p_AssignOp','parser.py',1674),
  ('AssignOp -> DIVIDE_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1675),
  ('AssignOp -> MODEQUAL','AssignOp',1,'p_AssignOp','parser.py',1676),
  ('AssignOp -> ANDEQUAL','AssignOp',1,'p_AssignOp','parser.py',1677),
  ('AssignOp -> OREQUAL','AssignOp',1,'p_AssignOp','parser.py',1678),
  ('AssignOp -> XOREQUAL','AssignOp',1,'p_AssignOp','parser.py',1679),
  ('AssignOp -> ANDXOR_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1680),
  ('AssignOp -> LSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1681),
  ('AssignOp -> RSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1682),
  ('AssignOp -> EQUALS','AssignOp',1,'p_AssignOp','parser.py',1683),
  ('IfStmt -> IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt','IfStmt',7,'p_if_statement','parser.py',1689),
  ('IFSYM -> <empty>','IFSYM',0,'p_if_sym','parser.py',1715),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1721),
  ('ElseOpt -> ELSE CreateScope IFSYM Block EndScope_1','ElseOpt',5,'p_else_opt','parser.py',1722),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1723),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',1735),
  ('ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1','ExprSwitchStmt',8,'p_ExprSwitchStmt','parser.py',1739),
  ('StartSwitch -> <empty>','StartSwitch',0,'p_start_switch','parser.py',1770),
  ('ExprCaseClauseList -> epsilon','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',1786),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',1787),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',1803),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',1826),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',1827),
  ('ForStmt -> FOR CreateScope ConditionBlockOpt Block EndScope_1','ForStmt',5,'p_for','parser.py',1851),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1862),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1863),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1864),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1871),
  ('ForClause -> SimpleStmt Semi ConditionOpt Semi SimpleStmt','ForClause',5,'p_forclause','parser.py',1876),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',1899),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',1900),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',1907),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1956),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1957),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',1962),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',1966),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',1970),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',1971),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',1976),
  ('SourceFile -> PackageClause Semi ImportDeclRep TopLevelDeclRep','SourceFile',4,'p_source_file','parser.py',1982),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',1990),
  ('ImportDeclRep -> ImportDeclRep ImportDecl Semi','ImportDeclRep',3,'p_import_decl_rep','parser.py',1991),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl Semi','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',2000),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',2001),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',2012),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',2017),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',2028),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',2029),
  ('ImportSpecRep -> ImportSpecRep ImportSpec Semi','ImportSpecRep',3,'p_import_spec_rep','parser.py',2036),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',2037),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',2045),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2053),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2054),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2055),
  ('ImportPath -> STRING_LIT','ImportPath',1,'p_import_path','parser.py',2063),
  ('Semi -> SEMICOLON','Semi',1,'p_SemiColon','parser.py',2071),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',2084),
]
