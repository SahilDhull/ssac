
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDENTIFIERrightEQUALSNOTleftINT_LITleftFLOAT_LITleftSTRING_LITleftCOMPARE_ORleftCOMPARE_ANDleftEQEQNOTEQUALSleftORleftXORleftANDANDXORleftLESSTHANGREATERTHANLESSTHAN_EQUALGREATERTHAN_EQUALleftPLUSMINUSleftLSHIFTRSHIFTleftMULTIPLYDIVIDEMODULOleftLPARENRPARENAND ANDEQUAL ANDXOR ANDXOR_EQUAL BOOL BREAK CASE COLON COMMA COMPARE_AND COMPARE_OR CONST CONTINUE DECREMENT DEFAULT DEFER DIVIDE DIVIDE_EQUAL DOT ELSE EQEQ EQUALS FALLTHROUGH FLOAT FLOAT_LIT FOR FUNC GO GOTO GREATERTHAN GREATERTHAN_EQUAL IDENTIFIER IF IMAGINARY_LIT IMPORT INCREMENT INT INT_LIT LCURL LESSTHAN LESSTHAN_EQUAL LPAREN LSHIFT LSHIFT_EQUAL LSQUARE MALLOC MAP MINUS MINUSEQUAL MODEQUAL MODULO MULTIPLY NOT NOTEQUALS OR OREQUAL PACKAGE PD PF PLUS PLUSEQUAL PRINT PS RCURL RETURN RPAREN RSHIFT RSHIFT_EQUAL RSQUARE SCAN SEMICOLON SHORT_ASSIGNMENT STRING STRING_LIT STRUCT SWITCH TIMESEQUAL TYPE TYPECAST VAR XOR XOREQUALstart : SourceFileType : TypeName\n            | TypeLitTypeName : TypeToken\n                | QualifiedIdentTypeToken : INT\n                 | FLOAT\n                 | BOOL\n                 | STRING\n                 | TYPE IdentifierTypeLit : ArrayType\n               | ST StructType\n               | PointerType\n               | MapType\n               | SliceTypeST : SliceType : LSQUARE RSQUARE ElementTypeMapType : MAP LSQUARE KeyType RSQUARE ElementType KeyType : TypeArrayType : LSQUARE ArrayLength RSQUARE ElementType ArrayLength : I INT_LIT  ElementType : Type StructType : FuncScope STRUCT LCURL FieldDeclRep RCURL EndScopeFuncScope :  FieldDeclRep : FieldDeclRep FieldDecl Semi\n                  | epsilon  FieldDecl : IdentifierList TypePointerType : MULTIPLY BaseTypeBaseType : TypeSignature : Parameters ResultOptResultOpt : Result\n                 | epsilonResult : Parameters\n              | TypeParameters : LPAREN ParametersList RPAREN\n                  | LPAREN RPARENParametersList : ParameterDecl\n                      | ParametersList COMMA ParameterDeclParameterDecl : IdentifierList Type\n                     | TypeBlock : LCURL StatementList RCURLStatementList : StatementRepStatementRep : StatementRep Statement Semi\n                    | epsilonDeclaration : ConstDecl\n                 | TypeDecl\n                 | VarDeclTopLevelDecl : Declaration\n                  | FunctionDeclConstDecl : CONST ConstSpec\n                 | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec Semi\n                    | epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : Type EQUALS ExpressionListIdentifierList : Identifier \n                      | IdentifierRepIdentifierRep : IdentifierRep COMMA Identifier\n                     | Identifier COMMA IdentifierExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n                     | epsilonTypeDecl : TYPE TypeSpec\n                | TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec Semi\n                   | epsilonTypeSpec : AliasDecl\n                | TypeDefAliasDecl : Identifier EQUALS TypeTypeDef : Identifier TypeVarDecl : VAR VarSpec\n               | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec Semi\n                  | epsilonVarSpec : IdentifierList Type ExpressionListOptExpressionListOpt : EQUALS ExpressionList\n                         | epsilon\n                         | EQUALS MALLOC LPAREN I INT_LIT RPAREN ShortVarDecl : Identifier SHORT_ASSIGNMENT Expression FunctionDecl : FUNC FunctionName CreateScope Function EndScope\n                  | FUNC FunctionName CreateScope Signature EndScopeCreateScope : EndScope : FunctionName : IdentifierFunction : Signature RetTypeSet FunctionBodyRetTypeSet : FunctionBody : BlockOperand : Literal\n               | OperandName\n               | LPAREN Expression RPARENLiteral : BasicLitBasicLit : I INT_LIT\n              | F FLOAT_LIT\n              | C IMAGINARY_LIT\n              | S STRING_LITI : F : C : S : OperandName : IdentifierQualifiedIdent : Identifier DOT TypeNamePrimaryExpr : Operand\n                 | PrimaryExpr DOT Identifier\n                 | Conversion\n                 | PrimaryExpr LSQUARE Expression RSQUARE\n                 | PrimaryExpr Slice\n                 | PrimaryExpr TypeAssertion\n                 | PrimaryExpr LPAREN ExpressionListTypeOpt RPARENSlice : LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE\n             | LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARETypeAssertion : DOT LPAREN Type RPARENExpressionListTypeOpt : ExpressionList\n                             | epsilonExpression : UnaryExpr\n                  | Expression COMPARE_OR Expression\n                  | Expression COMPARE_AND Expression\n                  | Expression EQEQ Expression\n                  | Expression NOTEQUALS Expression\n                  | Expression LESSTHAN Expression\n                  | Expression GREATERTHAN Expression\n                  | Expression LESSTHAN_EQUAL Expression\n                  | Expression GREATERTHAN_EQUAL Expression\n                  | Expression OR Expression\n                  | Expression XOR Expression\n                  | Expression ANDXOR Expression\n                  | Expression DIVIDE Expression\n                  | Expression MODULO Expression\n                  | Expression LSHIFT Expression\n                  | Expression RSHIFT Expression\n                  | Expression PLUS Expression\n                  | Expression MINUS Expression\n                  | Expression MULTIPLY Expression\n                  | Expression AND ExpressionExpressionOpt : Expression\n                     | epsilonUnaryExpr : PrimaryExpr\n                 | UnaryOp UnaryExpr\n                 | NOT UnaryExprUnaryOp : PLUS\n               | MINUS\n               | MULTIPLY\n               | AND Conversion : TYPECAST Type LPAREN Expression RPARENStatement : Declaration\n               | LabeledStmt\n               | SimpleStmt\n               | ReturnStmt\n               | BreakStmt\n               | ContinueStmt\n               | GotoStmt\n               | CreateScope IFSYM Block EndScope_1\n               | IfStmt\n               | SwitchStmt\n               | ForStmt\n               | DeferStmt\n               | FallThroughStmt\n               | GoStmt\n               | PrintStmt\n               | ScanStmtEndScope_1 : PrintStmt : PRINT PD Expression\n               | PRINT PS Expression\n               | PRINT PF ExpressionScanStmt : SCAN ExpressionFallThroughStmt : FALLTHROUGHGoStmt : GO ExpressionDeferStmt : DEFER Expression SimpleStmt : epsilon\n                 | ExpressionStmt\n                 | IncDecStmt\n                 | Assignment\n                 | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : Identifier  ExpressionStmt : Expression  IncDecStmt : Expression INCREMENT\n                 | Expression DECREMENT  Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOp AssignOp : PLUSEQUAL\n               | MINUSEQUAL\n               | TIMESEQUAL\n               | DIVIDE_EQUAL\n               | MODEQUAL\n               | ANDEQUAL\n               | OREQUAL\n               | XOREQUAL\n               | ANDXOR_EQUAL\n               | LSHIFT_EQUAL\n               | RSHIFT_EQUAL\n               | EQUALS  IfStmt : IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt IFSYM :  ElseOpt : ELSE IfStmt\n              | ELSE CreateScope IFSYM Block EndScope_1\n              | epsilon  SwitchStmt : ExprSwitchStmtExprSwitchStmt : SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1StartSwitch : ExprCaseClauseList : epsilon\n                 | ExprCaseClauseList ExprCaseClause\n    ExprCaseClause : ExprSwitchCase COLON StatementList ExprSwitchCase : CASE ExpressionList\n                 | DEFAULT \n    ForStmt : FOR CreateScope ConditionBlockOpt Block EndScope_1ConditionBlockOpt : epsilon\n             | Condition\n             | ForClauseCondition : Expression ForClause : SimpleStmt Semi ConditionOpt Semi SimpleStmtConditionOpt : epsilon\n          | Condition ReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n             | epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n        | epsilon GotoStmt : GOTO Label SourceFile : PackageClause Semi ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n           | ImportDeclRep ImportDecl SemiTopLevelDeclRep : TopLevelDeclRep TopLevelDecl Semi\n                     | epsilonPackageClause : PACKAGE PackageNamePackageName : IdentifierImportDecl : IMPORT ImportSpec\n          | IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec Semi\n            | epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n                        | PackageName\n                        | epsilon ImportPath : STRING_LIT Semi : SEMICOLONIdentifier : IDENTIFIERepsilon : '
    
_lr_action_items = {'LSQUARE':([7,34,36,37,43,48,57,67,84,87,93,97,101,103,105,117,120,121,128,131,133,134,137,141,154,156,159,166,167,168,169,171,174,199,205,206,214,215,216,246,248,254,275,298,299,342,353,366,],[-238,-57,65,-56,65,65,65,97,65,-58,65,65,-59,65,65,-104,-89,-91,172,-102,-88,-100,65,65,65,-36,-56,-94,-93,-92,-106,-107,-95,65,65,-35,65,-103,-90,-108,-105,65,-100,-111,-143,-109,-100,-110,]),'NOTEQUALS':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,177,-137,-138,-94,-93,-92,-106,-107,-95,177,177,-103,-90,-125,-118,-129,177,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,177,-123,-108,-105,177,177,-100,177,177,-111,-143,177,177,177,177,177,-109,177,177,177,-100,177,177,177,-110,177,]),'ANDXOR':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,176,-137,-138,-94,-93,-92,-106,-107,-95,176,176,-103,-90,-125,176,-129,176,176,-119,-128,-132,-127,-131,-122,-130,176,-126,-120,-133,-121,176,176,-108,-105,176,176,-100,176,176,-111,-143,176,176,176,176,176,-109,176,176,176,-100,176,176,176,-110,176,]),'PF':([270,],[313,]),'CONST':([5,6,10,11,12,13,26,38,203,241,242,304,311,388,],[-237,-239,-222,-239,16,-225,-223,-224,-239,16,-44,-43,16,-239,]),'LPAREN':([5,7,15,16,23,25,39,40,56,58,59,61,62,63,64,68,69,72,73,75,77,90,91,92,98,100,103,108,116,117,118,119,120,121,122,123,128,131,132,133,134,136,138,139,142,156,161,166,167,168,169,170,171,172,173,174,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,203,206,215,216,219,237,238,241,242,246,247,248,253,256,262,267,274,275,280,286,292,298,299,301,304,311,312,313,314,315,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,342,343,353,361,366,374,379,388,],[-237,-238,27,35,42,46,-84,-82,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,105,-29,-28,132,-12,-10,105,132,132,-104,-141,-140,-89,-91,132,-139,170,-102,132,-88,-100,-142,-22,-17,-101,-36,207,-94,-93,-92,-106,132,-107,132,214,-95,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,237,-20,-239,-35,-103,-90,132,132,-18,132,-44,-108,132,-105,-83,132,132,132,-82,-100,132,132,132,-111,-143,-23,-43,132,132,132,132,132,132,-189,-179,-190,-181,-184,-187,-191,-180,-188,132,-185,-186,-182,-183,-109,132,-100,132,-110,132,132,-239,]),'SCAN':([5,203,241,242,304,311,388,],[-237,-239,286,-44,-43,286,-239,]),'DEFAULT':([5,241,242,304,363,372,375,376,383,388,392,],[-237,-42,-44,-43,-199,-239,-200,381,-201,-239,-202,]),'MALLOC':([108,],[161,]),'XOREQUAL':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,178,191,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,275,283,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,326,-239,-111,-143,-109,-100,-239,-110,]),'PRINT':([5,203,241,242,304,311,388,],[-237,-239,270,-44,-43,270,-239,]),'COMPARE_OR':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,180,-137,-138,-94,-93,-92,-106,-107,-95,180,180,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,180,180,-100,180,180,-111,-143,180,180,180,180,180,-109,180,180,180,-100,180,180,180,-110,180,]),'COLON':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,172,174,178,191,211,212,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,268,275,297,298,299,342,366,380,381,387,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-239,-137,-138,-94,-93,-92,-106,-107,-239,-95,-60,-62,247,-135,-134,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,311,-174,343,-111,-143,-109,-110,388,-204,-203,]),'GREATERTHAN_EQUAL':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,187,-137,-138,-94,-93,-92,-106,-107,-95,187,187,-103,-90,187,187,-129,187,187,-119,-128,-132,-127,-131,-122,-130,187,-126,-120,187,-121,187,187,-108,-105,187,187,-100,187,187,-111,-143,187,187,187,187,187,-109,187,187,187,-100,187,187,187,-110,187,]),'LSHIFT':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,183,-137,-138,-94,-93,-92,-106,-107,-95,183,183,-103,-90,183,183,-129,183,183,183,-128,-132,-127,183,183,183,183,-126,183,183,183,183,183,-108,-105,183,183,-100,183,183,-111,-143,183,183,183,183,183,-109,183,183,183,-100,183,183,183,-110,183,]),'MULTIPLY':([5,7,34,36,37,43,48,57,84,87,92,93,97,101,103,105,108,116,117,118,119,120,121,122,123,127,128,131,132,133,134,135,136,137,141,154,156,159,164,165,166,167,168,169,170,171,172,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,199,203,205,206,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,241,242,246,247,248,250,251,254,256,262,267,274,275,280,284,286,292,297,298,299,303,304,305,311,312,313,314,315,316,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,338,340,342,343,345,346,347,353,354,355,360,361,366,370,374,379,388,],[-237,-238,-57,57,-56,57,57,57,57,-58,118,57,57,-59,57,57,118,118,-104,-141,-140,-89,-91,118,-139,-114,-136,-102,118,-88,-100,184,-142,57,57,57,-36,-56,-137,-138,-94,-93,-92,-106,118,-107,118,-95,184,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,57,-239,57,-35,184,57,-103,-90,184,184,118,184,184,184,184,184,-132,-127,184,184,184,184,-126,184,184,184,184,184,118,118,-44,-108,118,-105,184,184,57,118,118,118,-82,-100,118,184,118,118,184,-111,-143,184,-43,184,118,118,118,118,118,118,184,-189,-179,-190,-181,-184,-187,-191,-180,-188,118,-185,-186,-182,-183,184,184,-109,118,184,184,184,-100,184,184,184,118,-110,184,118,118,-239,]),'RETURN':([5,203,241,242,304,311,388,],[-237,-239,267,-44,-43,267,-239,]),'MINUS':([5,7,92,108,116,117,118,119,120,121,122,123,127,128,131,132,133,134,135,136,164,165,166,167,168,169,170,171,172,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,203,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,241,242,246,247,248,250,251,256,262,267,274,275,280,284,286,292,297,298,299,303,304,305,311,312,313,314,315,316,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,338,340,342,343,345,346,347,353,354,355,360,361,366,370,374,379,388,],[-237,-238,119,119,119,-104,-141,-140,-89,-91,119,-139,-114,-136,-102,119,-88,-100,186,-142,-137,-138,-94,-93,-92,-106,119,-107,119,-95,186,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-239,186,-103,-90,186,186,119,-129,186,186,186,-128,-132,-127,-131,186,-130,186,-126,186,186,186,186,186,119,119,-44,-108,119,-105,186,186,119,119,119,-82,-100,119,186,119,119,186,-111,-143,186,-43,186,119,119,119,119,119,119,186,-189,-179,-190,-181,-184,-187,-191,-180,-188,119,-185,-186,-182,-183,186,186,-109,119,186,186,186,-100,186,186,186,119,-110,186,119,119,-239,]),'DOT':([5,7,15,27,49,50,66,114,117,120,121,128,131,133,134,159,166,167,168,169,171,174,215,216,246,248,275,298,299,342,353,366,],[-237,-238,32,-239,-231,32,96,-230,-104,-89,-91,173,-102,-88,-100,96,-94,-93,-92,-106,-107,-95,-103,-90,-108,-105,-100,-111,-143,-109,-100,-110,]),'LCURL':([5,7,56,58,59,61,62,63,64,68,69,72,73,75,90,91,98,100,103,104,117,120,121,127,128,131,133,134,135,138,139,142,145,147,148,149,150,151,153,156,164,165,166,167,168,169,171,174,178,191,198,203,206,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,241,242,246,248,250,253,257,263,274,282,284,289,290,291,298,299,301,304,311,315,320,335,336,339,340,342,349,350,351,352,353,354,355,356,357,359,365,366,374,378,385,388,390,393,],[-237,-238,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,-29,-28,-12,-10,-239,-86,-104,-89,-91,-114,-136,-102,-88,-100,-239,-22,-17,-101,200,-33,-34,-30,-32,-31,203,-36,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-20,-239,-35,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-18,-82,-44,-108,-105,-61,-83,-169,-171,-82,-168,-175,-170,-193,-172,-111,-143,-23,-43,-82,-239,-82,-176,-177,203,-82,-109,-207,-206,203,-208,-100,-209,-79,363,-178,-193,203,-110,-239,-210,-82,-239,-193,203,]),'CASE':([5,241,242,304,363,372,375,376,383,388,392,],[-237,-42,-44,-43,-199,-239,-200,379,-201,-239,-202,]),'DEFER':([5,203,241,242,304,311,388,],[-237,-239,262,-44,-43,262,-239,]),'RPAREN':([5,7,27,35,42,46,49,50,54,55,56,58,59,61,62,63,64,68,69,72,73,75,78,79,81,82,90,91,98,100,105,114,115,117,120,121,127,128,131,133,134,135,138,139,142,155,157,158,160,163,164,165,166,167,168,169,170,171,174,175,178,191,198,204,208,209,210,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,244,246,248,249,250,251,253,295,298,299,301,342,366,],[-237,-238,-239,-239,-239,-239,-231,85,89,-53,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,106,-74,111,-66,-29,-28,-12,-10,156,-230,-52,-104,-89,-91,-114,-136,-102,-88,-100,-239,-22,-17,-101,-40,206,-37,-73,-65,-137,-138,-94,-93,-92,-106,-239,-107,-95,216,-60,-62,-20,-39,-113,246,-112,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-18,-38,-108,-105,298,-61,299,-83,341,-111,-143,-23,-109,-110,]),'SEMICOLON':([1,5,7,8,9,14,17,18,19,20,21,24,28,33,41,44,45,47,51,52,56,58,59,61,62,63,64,68,69,71,72,73,75,80,83,85,86,88,89,90,91,98,100,102,103,104,106,107,109,110,111,112,113,117,120,121,127,128,130,131,133,134,135,138,139,142,146,147,148,149,150,151,152,156,162,164,165,166,167,168,169,171,174,178,191,198,201,202,203,206,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,241,242,246,248,250,252,253,255,257,258,259,260,261,263,265,266,267,269,271,272,273,274,275,276,277,278,279,281,282,284,285,287,288,289,291,293,294,298,299,301,302,303,304,305,306,307,308,309,310,311,315,317,318,319,335,336,337,338,341,342,344,345,346,347,348,350,353,354,355,357,358,361,362,364,366,367,368,369,370,371,373,377,382,384,386,388,389,391,394,395,],[5,-237,-238,-226,-227,5,-49,5,-48,-45,-46,-47,-228,-50,-71,-68,-67,-63,-232,-236,-11,-3,-4,-2,-15,-9,-14,-6,-7,-54,-8,-13,-5,-239,-70,-229,5,5,-51,-29,-28,-12,-10,-83,-239,-83,-72,5,-77,-75,-64,5,-69,-104,-89,-91,-114,-136,-55,-102,-88,-100,-239,-22,-17,-101,-80,-33,-34,-30,-32,-31,-81,-36,-76,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-20,-85,-87,-239,-35,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-18,-239,-44,-108,-105,-61,5,-83,-149,-169,-159,5,-152,-156,-171,-145,-158,-239,-197,-157,-155,-150,-82,-100,-147,-153,-239,-165,-144,-168,-175,-239,-146,-154,-170,-172,-148,-41,-111,-143,-23,-27,-166,-43,-167,-174,-220,-213,-215,-214,-239,-239,-219,-218,-217,-176,-177,-216,-164,-78,-109,-173,-162,-163,-161,5,-168,-100,-175,-79,-178,-160,-239,-160,-151,-110,-212,-211,5,-209,-205,-160,-239,-160,-196,-192,-239,-198,-194,-160,-195,]),'FALLTHROUGH':([5,203,241,242,304,311,388,],[-237,-239,279,-44,-43,279,-239,]),'RSHIFT_EQUAL':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,178,191,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,275,283,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,323,-239,-111,-143,-109,-100,-239,-110,]),'MODEQUAL':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,178,191,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,275,283,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,325,-239,-111,-143,-109,-100,-239,-110,]),'RCURL':([5,200,203,239,240,241,242,243,300,304,363,372,375,376,383,388,392,],[-237,-239,-239,253,-26,-42,-44,294,-25,-43,-199,-239,-200,382,-201,-239,-202,]),'EQEQ':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,181,-137,-138,-94,-93,-92,-106,-107,-95,181,181,-103,-90,-125,-118,-129,181,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,181,-123,-108,-105,181,181,-100,181,181,-111,-143,181,181,181,181,181,-109,181,181,181,-100,181,181,181,-110,181,]),'SWITCH':([5,203,241,242,304,311,388,],[-237,-239,280,-44,-43,280,-239,]),'ANDXOR_EQUAL':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,178,191,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,275,283,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,329,-239,-111,-143,-109,-100,-239,-110,]),'PLUS':([5,7,92,108,116,117,118,119,120,121,122,123,127,128,131,132,133,134,135,136,164,165,166,167,168,169,170,171,172,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,203,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,241,242,246,247,248,250,251,256,262,267,274,275,280,284,286,292,297,298,299,303,304,305,311,312,313,314,315,316,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,338,340,342,343,345,346,347,353,354,355,360,361,366,370,374,379,388,],[-237,-238,123,123,123,-104,-141,-140,-89,-91,123,-139,-114,-136,-102,123,-88,-100,188,-142,-137,-138,-94,-93,-92,-106,123,-107,123,-95,188,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-239,188,-103,-90,188,188,123,-129,188,188,188,-128,-132,-127,-131,188,-130,188,-126,188,188,188,188,188,123,123,-44,-108,123,-105,188,188,123,123,123,-82,-100,123,188,123,123,188,-111,-143,188,-43,188,123,123,123,123,123,123,188,-189,-179,-190,-181,-184,-187,-191,-180,-188,123,-185,-186,-182,-183,188,188,-109,123,188,188,188,-100,188,188,188,123,-110,188,123,123,-239,]),'DIVIDE_EQUAL':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,178,191,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,275,283,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,334,-239,-111,-143,-109,-100,-239,-110,]),'INCREMENT':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,275,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-100,335,-111,-143,-109,-100,335,-110,]),'IMPORT':([5,6,10,11,26,],[-237,-239,-222,15,-223,]),'STRING':([7,34,36,37,43,48,57,84,87,93,96,97,101,103,105,137,141,154,156,159,199,205,206,214,254,],[-238,-57,63,-56,63,63,63,63,-58,63,63,63,-59,63,63,63,63,63,-36,-56,63,63,-35,63,63,]),'IDENTIFIER':([2,5,7,15,16,22,23,25,27,34,35,36,37,42,43,46,48,49,50,53,54,55,57,74,76,78,79,81,82,84,87,92,93,96,97,101,103,105,108,114,115,116,118,119,122,123,132,136,137,141,154,156,159,160,163,170,172,173,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,199,200,203,205,206,214,219,237,239,240,241,242,247,254,256,262,264,267,274,278,280,285,286,292,300,304,311,312,313,314,315,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,361,374,379,388,],[7,-237,-238,7,7,7,7,7,-239,-57,-239,7,-56,-239,7,-239,7,-231,7,7,7,-53,7,7,7,7,-74,7,-66,7,-58,7,7,7,7,-59,7,7,7,-230,-52,7,-141,-140,7,-139,7,-142,7,7,7,-36,-56,-73,-65,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-239,-239,7,-35,7,7,7,7,-26,7,-44,7,7,7,7,7,7,-82,7,7,7,7,7,-25,-43,7,7,7,7,7,7,-189,-179,-190,-181,-184,-187,-191,-180,-188,7,-185,-186,-182,-183,7,7,7,7,-239,]),'SHORT_ASSIGNMENT':([7,275,353,],[-238,316,316,]),'$end':([3,4,5,6,10,11,12,13,26,38,],[-1,0,-237,-239,-222,-239,-221,-225,-223,-224,]),'AND':([5,7,92,108,116,117,118,119,120,121,122,123,127,128,131,132,133,134,135,136,164,165,166,167,168,169,170,171,172,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,203,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,241,242,246,247,248,250,251,256,262,267,274,275,280,284,286,292,297,298,299,303,304,305,311,312,313,314,315,316,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,338,340,342,343,345,346,347,353,354,355,360,361,366,370,374,379,388,],[-237,-238,136,136,136,-104,-141,-140,-89,-91,136,-139,-114,-136,-102,136,-88,-100,193,-142,-137,-138,-94,-93,-92,-106,136,-107,136,-95,193,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,-239,193,-103,-90,-125,193,136,-129,193,193,-119,-128,-132,-127,-131,-122,-130,193,-126,-120,-133,-121,193,193,136,136,-44,-108,136,-105,193,193,136,136,136,-82,-100,136,193,136,136,193,-111,-143,193,-43,193,136,136,136,136,136,136,193,-189,-179,-190,-181,-184,-187,-191,-180,-188,136,-185,-186,-182,-183,193,193,-109,136,193,193,193,-100,193,193,193,136,-110,193,136,136,-239,]),'STRUCT':([7,34,36,37,43,48,57,70,84,87,93,97,99,101,103,105,137,141,154,156,159,199,205,206,214,254,],[-238,-57,-16,-56,-16,-16,-16,-24,-16,-58,-16,-16,145,-59,-16,-16,-16,-16,-16,-36,-56,-16,-16,-35,-16,-16,]),'PD':([270,],[314,]),'MODULO':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,185,-137,-138,-94,-93,-92,-106,-107,-95,185,185,-103,-90,185,185,185,185,185,185,185,-132,-127,185,185,185,185,-126,185,185,185,185,185,-108,-105,185,185,-100,185,185,-111,-143,185,185,185,185,185,-109,185,185,185,-100,185,185,185,-110,185,]),'GOTO':([5,203,241,242,304,311,388,],[-237,-239,264,-44,-43,264,-239,]),'FOR':([5,203,241,242,304,311,388,],[-237,-239,274,-44,-43,274,-239,]),'PACKAGE':([0,],[2,]),'COMPARE_AND':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,195,-137,-138,-94,-93,-92,-106,-107,-95,195,195,-103,-90,-125,-118,-129,195,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,195,195,-100,195,195,-111,-143,195,195,195,195,195,-109,195,195,195,-100,195,195,195,-110,195,]),'LSHIFT_EQUAL':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,178,191,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,275,283,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,321,-239,-111,-143,-109,-100,-239,-110,]),'RSQUARE':([7,56,58,59,61,62,63,64,65,68,69,72,73,75,90,91,95,98,100,117,120,121,127,128,131,133,134,138,139,140,142,143,144,164,165,166,167,168,169,171,174,198,212,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,246,247,248,253,296,297,298,299,301,342,360,366,],[-238,-11,-3,-4,-2,-15,-9,-14,93,-6,-7,-8,-13,-5,-29,-28,141,-12,-10,-104,-89,-91,-114,-136,-102,-88,-100,-22,-17,-21,-101,-19,199,-137,-138,-94,-93,-92,-106,-107,-95,-20,-135,248,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-18,-108,-239,-105,-83,342,-134,-111,-143,-23,-109,366,-110,]),'XOR':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,189,-137,-138,-94,-93,-92,-106,-107,-95,189,189,-103,-90,-125,189,-129,189,189,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,189,189,-108,-105,189,189,-100,189,189,-111,-143,189,189,189,189,189,-109,189,189,189,-100,189,189,189,-110,189,]),'EQUALS':([7,48,56,58,59,60,61,62,63,64,68,69,72,73,75,80,90,91,98,100,117,120,121,127,128,131,133,134,138,139,142,164,165,166,167,168,169,171,174,178,191,198,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,246,248,250,253,275,283,284,298,299,301,342,353,354,366,],[-238,84,-11,-3,-4,92,-2,-15,-9,-14,-6,-7,-8,-13,-5,108,-29,-28,-12,-10,-104,-89,-91,-114,-136,-102,-88,-100,-22,-17,-101,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-20,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-18,-108,-105,-61,-83,-100,327,-239,-111,-143,-23,-109,-100,-239,-110,]),'DIVIDE':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,190,-137,-138,-94,-93,-92,-106,-107,-95,190,190,-103,-90,190,190,190,190,190,190,190,-132,-127,190,190,190,190,-126,190,190,190,190,190,-108,-105,190,190,-100,190,190,-111,-143,190,190,190,190,190,-109,190,190,190,-100,190,190,190,-110,190,]),'ELSE':([294,373,377,],[-41,-160,385,]),'PLUSEQUAL':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,178,191,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,275,283,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,328,-239,-111,-143,-109,-100,-239,-110,]),'GREATERTHAN':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,192,-137,-138,-94,-93,-92,-106,-107,-95,192,192,-103,-90,192,192,-129,192,192,-119,-128,-132,-127,-131,-122,-130,192,-126,-120,192,-121,192,192,-108,-105,192,192,-100,192,192,-111,-143,192,192,192,192,192,-109,192,192,192,-100,192,192,192,-110,192,]),'FUNC':([5,6,10,11,12,13,26,38,],[-237,-239,-222,-239,22,-225,-223,-224,]),'GO':([5,203,241,242,304,311,388,],[-237,-239,256,-44,-43,256,-239,]),'VAR':([5,6,10,11,12,13,26,38,203,241,242,304,311,388,],[-237,-239,-222,-239,23,-225,-223,-224,-239,23,-44,-43,23,-239,]),'OREQUAL':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,178,191,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,275,283,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,332,-239,-111,-143,-109,-100,-239,-110,]),'IF':([5,203,241,242,304,311,385,388,],[-237,-239,292,-44,-43,292,292,-239,]),'IMAGINARY_LIT':([5,92,108,116,118,119,122,123,124,132,136,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,203,219,237,241,242,247,256,262,267,274,280,286,292,304,311,312,313,314,315,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,361,374,379,388,],[-237,-98,-98,-98,-141,-140,-98,-139,166,-98,-142,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-239,-98,-98,-98,-44,-98,-98,-98,-98,-82,-98,-98,-98,-43,-98,-98,-98,-98,-98,-98,-189,-179,-190,-181,-184,-187,-191,-180,-188,-98,-185,-186,-182,-183,-98,-98,-98,-98,-239,]),'MAP':([7,34,36,37,43,48,57,84,87,93,97,101,103,105,137,141,154,156,159,199,205,206,214,254,],[-238,-57,67,-56,67,67,67,67,-58,67,67,-59,67,67,67,67,67,-36,-56,67,67,-35,67,67,]),'TYPECAST':([5,92,108,116,118,119,122,123,132,136,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,203,219,237,241,242,247,256,262,267,274,280,286,292,304,311,312,313,314,315,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,361,374,379,388,],[-237,137,137,137,-141,-140,137,-139,137,-142,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-239,137,137,137,-44,137,137,137,137,-82,137,137,137,-43,137,137,137,137,137,137,-189,-179,-190,-181,-184,-187,-191,-180,-188,137,-185,-186,-182,-183,137,137,137,137,-239,]),'RSHIFT':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,179,-137,-138,-94,-93,-92,-106,-107,-95,179,179,-103,-90,179,179,-129,179,179,179,-128,-132,-127,179,179,179,179,-126,179,179,179,179,179,-108,-105,179,179,-100,179,179,-111,-143,179,179,179,179,179,-109,179,179,179,-100,179,179,179,-110,179,]),'LESSTHAN_EQUAL':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,194,-137,-138,-94,-93,-92,-106,-107,-95,194,194,-103,-90,194,194,-129,194,194,-119,-128,-132,-127,-131,-122,-130,194,-126,-120,194,-121,194,194,-108,-105,194,194,-100,194,194,-111,-143,194,194,194,194,194,-109,194,194,194,-100,194,194,194,-110,194,]),'INT':([7,34,36,37,43,48,57,84,87,93,96,97,101,103,105,137,141,154,156,159,199,205,206,214,254,],[-238,-57,68,-56,68,68,68,68,-58,68,68,68,-59,68,68,68,68,68,-36,-56,68,68,-35,68,68,]),'TIMESEQUAL':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,178,191,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,275,283,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,333,-239,-111,-143,-109,-100,-239,-110,]),'MINUSEQUAL':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,178,191,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,275,283,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,324,-239,-111,-143,-109,-100,-239,-110,]),'FLOAT':([7,34,36,37,43,48,57,84,87,93,96,97,101,103,105,137,141,154,156,159,199,205,206,214,254,],[-238,-57,69,-56,69,69,69,69,-58,69,69,69,-59,69,69,69,69,69,-36,-56,69,69,-35,69,69,]),'FLOAT_LIT':([5,92,108,116,118,119,122,123,125,132,136,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,203,219,237,241,242,247,256,262,267,274,280,286,292,304,311,312,313,314,315,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,361,374,379,388,],[-237,-97,-97,-97,-141,-140,-97,-139,167,-97,-142,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-239,-97,-97,-97,-44,-97,-97,-97,-97,-82,-97,-97,-97,-43,-97,-97,-97,-97,-97,-97,-189,-179,-190,-181,-184,-187,-191,-180,-188,-97,-185,-186,-182,-183,-97,-97,-97,-97,-239,]),'LESSTHAN':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,182,-137,-138,-94,-93,-92,-106,-107,-95,182,182,-103,-90,182,182,-129,182,182,-119,-128,-132,-127,-131,-122,-130,182,-126,-120,182,-121,182,182,-108,-105,182,182,-100,182,182,-111,-143,182,182,182,182,182,-109,182,182,182,-100,182,182,182,-110,182,]),'BREAK':([5,203,241,242,304,311,388,],[-237,-239,285,-44,-43,285,-239,]),'INT_LIT':([5,65,92,94,108,116,118,119,122,123,126,132,136,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,203,207,219,237,241,242,245,247,256,262,267,274,280,286,292,304,311,312,313,314,315,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,361,374,379,388,],[-237,-96,-96,140,-96,-96,-141,-140,-96,-139,168,-96,-142,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-239,-96,-96,-96,-96,-44,295,-96,-96,-96,-96,-82,-96,-96,-96,-43,-96,-96,-96,-96,-96,-96,-189,-179,-190,-181,-184,-187,-191,-180,-188,-96,-185,-186,-182,-183,-96,-96,-96,-96,-239,]),'CONTINUE':([5,203,241,242,304,311,388,],[-237,-239,278,-44,-43,278,-239,]),'BOOL':([7,34,36,37,43,48,57,84,87,93,96,97,101,103,105,137,141,154,156,159,199,205,206,214,254,],[-238,-57,72,-56,72,72,72,72,-58,72,72,72,-59,72,72,72,72,72,-36,-56,72,72,-35,72,72,]),'PS':([270,],[312,]),'STRING_LIT':([5,7,9,15,27,29,30,31,32,49,50,92,108,114,116,118,119,122,123,129,132,136,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,203,219,237,241,242,247,256,262,267,274,280,286,292,304,311,312,313,314,315,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,361,374,379,388,],[-237,-238,-227,-239,-239,-235,-234,52,-233,-231,-239,-99,-99,-230,-99,-141,-140,-99,-139,174,-99,-142,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-239,-99,-99,-99,-44,-99,-99,-99,-99,-82,-99,-99,-99,-43,-99,-99,-99,-99,-99,-99,-189,-179,-190,-181,-184,-187,-191,-180,-188,-99,-185,-186,-182,-183,-99,-99,-99,-99,-239,]),'NOT':([5,92,108,116,118,119,122,123,132,136,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,203,219,237,241,242,247,256,262,267,274,280,286,292,304,311,312,313,314,315,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,361,374,379,388,],[-237,122,122,122,-141,-140,122,-139,122,-142,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-239,122,122,122,-44,122,122,122,122,-82,122,122,122,-43,122,122,122,122,122,122,-189,-179,-190,-181,-184,-187,-191,-180,-188,122,-185,-186,-182,-183,122,122,122,122,-239,]),'ANDEQUAL':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,178,191,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,275,283,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-60,-62,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-61,-100,331,-239,-111,-143,-109,-100,-239,-110,]),'DECREMENT':([7,117,120,121,127,128,131,133,134,164,165,166,167,168,169,171,174,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,275,284,298,299,342,353,354,366,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,-137,-138,-94,-93,-92,-106,-107,-95,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-108,-105,-100,336,-111,-143,-109,-100,336,-110,]),'COMMA':([7,34,37,56,58,59,61,62,63,64,68,69,72,73,75,87,90,91,98,100,101,117,120,121,127,128,131,133,134,135,138,139,142,155,157,158,159,164,165,166,167,168,169,171,174,178,191,198,204,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,244,246,248,250,253,275,284,298,299,301,342,353,354,366,],[-238,53,76,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,-58,-29,-28,-12,-10,-59,-104,-89,-91,-114,-136,-102,-88,-100,-239,-22,-17,-101,-40,205,-37,76,-137,-138,-94,-93,-92,-106,-107,-95,219,-62,-20,-39,-103,-90,-125,-118,-129,-115,-117,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,-116,-123,-18,-38,-108,-105,-61,-83,-100,-239,-111,-143,-23,-109,-100,-239,-110,]),'TYPE':([5,6,7,10,11,12,13,26,34,36,37,38,43,48,57,84,87,93,96,97,101,103,105,137,141,154,156,159,199,203,205,206,214,241,242,254,304,311,388,],[-237,-239,-238,-222,-239,25,-225,-223,-57,74,-56,-224,74,74,74,74,-58,74,74,74,-59,74,74,74,74,74,-36,-56,74,-239,74,-35,74,25,-44,74,-43,25,-239,]),'OR':([7,117,120,121,127,128,131,133,134,135,164,165,166,167,168,169,171,174,175,213,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,246,248,250,251,275,284,297,298,299,303,305,320,338,340,342,345,346,347,353,354,355,360,366,370,],[-238,-104,-89,-91,-114,-136,-102,-88,-100,196,-137,-138,-94,-93,-92,-106,-107,-95,196,196,-103,-90,-125,196,-129,196,196,-119,-128,-132,-127,-131,-122,-130,-124,-126,-120,-133,-121,196,-123,-108,-105,196,196,-100,196,196,-111,-143,196,196,196,196,196,-109,196,196,196,-100,196,196,196,-110,196,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([153,],[201,]),'Conversion':([92,108,116,122,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'ContinueStmt':([241,311,],[255,255,]),'ExpressionRep':([135,284,354,],[178,178,178,]),'ExpressionStmt':([241,311,315,374,],[257,257,257,257,]),'ScanStmt':([241,311,],[258,258,]),'Statement':([241,311,],[259,344,]),'IfStmt':([241,311,385,],[260,260,391,]),'FallThroughStmt':([241,311,],[261,261,]),'StatementRep':([203,388,],[241,241,]),'TypeToken':([36,43,48,57,84,93,96,97,103,105,137,141,154,199,205,214,254,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'AliasDecl':([25,81,],[45,45,]),'PackageNameDotOpt':([15,50,],[31,31,]),'TypeName':([36,43,48,57,84,93,96,97,103,105,137,141,154,199,205,214,254,],[61,61,61,61,61,61,142,61,61,61,61,61,61,61,61,61,61,]),'ExprCaseClause':([376,],[383,]),'ParametersList':([105,],[157,]),'ParameterDecl':([105,205,],[158,244,]),'FuncScope':([70,],[99,]),'FunctionName':([22,],[40,]),'LabeledStmt':([241,311,],[265,265,]),'KeyType':([97,],[144,]),'StatementList':([203,388,],[243,392,]),'TypeAssertion':([128,],[171,]),'ConditionOpt':([361,],[369,]),'EndScope_1':([358,362,373,382,394,],[364,371,377,389,395,]),'ElementType':([93,141,199,],[139,198,238,]),'RetTypeSet':([104,],[153,]),'PointerType':([36,43,48,57,84,93,97,103,105,137,141,154,199,205,214,254,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'EndScope':([102,104,253,],[146,152,301,]),'VarSpecRep':([42,],[78,]),'VarDecl':([12,241,311,],[24,24,24,]),'PrintStmt':([241,311,],[266,266,]),'ConstSpecRep':([35,],[54,]),'Operand':([92,108,116,122,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'TypeSpec':([25,81,],[47,112,]),'Parameters':([77,103,],[103,147,]),'UnaryOp':([92,108,116,122,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'PackageName':([2,15,50,],[8,30,30,]),'SourceFile':([0,],[3,]),'ExpressionListPureOpt':([267,],[308,]),'Label':([241,264,278,285,311,],[268,307,318,318,268,]),'FunctionDecl':([12,],[17,]),'TopLevelDecl':([12,],[18,]),'ExprSwitchStmt':([241,311,],[269,269,]),'IdentifierList':([16,23,54,78,105,205,239,],[36,43,36,43,154,154,254,]),'IdentifierRep':([16,23,54,78,105,205,239,],[34,34,34,34,34,34,34,]),'Type':([36,43,48,57,84,93,97,103,105,137,141,154,199,205,214,254,],[60,80,83,90,113,138,143,148,155,197,138,204,138,155,249,302,]),'ImportDeclRep':([6,],[11,]),'GoStmt':([241,311,],[271,271,]),'DeferStmt':([241,311,],[272,272,]),'PackageClause':([0,],[1,]),'ResultOpt':([103,],[149,]),'IncDecStmt':([241,311,315,374,],[289,289,289,289,]),'GotoStmt':([241,311,],[273,273,]),'TopLevelDeclRep':([11,],[12,]),'C':([92,108,116,122,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'Semi':([1,14,18,86,88,107,112,252,259,348,369,],[6,26,38,114,115,160,163,300,304,361,374,]),'PrimaryExpr':([92,108,116,122,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'S':([92,108,116,122,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'StartSwitch':([363,],[372,]),'assign_op':([283,],[330,]),'Signature':([77,],[104,]),'Identifier':([2,15,16,22,23,25,36,43,48,50,53,54,57,74,76,78,81,84,92,93,96,97,103,105,108,116,122,132,137,141,154,170,172,173,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,199,205,214,219,237,239,241,247,254,256,262,264,267,278,280,285,286,292,311,312,313,314,315,316,330,343,361,374,379,],[9,9,37,39,37,48,66,66,66,9,87,37,66,100,101,37,48,66,134,66,66,66,66,159,134,134,134,134,66,66,66,134,134,215,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,66,159,66,134,134,37,275,134,66,134,134,306,134,306,134,306,134,134,275,134,134,134,353,134,134,134,134,353,134,]),'Block':([153,339,351,365,393,],[202,358,362,373,394,]),'ExprCaseClauseList':([372,],[376,]),'SwitchStmt':([241,311,],[277,277,]),'VarSpec':([23,78,],[41,107,]),'Result':([103,],[151,]),'Assignment':([241,311,315,374,],[263,263,263,263,]),'ExpressionListTypeOpt':([170,],[209,]),'QualifiedIdent':([36,43,48,57,84,93,96,97,103,105,137,141,154,199,205,214,254,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'Literal':([92,108,116,122,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'ImportDecl':([11,],[14,]),'OperandName':([92,108,116,122,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'AssignOp':([283,],[322,]),'LabelOpt':([278,285,],[319,337,]),'FieldDeclRep':([200,],[239,]),'start':([0,],[4,]),'Declaration':([12,241,311,],[19,281,281,]),'Condition':([315,361,],[349,367,]),'StructType':([70,],[98,]),'ConstSpec':([16,54,],[33,88,]),'F':([92,108,116,122,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'epsilon':([6,11,15,27,35,42,46,50,80,103,135,170,172,200,203,241,247,267,278,284,285,311,315,354,361,372,374,377,388,],[10,13,29,49,55,79,82,29,109,150,191,208,212,240,242,282,212,309,317,191,317,282,350,191,368,375,282,384,242,]),'ConditionBlockOpt':([315,],[351,]),'ExpressionList':([92,108,170,241,267,311,315,330,374,379,],[130,162,210,283,310,283,283,357,283,387,]),'SimpleStmt':([241,311,315,374,],[287,287,348,378,]),'ImportSpecRep':([27,],[50,]),'Expression':([92,108,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[135,135,175,135,213,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,250,251,284,297,303,305,135,320,338,340,284,345,346,347,354,355,135,360,370,284,135,]),'ImportPath':([31,],[51,]),'ExprSwitchCase':([376,],[380,]),'ExpressionOpt':([172,247,],[211,296,]),'ST':([36,43,48,57,84,93,97,103,105,137,141,154,199,205,214,254,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'TypeExprListOpt':([36,],[71,]),'ReturnStmt':([241,311,],[276,276,]),'ConstDecl':([12,241,311,],[20,20,20,]),'Slice':([128,],[169,]),'ArrayType':([36,43,48,57,84,93,97,103,105,137,141,154,199,205,214,254,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'ForStmt':([241,311,],[288,288,]),'Function':([77,],[102,]),'ImportSpec':([15,50,],[28,86,]),'TypeLit':([36,43,48,57,84,93,97,103,105,137,141,154,199,205,214,254,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'TypeSpecRep':([46,],[81,]),'CreateScope':([40,241,274,311,320,340,385,],[77,290,315,290,356,359,390,]),'SliceType':([36,43,48,57,84,93,97,103,105,137,141,154,199,205,214,254,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'TypeDecl':([12,241,311,],[21,21,21,]),'BaseType':([57,],[91,]),'I':([65,92,108,116,122,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,207,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[94,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,245,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'IFSYM':([290,359,390,],[339,365,393,]),'UnaryExpr':([92,108,116,122,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[127,127,164,165,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'ArrayLength':([65,],[95,]),'MapType':([36,43,48,57,84,93,97,103,105,137,141,154,199,205,214,254,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ForClause':([315,],[352,]),'ShortVarDecl':([241,311,315,374,],[291,291,291,291,]),'TypeDef':([25,81,],[44,44,]),'FieldDecl':([239,],[252,]),'BreakStmt':([241,311,],[293,293,]),'BasicLit':([92,108,116,122,132,170,172,176,177,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,219,237,241,247,256,262,267,280,286,292,311,312,313,314,315,316,330,343,361,374,379,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'ExpressionListOpt':([80,],[110,]),'ElseOpt':([377,],[386,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',225),
  ('Type -> TypeName','Type',1,'p_type','parser.py',234),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',235),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','parser.py',239),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',240),
  ('TypeToken -> INT','TypeToken',1,'p_type_token','parser.py',253),
  ('TypeToken -> FLOAT','TypeToken',1,'p_type_token','parser.py',254),
  ('TypeToken -> BOOL','TypeToken',1,'p_type_token','parser.py',255),
  ('TypeToken -> STRING','TypeToken',1,'p_type_token','parser.py',256),
  ('TypeToken -> TYPE Identifier','TypeToken',2,'p_type_token','parser.py',257),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',293),
  ('TypeLit -> ST StructType','TypeLit',2,'p_type_lit','parser.py',294),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',295),
  ('TypeLit -> MapType','TypeLit',1,'p_type_lit','parser.py',296),
  ('TypeLit -> SliceType','TypeLit',1,'p_type_lit','parser.py',297),
  ('ST -> <empty>','ST',0,'p_S_T','parser.py',304),
  ('SliceType -> LSQUARE RSQUARE ElementType','SliceType',3,'p_slice_type','parser.py',319),
  ('MapType -> MAP LSQUARE KeyType RSQUARE ElementType','MapType',5,'p_map_type','parser.py',328),
  ('KeyType -> Type','KeyType',1,'p_key_type','parser.py',335),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE ElementType','ArrayType',4,'p_array_type','parser.py',342),
  ('ArrayLength -> I INT_LIT','ArrayLength',2,'p_array_length','parser.py',365),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',371),
  ('StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope','StructType',6,'p_struct_type','parser.py',376),
  ('FuncScope -> <empty>','FuncScope',0,'p_func_scope','parser.py',390),
  ('FieldDeclRep -> FieldDeclRep FieldDecl Semi','FieldDeclRep',3,'p_field_decl_rep','parser.py',399),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',400),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_field_decl','parser.py',413),
  ('PointerType -> MULTIPLY BaseType','PointerType',2,'p_point_type','parser.py',448),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',456),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_sign','parser.py',463),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',488),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',489),
  ('Result -> Parameters','Result',1,'p_result','parser.py',493),
  ('Result -> Type','Result',1,'p_result','parser.py',494),
  ('Parameters -> LPAREN ParametersList RPAREN','Parameters',3,'p_params','parser.py',500),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_params','parser.py',501),
  ('ParametersList -> ParameterDecl','ParametersList',1,'p_param_list','parser.py',524),
  ('ParametersList -> ParametersList COMMA ParameterDecl','ParametersList',3,'p_param_list','parser.py',525),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_param_decl','parser.py',537),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_param_decl','parser.py',538),
  ('Block -> LCURL StatementList RCURL','Block',3,'p_block','parser.py',572),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',576),
  ('StatementRep -> StatementRep Statement Semi','StatementRep',3,'p_stat_rep','parser.py',580),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',581),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',594),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',595),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',596),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',600),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',601),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',608),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',609),
  ('ConstSpecRep -> ConstSpecRep ConstSpec Semi','ConstSpecRep',3,'p_const_spec_rep','parser.py',616),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',617),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',626),
  ('TypeExprListOpt -> Type EQUALS ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',648),
  ('IdentifierList -> Identifier','IdentifierList',1,'p_identifier_list','parser.py',662),
  ('IdentifierList -> IdentifierRep','IdentifierList',1,'p_identifier_list','parser.py',663),
  ('IdentifierRep -> IdentifierRep COMMA Identifier','IdentifierRep',3,'p_identifier_rep','parser.py',678),
  ('IdentifierRep -> Identifier COMMA Identifier','IdentifierRep',3,'p_identifier_rep','parser.py',679),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',709),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',722),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',723),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',744),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',745),
  ('TypeSpecRep -> TypeSpecRep TypeSpec Semi','TypeSpecRep',3,'p_type_spec_rep','parser.py',752),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',753),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',760),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',761),
  ('AliasDecl -> Identifier EQUALS Type','AliasDecl',3,'p_alias_decl','parser.py',765),
  ('TypeDef -> Identifier Type','TypeDef',2,'p_type_def','parser.py',777),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',790),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',791),
  ('VarSpecRep -> VarSpecRep VarSpec Semi','VarSpecRep',3,'p_var_spec_rep','parser.py',798),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',799),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',809),
  ('ExpressionListOpt -> EQUALS ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',883),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',884),
  ('ExpressionListOpt -> EQUALS MALLOC LPAREN I INT_LIT RPAREN','ExpressionListOpt',6,'p_expr_list_opt','parser.py',885),
  ('ShortVarDecl -> Identifier SHORT_ASSIGNMENT Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',899),
  ('FunctionDecl -> FUNC FunctionName CreateScope Function EndScope','FunctionDecl',5,'p_func_decl','parser.py',920),
  ('FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope','FunctionDecl',5,'p_func_decl','parser.py',921),
  ('CreateScope -> <empty>','CreateScope',0,'p_create_scope','parser.py',938),
  ('EndScope -> <empty>','EndScope',0,'p_end_scope','parser.py',942),
  ('FunctionName -> Identifier','FunctionName',1,'p_func_name','parser.py',946),
  ('Function -> Signature RetTypeSet FunctionBody','Function',3,'p_func','parser.py',958),
  ('RetTypeSet -> <empty>','RetTypeSet',0,'p_ret_type_set','parser.py',977),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',991),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',998),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',999),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',1000),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',1007),
  ('BasicLit -> I INT_LIT','BasicLit',2,'p_basic_lit','parser.py',1012),
  ('BasicLit -> F FLOAT_LIT','BasicLit',2,'p_basic_lit','parser.py',1013),
  ('BasicLit -> C IMAGINARY_LIT','BasicLit',2,'p_basic_lit','parser.py',1014),
  ('BasicLit -> S STRING_LIT','BasicLit',2,'p_basic_lit','parser.py',1015),
  ('I -> <empty>','I',0,'p_I','parser.py',1039),
  ('F -> <empty>','F',0,'p_F','parser.py',1045),
  ('C -> <empty>','C',0,'p_C','parser.py',1051),
  ('S -> <empty>','S',0,'p_S','parser.py',1057),
  ('OperandName -> Identifier','OperandName',1,'p_operand_name','parser.py',1063),
  ('QualifiedIdent -> Identifier DOT TypeName','QualifiedIdent',3,'p_qualified_ident','parser.py',1111),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',1123),
  ('PrimaryExpr -> PrimaryExpr DOT Identifier','PrimaryExpr',3,'p_prim_expr','parser.py',1124),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',1125),
  ('PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE','PrimaryExpr',4,'p_prim_expr','parser.py',1126),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',1127),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser.py',1128),
  ('PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN','PrimaryExpr',4,'p_prim_expr','parser.py',1129),
  ('Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE','Slice',5,'p_slice','parser.py',1321),
  ('Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE','Slice',7,'p_slice','parser.py',1322),
  ('TypeAssertion -> DOT LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser.py',1330),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1335),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1336),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser.py',1340),
  ('Expression -> Expression COMPARE_OR Expression','Expression',3,'p_expr','parser.py',1341),
  ('Expression -> Expression COMPARE_AND Expression','Expression',3,'p_expr','parser.py',1342),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expr','parser.py',1343),
  ('Expression -> Expression NOTEQUALS Expression','Expression',3,'p_expr','parser.py',1344),
  ('Expression -> Expression LESSTHAN Expression','Expression',3,'p_expr','parser.py',1345),
  ('Expression -> Expression GREATERTHAN Expression','Expression',3,'p_expr','parser.py',1346),
  ('Expression -> Expression LESSTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',1347),
  ('Expression -> Expression GREATERTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',1348),
  ('Expression -> Expression OR Expression','Expression',3,'p_expr','parser.py',1349),
  ('Expression -> Expression XOR Expression','Expression',3,'p_expr','parser.py',1350),
  ('Expression -> Expression ANDXOR Expression','Expression',3,'p_expr','parser.py',1351),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expr','parser.py',1352),
  ('Expression -> Expression MODULO Expression','Expression',3,'p_expr','parser.py',1353),
  ('Expression -> Expression LSHIFT Expression','Expression',3,'p_expr','parser.py',1354),
  ('Expression -> Expression RSHIFT Expression','Expression',3,'p_expr','parser.py',1355),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expr','parser.py',1356),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expr','parser.py',1357),
  ('Expression -> Expression MULTIPLY Expression','Expression',3,'p_expr','parser.py',1358),
  ('Expression -> Expression AND Expression','Expression',3,'p_expr','parser.py',1359),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',1440),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',1441),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',1445),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1446),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1447),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',1490),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',1491),
  ('UnaryOp -> MULTIPLY','UnaryOp',1,'p_unary_op','parser.py',1492),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser.py',1493),
  ('Conversion -> TYPECAST Type LPAREN Expression RPAREN','Conversion',5,'p_conversion','parser.py',1507),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',1515),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',1516),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',1517),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',1518),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',1519),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',1520),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',1521),
  ('Statement -> CreateScope IFSYM Block EndScope_1','Statement',4,'p_statement','parser.py',1522),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',1523),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',1524),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',1525),
  ('Statement -> DeferStmt','Statement',1,'p_statement','parser.py',1526),
  ('Statement -> FallThroughStmt','Statement',1,'p_statement','parser.py',1527),
  ('Statement -> GoStmt','Statement',1,'p_statement','parser.py',1528),
  ('Statement -> PrintStmt','Statement',1,'p_statement','parser.py',1529),
  ('Statement -> ScanStmt','Statement',1,'p_statement','parser.py',1530),
  ('EndScope_1 -> <empty>','EndScope_1',0,'p_end_scope_new','parser.py',1537),
  ('PrintStmt -> PRINT PD Expression','PrintStmt',3,'p_print_stmt','parser.py',1545),
  ('PrintStmt -> PRINT PS Expression','PrintStmt',3,'p_print_stmt','parser.py',1546),
  ('PrintStmt -> PRINT PF Expression','PrintStmt',3,'p_print_stmt','parser.py',1547),
  ('ScanStmt -> SCAN Expression','ScanStmt',2,'p_scan_stmt','parser.py',1563),
  ('FallThroughStmt -> FALLTHROUGH','FallThroughStmt',1,'p_fallthrough_stmt','parser.py',1570),
  ('GoStmt -> GO Expression','GoStmt',2,'p_go_stmt','parser.py',1574),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_defer_stmt','parser.py',1580),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',1585),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1586),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1587),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',1588),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',1589),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',1594),
  ('Label -> Identifier','Label',1,'p_label','parser.py',1612),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',1617),
  ('IncDecStmt -> Expression INCREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1623),
  ('IncDecStmt -> Expression DECREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1624),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',1631),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1668),
  ('AssignOp -> PLUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1672),
  ('AssignOp -> MINUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1673),
  ('AssignOp -> TIMESEQUAL','AssignOp',1,'p_AssignOp','parser.py',1674),
  ('AssignOp -> DIVIDE_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1675),
  ('AssignOp -> MODEQUAL','AssignOp',1,'p_AssignOp','parser.py',1676),
  ('AssignOp -> ANDEQUAL','AssignOp',1,'p_AssignOp','parser.py',1677),
  ('AssignOp -> OREQUAL','AssignOp',1,'p_AssignOp','parser.py',1678),
  ('AssignOp -> XOREQUAL','AssignOp',1,'p_AssignOp','parser.py',1679),
  ('AssignOp -> ANDXOR_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1680),
  ('AssignOp -> LSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1681),
  ('AssignOp -> RSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1682),
  ('AssignOp -> EQUALS','AssignOp',1,'p_AssignOp','parser.py',1683),
  ('IfStmt -> IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt','IfStmt',7,'p_if_statement','parser.py',1689),
  ('IFSYM -> <empty>','IFSYM',0,'p_if_sym','parser.py',1715),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1721),
  ('ElseOpt -> ELSE CreateScope IFSYM Block EndScope_1','ElseOpt',5,'p_else_opt','parser.py',1722),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1723),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',1735),
  ('ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1','ExprSwitchStmt',8,'p_ExprSwitchStmt','parser.py',1739),
  ('StartSwitch -> <empty>','StartSwitch',0,'p_start_switch','parser.py',1770),
  ('ExprCaseClauseList -> epsilon','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',1786),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',1787),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',1803),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',1826),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',1827),
  ('ForStmt -> FOR CreateScope ConditionBlockOpt Block EndScope_1','ForStmt',5,'p_for','parser.py',1851),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1862),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1863),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1864),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1871),
  ('ForClause -> SimpleStmt Semi ConditionOpt Semi SimpleStmt','ForClause',5,'p_forclause','parser.py',1876),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',1899),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',1900),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',1907),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1956),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1957),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',1962),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',1966),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',1970),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',1971),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',1976),
  ('SourceFile -> PackageClause Semi ImportDeclRep TopLevelDeclRep','SourceFile',4,'p_source_file','parser.py',1982),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',1990),
  ('ImportDeclRep -> ImportDeclRep ImportDecl Semi','ImportDeclRep',3,'p_import_decl_rep','parser.py',1991),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl Semi','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',2000),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',2001),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',2012),
  ('PackageName -> Identifier','PackageName',1,'p_package_name','parser.py',2017),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',2028),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',2029),
  ('ImportSpecRep -> ImportSpecRep ImportSpec Semi','ImportSpecRep',3,'p_import_spec_rep','parser.py',2036),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',2037),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',2045),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2053),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2054),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2055),
  ('ImportPath -> STRING_LIT','ImportPath',1,'p_import_path','parser.py',2063),
  ('Semi -> SEMICOLON','Semi',1,'p_SemiColon','parser.py',2071),
  ('Identifier -> IDENTIFIER','Identifier',1,'p_Identifier','parser.py',2077),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',2083),
]
