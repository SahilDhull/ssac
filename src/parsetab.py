
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDENTIFIERrightEQUALSNOTleftINT_LITleftFLOAT_LITleftSTRING_LITleftCOMPARE_ORleftCOMPARE_ANDleftEQEQNOTEQUALSleftORleftXORleftANDANDXORleftLESSTHANGREATERTHANLESSTHAN_EQUALGREATERTHAN_EQUALleftPLUSMINUSleftLSHIFTRSHIFTleftMULTIPLYDIVIDEMODULOleftLPARENRPARENAND ANDEQUAL ANDXOR ANDXOR_EQUAL BOOL BOOL_LIT BREAK CASE COLON COMMA COMPARE_AND COMPARE_OR CONST CONTINUE DECREMENT DEFAULT DEFER DIVIDE DIVIDE_EQUAL DOT ELSE EQEQ EQUALS FALLTHROUGH FLOAT FLOAT_LIT FOR FUNC GO GOTO GREATERTHAN GREATERTHAN_EQUAL IDENTIFIER IF IMAGINARY_LIT IMPORT INCREMENT INT INT_LIT LCURL LESSTHAN LESSTHAN_EQUAL LPAREN LSHIFT LSHIFT_EQUAL LSQUARE MALLOC MAP MINUS MINUSEQUAL MODEQUAL MODULO MULTIPLY NOT NOTEQUALS OR OREQUAL PACKAGE PLUS PLUSEQUAL PRINT RCURL RETURN RPAREN RSHIFT RSHIFT_EQUAL RSQUARE SCAN SEMICOLON SHORT_ASSIGNMENT STRING STRING_LIT STRUCT SWITCH TIMESEQUAL TYPE TYPECAST VAR XOR XOREQUALstart : SourceFileType : TypeName\n\t\t\t\t\t\t| TypeLitTypeName : TypeToken\n\t\t\t\t\t\t\t\t| QualifiedIdentTypeToken : INT\n\t\t\t\t\t\t\t\t | FLOAT\n\t\t\t\t\t\t\t\t | BOOL\n\t\t\t\t\t\t\t\t | STRING\n\t\t\t\t\t\t\t\t | TYPE IDENTIFIERTypeLit : ArrayType\n\t\t\t\t\t\t\t | ST StructType\n\t\t\t\t\t\t\t | PointerType\n\t\t\t\t\t\t\t | MapType\n\t\t\t\t\t\t\t | SliceTypeST : SliceType : LSQUARE RSQUARE ElementTypeMapType : MAP LSQUARE KeyType RSQUARE ElementType KeyType : TypeArrayType : LSQUARE ArrayLength RSQUARE ElementType ArrayLength : I INT_LIT  ElementType : Type StructType : FuncScope STRUCT LCURL FieldDeclRep RCURL EndScopeFuncScope :  FieldDeclRep : FieldDeclRep FieldDecl Semi\n\t\t\t\t\t\t\t\t\t| epsilon  FieldDecl : IdentifierList TypePointerType : MULTIPLY BaseTypeBaseType : TypeSignature : Parameters ResultOptResultOpt : Result\n\t\t\t\t\t\t\t\t | epsilonResult : Parameters\n\t\t\t\t\t\t\t| TypeParameters : LPAREN ParametersList RPAREN\n\t\t\t\t\t\t\t\t\t| LPAREN RPARENParametersList : ParameterDecl\n\t\t\t\t\t\t\t\t\t\t\t| ParametersList COMMA ParameterDeclParameterDecl : IdentifierList Type\n\t\t\t\t\t\t\t\t\t\t | TypeBlock : LCURL StatementList RCURLStatementList : StatementRepStatementRep : StatementRep Statement Semi\n\t\t\t\t\t\t\t\t\t\t| epsilonDeclaration : ConstDecl\n\t\t\t\t\t\t\t\t | TypeDecl\n\t\t\t\t\t\t\t\t | VarDeclTopLevelDecl : Declaration\n\t\t\t\t\t\t\t\t\t| FunctionDeclConstDecl : CONST ConstSpec\n\t\t\t\t\t\t\t\t | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec Semi\n\t\t\t\t\t\t\t\t\t\t| epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : Type EQUALS ExpressionListIdentifierList : IDENTIFIER \n\t\t\t\t\t\t\t\t\t\t\t| IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n\t\t\t\t\t\t\t\t\t\t | IDENTIFIER COMMA IDENTIFIERExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n\t\t\t\t\t\t\t\t\t\t | epsilonTypeDecl : TYPE TypeSpec\n\t\t\t\t\t\t\t\t| TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec Semi\n\t\t\t\t\t\t\t\t\t | epsilonTypeSpec : AliasDecl\n\t\t\t\t\t\t\t\t| TypeDefAliasDecl : IDENTIFIER EQUALS TypeTypeDef : IDENTIFIER TypeVarDecl : VAR VarSpec\n\t\t\t\t\t\t\t | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec Semi\n\t\t\t\t\t\t\t\t\t| epsilonVarSpec : IdentifierList Type ExpressionListOptExpressionListOpt : EQUALS ExpressionList\n\t\t\t\t\t\t\t\t\t\t\t\t | epsilon\n\t\t\t\t\t\t\t\t\t\t\t\t | EQUALS MALLOC LPAREN I INT_LIT RPAREN ShortVarDecl : IDENTIFIER SHORT_ASSIGNMENT Expression FunctionDecl : FUNC FunctionName CreateScope Function EndScope\n\t\t\t\t\t\t\t\t\t| FUNC FunctionName CreateScope Signature EndScopeCreateScope : EndScope : FunctionName : IDENTIFIERFunction : Signature RetTypeSet FunctionBodyRetTypeSet : FunctionBody : BlockOperand : Literal\n\t\t\t\t\t\t\t | OperandName\n\t\t\t\t\t\t\t | LPAREN Expression RPARENLiteral : BasicLitBasicLit : I INT_LIT\n              | F FLOAT_LIT\n              | C IMAGINARY_LIT\n              | B BOOL_LIT\n              | S STRING_LITB : I : F : C : S : OperandName : IDENTIFIERQualifiedIdent : IDENTIFIER DOT TypeNamePrimaryExpr : Operand\n                 | PrimaryExpr DOT IDENTIFIER\n                 | Conversion\n                 | PrimaryExpr LSQUARE Expression RSQUARE\n                 | PrimaryExpr Slice\n                 | PrimaryExpr TypeAssertion\n                 | PrimaryExpr LPAREN ExpressionListTypeOpt RPARENSlice : LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE\n\t\t\t\t\t\t | LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARETypeAssertion : DOT LPAREN Type RPARENExpressionListTypeOpt : ExpressionList\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t | epsilonExpression : UnaryExpr\n\t\t\t\t\t\t\t\t\t| Expression COMPARE_OR Expression\n\t\t\t\t\t\t\t\t\t| Expression COMPARE_AND Expression\n\t\t\t\t\t\t\t\t\t| Expression EQEQ Expression\n\t\t\t\t\t\t\t\t\t| Expression NOTEQUALS Expression\n\t\t\t\t\t\t\t\t\t| Expression LESSTHAN Expression\n\t\t\t\t\t\t\t\t\t| Expression GREATERTHAN Expression\n\t\t\t\t\t\t\t\t\t| Expression LESSTHAN_EQUAL Expression\n\t\t\t\t\t\t\t\t\t| Expression GREATERTHAN_EQUAL Expression\n\t\t\t\t\t\t\t\t\t| Expression OR Expression\n\t\t\t\t\t\t\t\t\t| Expression XOR Expression\n\t\t\t\t\t\t\t\t\t| Expression ANDXOR Expression\n\t\t\t\t\t\t\t\t\t| Expression DIVIDE Expression\n\t\t\t\t\t\t\t\t\t| Expression MODULO Expression\n\t\t\t\t\t\t\t\t\t| Expression LSHIFT Expression\n\t\t\t\t\t\t\t\t\t| Expression RSHIFT Expression\n\t\t\t\t\t\t\t\t\t| Expression PLUS Expression\n\t\t\t\t\t\t\t\t\t| Expression MINUS Expression\n\t\t\t\t\t\t\t\t\t| Expression MULTIPLY Expression\n\t\t\t\t\t\t\t\t\t| Expression AND ExpressionExpressionOpt : Expression\n\t\t\t\t\t\t\t\t\t\t | epsilonUnaryExpr : PrimaryExpr\n\t\t\t\t\t\t\t\t | UnaryOp UnaryExpr\n\t\t\t\t\t\t\t\t | NOT UnaryExprUnaryOp : PLUS\n\t\t\t\t\t\t\t | MINUS\n\t\t\t\t\t\t\t | MULTIPLY\n\t\t\t\t\t\t\t | AND Conversion : TYPECAST Type LPAREN Expression RPARENStatement : Declaration\n\t\t\t\t\t\t\t | LabeledStmt\n\t\t\t\t\t\t\t | SimpleStmt\n\t\t\t\t\t\t\t | ReturnStmt\n\t\t\t\t\t\t\t | BreakStmt\n\t\t\t\t\t\t\t | ContinueStmt\n\t\t\t\t\t\t\t | GotoStmt\n\t\t\t\t\t\t\t | CreateScope IFSYM Block EndScope_1\n\t\t\t\t\t\t\t | IfStmt\n\t\t\t\t\t\t\t | SwitchStmt\n\t\t\t\t\t\t\t | ForStmt\n\t\t\t\t\t\t\t | DeferStmt\n\t\t\t\t\t\t\t | FallThroughStmt\n\t\t\t\t\t\t\t | GoStmt\n\t\t\t\t\t\t\t | PrintStmt\n\t\t\t\t\t\t\t | ScanStmtEndScope_1 : PrintStmt : PRINT ExpressionListScanStmt : SCAN ExpressionFallThroughStmt : FALLTHROUGHGoStmt : GO ExpressionDeferStmt : DEFER Expression SimpleStmt : epsilon\n\t\t\t\t\t\t\t\t | ExpressionStmt\n\t\t\t\t\t\t\t\t | IncDecStmt\n\t\t\t\t\t\t\t\t | Assignment\n\t\t\t\t\t\t\t\t | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : Expression INCREMENT\n\t\t\t\t\t\t\t\t | Expression DECREMENT  Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOp AssignOp : PLUSEQUAL\n\t\t\t\t\t\t\t | MINUSEQUAL\n\t\t\t\t\t\t\t | TIMESEQUAL\n\t\t\t\t\t\t\t | DIVIDE_EQUAL\n\t\t\t\t\t\t\t | MODEQUAL\n\t\t\t\t\t\t\t | ANDEQUAL\n\t\t\t\t\t\t\t | OREQUAL\n\t\t\t\t\t\t\t | XOREQUAL\n\t\t\t\t\t\t\t | ANDXOR_EQUAL\n\t\t\t\t\t\t\t | LSHIFT_EQUAL\n\t\t\t\t\t\t\t | RSHIFT_EQUAL\n\t\t\t\t\t\t\t | EQUALS  IfStmt : IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt IFSYM :  ElseOpt : ELSE IfStmt\n\t\t\t\t\t\t\t| ELSE CreateScope IFSYM Block EndScope_1\n\t\t\t\t\t\t\t| epsilon  SwitchStmt : ExprSwitchStmtExprSwitchStmt : SWITCH Expression CCreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1StartSwitch : ExprCaseClauseList : epsilon\n\t\t\t\t\t\t\t\t | ExprCaseClauseList ExprCaseClause\n\t\tExprCaseClause : ExprSwitchCase COLON StatementList ExprSwitchCase : CASE ExpressionList\n\t\t\t\t\t\t\t\t | DEFAULT \n\t\tForStmt : FOR CCreateScope ConditionBlockOpt Block EndScope_1CCreateScope : ConditionBlockOpt : epsilon\n\t\t\t\t\t\t | Condition\n\t\t\t\t\t\t | ForClauseCondition : Expression ForClause : SimpleStmt Semi ConditionOpt Semi SimpleStmtConditionOpt : epsilon\n\t\t\t\t\t| Condition ReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n\t\t\t\t\t\t | epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n\t\t\t\t| epsilon GotoStmt : GOTO Label SourceFile : PackageClause Semi ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n\t\t\t\t\t | ImportDeclRep ImportDecl SemiTopLevelDeclRep : TopLevelDeclRep TopLevelDecl Semi\n\t\t\t\t\t\t\t\t\t\t | epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n\t\t\t\t\t| IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec Semi\n\t\t\t\t\t\t| epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n\t\t\t\t\t\t\t\t\t\t\t\t| PackageName\n\t\t\t\t\t\t\t\t\t\t\t\t| epsilon ImportPath : STRING_LIT Semi : SEMICOLONepsilon : '
    
_lr_action_items = {'LSQUARE':([33,35,36,42,47,56,66,83,86,93,96,100,102,104,116,119,120,123,129,132,134,137,142,154,156,158,166,167,168,169,170,172,175,200,206,207,215,216,217,247,249,255,283,299,300,341,345,362,],[-57,65,-56,65,65,65,96,65,-58,65,65,-59,65,65,-106,-89,-91,-102,173,-104,-88,65,65,65,-36,-56,-94,-95,-93,-92,-108,-109,-96,65,65,-35,65,-105,-90,-110,-107,65,-102,-113,-145,-111,-102,-112,]),'ANDXOR':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,177,-139,-140,-94,-95,-93,-92,-108,-109,-96,177,177,-105,-90,-127,177,-131,177,177,-121,-130,-134,-129,-133,-124,-132,177,-128,-122,-135,-123,177,177,-110,-107,177,177,-102,177,177,-113,-145,177,177,177,177,177,-111,-102,177,177,177,-112,177,]),'DIVIDE':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,191,-139,-140,-94,-95,-93,-92,-108,-109,-96,191,191,-105,-90,191,191,191,191,191,191,191,-134,-129,191,191,191,191,-128,191,191,191,191,191,-110,-107,191,191,-102,191,191,-113,-145,191,191,191,191,191,-111,-102,191,191,191,-112,191,]),'CONST':([5,6,9,10,11,12,25,37,204,242,243,305,312,384,],[-238,-239,-223,-239,15,-226,-224,-225,-239,15,-44,-43,15,-239,]),'LPAREN':([5,14,15,22,24,38,39,55,57,58,60,62,63,64,67,68,71,72,74,76,89,90,91,97,99,102,107,115,116,117,118,119,120,121,122,123,129,132,133,134,136,138,139,140,156,161,166,167,168,169,170,171,172,173,174,175,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,204,207,216,217,220,238,239,242,243,247,248,249,254,257,263,269,272,276,281,283,288,293,299,300,302,305,312,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,341,342,345,357,362,370,375,384,],[-238,26,34,41,45,-84,-82,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,104,-29,-28,133,-12,-10,104,133,133,-106,-143,-142,-89,-91,133,-141,-102,171,-104,133,-88,-144,-103,-22,-17,-36,208,-94,-95,-93,-92,-108,133,-109,133,215,-96,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,238,-20,-239,-35,-105,-90,133,133,-18,133,-44,-110,133,-107,-83,133,133,133,133,-206,133,-102,133,133,-113,-145,-23,-43,133,133,133,-189,-179,-190,-181,-184,-187,-191,-180,-188,133,-185,-186,-182,-183,-111,133,-102,133,-112,133,133,-239,]),'SCAN':([5,204,242,243,305,312,384,],[-238,-239,288,-44,-43,288,-239,]),'DEFAULT':([5,242,243,305,359,368,371,372,379,384,388,],[-238,-42,-44,-43,-199,-239,-200,377,-201,-239,-202,]),'MODEQUAL':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,179,192,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,283,285,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,324,-239,-113,-145,-111,-102,-239,-112,]),'XOREQUAL':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,179,192,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,283,285,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,325,-239,-113,-145,-111,-102,-239,-112,]),'PRINT':([5,204,242,243,305,312,384,],[-238,-239,272,-44,-43,272,-239,]),'LESSTHAN':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,183,-139,-140,-94,-95,-93,-92,-108,-109,-96,183,183,-105,-90,183,183,-131,183,183,-121,-130,-134,-129,-133,-124,-132,183,-128,-122,183,-123,183,183,-110,-107,183,183,-102,183,183,-113,-145,183,183,183,183,183,-111,-102,183,183,183,-112,183,]),'COLON':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,173,175,179,192,212,213,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,270,283,298,299,300,341,362,376,377,383,],[-106,-89,-91,-102,-116,-138,-104,-88,-239,-139,-140,-94,-95,-93,-92,-108,-109,-239,-96,-60,-62,248,-137,-136,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,312,-174,342,-113,-145,-111,-112,384,-204,-203,]),'NOTEQUALS':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,178,-139,-140,-94,-95,-93,-92,-108,-109,-96,178,178,-105,-90,-127,-120,-131,178,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,178,-125,-110,-107,178,178,-102,178,178,-113,-145,178,178,178,178,178,-111,-102,178,178,178,-112,178,]),'LSHIFT':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,184,-139,-140,-94,-95,-93,-92,-108,-109,-96,184,184,-105,-90,184,184,-131,184,184,184,-130,-134,-129,184,184,184,184,-128,184,184,184,184,184,-110,-107,184,184,-102,184,184,-113,-145,184,184,184,184,184,-111,-102,184,184,184,-112,184,]),'MULTIPLY':([5,33,35,36,42,47,56,83,86,91,93,96,100,102,104,107,115,116,117,118,119,120,121,122,123,128,129,132,133,134,135,136,137,142,154,156,158,164,165,166,167,168,169,170,171,172,173,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,200,204,206,207,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,242,243,247,248,249,251,252,255,257,263,269,272,276,281,283,286,288,293,298,299,300,304,305,306,312,314,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,337,339,341,342,345,350,352,356,357,362,366,370,375,384,],[-238,-57,56,-56,56,56,56,56,-58,117,56,56,-59,56,56,117,117,-106,-143,-142,-89,-91,117,-141,-102,-116,-138,-104,117,-88,185,-144,56,56,56,-36,-56,-139,-140,-94,-95,-93,-92,-108,117,-109,117,-96,185,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,56,-239,56,-35,185,56,-105,-90,185,185,117,185,185,185,185,185,-134,-129,185,185,185,185,-128,185,185,185,185,185,117,117,-44,-110,117,-107,185,185,56,117,117,117,117,-206,117,-102,185,117,117,185,-113,-145,185,-43,185,117,117,185,117,-189,-179,-190,-181,-184,-187,-191,-180,-188,117,-185,-186,-182,-183,185,185,-111,117,-102,185,185,185,117,-112,185,117,117,-239,]),'RETURN':([5,204,242,243,305,312,384,],[-238,-239,269,-44,-43,269,-239,]),'MINUS':([5,91,107,115,116,117,118,119,120,121,122,123,128,129,132,133,134,135,136,164,165,166,167,168,169,170,171,172,173,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,204,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,242,243,247,248,249,251,252,257,263,269,272,276,281,283,286,288,293,298,299,300,304,305,306,312,314,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,337,339,341,342,345,350,352,356,357,362,366,370,375,384,],[-238,118,118,118,-106,-143,-142,-89,-91,118,-141,-102,-116,-138,-104,118,-88,187,-144,-139,-140,-94,-95,-93,-92,-108,118,-109,118,-96,187,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-239,187,-105,-90,187,187,118,-131,187,187,187,-130,-134,-129,-133,187,-132,187,-128,187,187,187,187,187,118,118,-44,-110,118,-107,187,187,118,118,118,118,-206,118,-102,187,118,118,187,-113,-145,187,-43,187,118,118,187,118,-189,-179,-190,-181,-184,-187,-191,-180,-188,118,-185,-186,-182,-183,187,187,-111,118,-102,187,187,187,118,-112,187,118,118,-239,]),'DOT':([5,14,26,48,49,61,113,116,119,120,123,129,132,134,158,166,167,168,169,170,172,175,216,217,247,249,283,299,300,341,345,362,],[-238,31,-239,-232,31,92,-231,-106,-89,-91,-102,174,-104,-88,92,-94,-95,-93,-92,-108,-109,-96,-105,-90,-110,-107,-102,-113,-145,-111,-102,-112,]),'LCURL':([5,55,57,58,60,62,63,64,67,68,71,72,74,89,90,97,99,102,103,116,119,120,123,128,129,132,134,135,138,139,140,145,147,148,149,150,151,153,156,164,165,166,167,168,169,170,172,175,179,192,199,204,207,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,242,243,247,249,251,254,258,264,265,276,284,286,291,292,299,300,302,305,312,314,318,334,335,338,339,341,345,346,347,348,349,350,351,352,353,355,361,362,370,374,381,384,386,389,],[-238,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,-29,-28,-12,-10,-239,-86,-106,-89,-91,-102,-116,-138,-104,-88,-239,-103,-22,-17,201,-33,-34,-30,-32,-31,204,-36,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-20,-239,-35,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-18,-82,-44,-110,-107,-61,-83,-169,-171,-170,-206,-168,-175,-193,-172,-113,-145,-23,-43,-82,-239,-206,-176,-177,204,-82,-111,-102,-208,-207,204,-209,-210,359,-79,-178,-193,204,-112,-239,-211,-82,-239,-193,204,]),'CASE':([5,242,243,305,359,368,371,372,379,384,388,],[-238,-42,-44,-43,-199,-239,-200,375,-201,-239,-202,]),'DEFER':([5,204,242,243,305,312,384,],[-238,-239,263,-44,-43,263,-239,]),'RPAREN':([5,26,34,41,45,48,49,53,54,55,57,58,60,62,63,64,67,68,71,72,74,77,78,80,81,89,90,97,99,104,113,114,116,119,120,123,128,129,132,134,135,138,139,140,155,157,159,160,163,164,165,166,167,168,169,170,171,172,175,176,179,192,199,205,209,210,211,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,245,247,249,250,251,252,254,296,299,300,302,341,362,],[-238,-239,-239,-239,-239,-232,84,88,-53,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,105,-74,110,-66,-29,-28,-12,-10,156,-231,-52,-106,-89,-91,-102,-116,-138,-104,-88,-239,-103,-22,-17,-40,207,-37,-73,-65,-139,-140,-94,-95,-93,-92,-108,-239,-109,-96,217,-60,-62,-20,-39,-115,247,-114,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-18,-38,-110,-107,299,-61,300,-83,340,-113,-145,-23,-111,-112,]),'SEMICOLON':([1,5,7,8,13,16,17,18,19,20,23,27,32,40,43,44,46,50,51,55,57,58,60,62,63,64,67,68,70,71,72,74,79,82,84,85,87,88,89,90,97,99,101,102,103,105,106,108,109,110,111,112,116,119,120,123,128,129,131,132,134,135,138,139,140,146,147,148,149,150,151,152,156,162,164,165,166,167,168,169,170,172,175,179,192,199,202,203,204,207,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,242,243,247,249,251,253,254,256,258,259,260,261,262,264,265,267,268,269,271,273,274,275,276,277,278,279,280,282,283,284,286,287,289,290,292,294,295,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,334,335,336,337,340,341,343,344,345,347,350,352,353,354,357,358,360,362,363,364,365,366,367,369,373,378,380,382,384,385,387,390,391,],[5,-238,-227,-228,5,-49,5,-48,-45,-46,-47,-229,-50,-71,-68,-67,-63,-233,-237,-11,-3,-4,-2,-15,-9,-14,-6,-7,-54,-8,-13,-5,-239,-70,-230,5,5,-51,-29,-28,-12,-10,-83,-239,-83,-72,5,-77,-75,-64,5,-69,-106,-89,-91,-102,-116,-138,-55,-104,-88,-239,-103,-22,-17,-80,-33,-34,-30,-32,-31,-81,-36,-76,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-20,-85,-87,-239,-35,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-18,-239,-44,-110,-107,-61,5,-83,-151,-169,-161,5,-154,-158,-171,-170,-147,-160,-239,-197,-159,-157,-152,-206,-149,-155,-239,-165,-146,-102,-168,-175,-239,-148,-156,-172,-150,-41,-113,-145,-23,-27,-166,-43,-167,-174,-221,-214,-216,-215,-239,-163,-239,-220,-218,-219,-176,-177,-217,-164,-78,-111,-173,5,-102,-168,-175,-79,-178,-162,-239,-162,-153,-112,-213,-212,5,-210,-205,-162,-239,-162,-196,-192,-239,-198,-194,-162,-195,]),'FALLTHROUGH':([5,204,242,243,305,312,384,],[-238,-239,280,-44,-43,280,-239,]),'STRUCT':([33,35,36,42,47,56,69,83,86,93,96,98,100,102,104,137,142,154,156,158,200,206,207,215,255,],[-57,-16,-56,-16,-16,-16,-24,-16,-58,-16,-16,145,-59,-16,-16,-16,-16,-16,-36,-56,-16,-16,-35,-16,-16,]),'GREATERTHAN_EQUAL':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,188,-139,-140,-94,-95,-93,-92,-108,-109,-96,188,188,-105,-90,188,188,-131,188,188,-121,-130,-134,-129,-133,-124,-132,188,-128,-122,188,-123,188,188,-110,-107,188,188,-102,188,188,-113,-145,188,188,188,188,188,-111,-102,188,188,188,-112,188,]),'RCURL':([5,201,204,240,241,242,243,244,301,305,359,368,371,372,379,384,388,],[-238,-239,-239,254,-26,-42,-44,295,-25,-43,-199,-239,-200,378,-201,-239,-202,]),'RSHIFT_EQUAL':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,179,192,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,283,285,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,322,-239,-113,-145,-111,-102,-239,-112,]),'EQEQ':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,182,-139,-140,-94,-95,-93,-92,-108,-109,-96,182,182,-105,-90,-127,-120,-131,182,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,182,-125,-110,-107,182,182,-102,182,182,-113,-145,182,182,182,182,182,-111,-102,182,182,182,-112,182,]),'SWITCH':([5,204,242,243,305,312,384,],[-238,-239,281,-44,-43,281,-239,]),'ANDXOR_EQUAL':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,179,192,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,283,285,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,328,-239,-113,-145,-111,-102,-239,-112,]),'PLUS':([5,91,107,115,116,117,118,119,120,121,122,123,128,129,132,133,134,135,136,164,165,166,167,168,169,170,171,172,173,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,204,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,242,243,247,248,249,251,252,257,263,269,272,276,281,283,286,288,293,298,299,300,304,305,306,312,314,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,337,339,341,342,345,350,352,356,357,362,366,370,375,384,],[-238,122,122,122,-106,-143,-142,-89,-91,122,-141,-102,-116,-138,-104,122,-88,189,-144,-139,-140,-94,-95,-93,-92,-108,122,-109,122,-96,189,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-239,189,-105,-90,189,189,122,-131,189,189,189,-130,-134,-129,-133,189,-132,189,-128,189,189,189,189,189,122,122,-44,-110,122,-107,189,189,122,122,122,122,-206,122,-102,189,122,122,189,-113,-145,189,-43,189,122,122,189,122,-189,-179,-190,-181,-184,-187,-191,-180,-188,122,-185,-186,-182,-183,189,189,-111,122,-102,189,189,189,122,-112,189,122,122,-239,]),'DIVIDE_EQUAL':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,179,192,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,283,285,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,333,-239,-113,-145,-111,-102,-239,-112,]),'INCREMENT':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,283,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-102,334,-113,-145,-111,-102,334,-112,]),'IMPORT':([5,6,9,10,25,],[-238,-239,-223,14,-224,]),'STRING':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,137,142,154,156,158,200,206,207,215,255,],[-57,63,-56,63,63,63,63,-58,63,63,63,-59,63,63,63,63,63,-36,-56,63,63,-35,63,63,]),'IDENTIFIER':([2,5,14,15,21,22,24,26,33,34,35,36,41,42,45,47,48,49,52,53,54,56,73,75,77,78,80,81,83,86,91,92,93,96,100,102,104,107,113,114,115,117,118,121,122,133,136,137,142,154,156,158,160,163,171,173,174,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,200,201,204,206,207,215,220,238,240,241,242,243,248,255,257,263,266,269,272,276,279,281,287,288,293,301,305,312,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,357,370,375,384,],[8,-238,8,36,38,36,47,-239,-57,-239,61,-56,-239,61,-239,61,-232,8,86,36,-53,61,99,100,36,-74,47,-66,61,-58,123,61,61,61,-59,61,158,123,-231,-52,123,-143,-142,123,-141,123,-144,61,61,61,-36,-56,-73,-65,123,123,216,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,61,-239,-239,158,-35,61,123,123,36,-26,283,-44,123,61,123,123,307,123,123,-206,307,123,307,123,123,-25,-43,283,345,123,-189,-179,-190,-181,-184,-187,-191,-180,-188,123,-185,-186,-182,-183,123,123,345,123,-239,]),'SHORT_ASSIGNMENT':([283,345,],[319,319,]),'$end':([3,4,5,6,9,10,11,12,25,37,],[-1,0,-238,-239,-223,-239,-222,-226,-224,-225,]),'AND':([5,91,107,115,116,117,118,119,120,121,122,123,128,129,132,133,134,135,136,164,165,166,167,168,169,170,171,172,173,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,204,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,242,243,247,248,249,251,252,257,263,269,272,276,281,283,286,288,293,298,299,300,304,305,306,312,314,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,337,339,341,342,345,350,352,356,357,362,366,370,375,384,],[-238,136,136,136,-106,-143,-142,-89,-91,136,-141,-102,-116,-138,-104,136,-88,194,-144,-139,-140,-94,-95,-93,-92,-108,136,-109,136,-96,194,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,-239,194,-105,-90,-127,194,136,-131,194,194,-121,-130,-134,-129,-133,-124,-132,194,-128,-122,-135,-123,194,194,136,136,-44,-110,136,-107,194,194,136,136,136,136,-206,136,-102,194,136,136,194,-113,-145,194,-43,194,136,136,194,136,-189,-179,-190,-181,-184,-187,-191,-180,-188,136,-185,-186,-182,-183,194,194,-111,136,-102,194,194,194,136,-112,194,136,136,-239,]),'MALLOC':([107,],[161,]),'MODULO':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,186,-139,-140,-94,-95,-93,-92,-108,-109,-96,186,186,-105,-90,186,186,186,186,186,186,186,-134,-129,186,186,186,186,-128,186,186,186,186,186,-110,-107,186,186,-102,186,186,-113,-145,186,186,186,186,186,-111,-102,186,186,186,-112,186,]),'GOTO':([5,204,242,243,305,312,384,],[-238,-239,266,-44,-43,266,-239,]),'FOR':([5,204,242,243,305,312,384,],[-238,-239,276,-44,-43,276,-239,]),'PACKAGE':([0,],[2,]),'COMPARE_AND':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,196,-139,-140,-94,-95,-93,-92,-108,-109,-96,196,196,-105,-90,-127,-120,-131,196,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,196,196,-102,196,196,-113,-145,196,196,196,196,196,-111,-102,196,196,196,-112,196,]),'LSHIFT_EQUAL':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,179,192,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,283,285,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,320,-239,-113,-145,-111,-102,-239,-112,]),'RSQUARE':([55,57,58,60,62,63,64,65,67,68,71,72,74,89,90,95,97,99,116,119,120,123,128,129,132,134,138,139,140,141,143,144,164,165,166,167,168,169,170,172,175,199,213,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,247,248,249,254,297,298,299,300,302,341,356,362,],[-11,-3,-4,-2,-15,-9,-14,93,-6,-7,-8,-13,-5,-29,-28,142,-12,-10,-106,-89,-91,-102,-116,-138,-104,-88,-103,-22,-17,-21,-19,200,-139,-140,-94,-95,-93,-92,-108,-109,-96,-20,-137,249,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-18,-110,-239,-107,-83,341,-136,-113,-145,-23,-111,362,-112,]),'XOR':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,190,-139,-140,-94,-95,-93,-92,-108,-109,-96,190,190,-105,-90,-127,190,-131,190,190,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,190,190,-110,-107,190,190,-102,190,190,-113,-145,190,190,190,190,190,-111,-102,190,190,190,-112,190,]),'EQUALS':([47,55,57,58,59,60,62,63,64,67,68,71,72,74,79,89,90,97,99,116,119,120,123,128,129,132,134,138,139,140,164,165,166,167,168,169,170,172,175,179,192,199,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,247,249,251,254,283,285,286,299,300,302,341,345,350,362,],[83,-11,-3,-4,91,-2,-15,-9,-14,-6,-7,-8,-13,-5,107,-29,-28,-12,-10,-106,-89,-91,-102,-116,-138,-104,-88,-103,-22,-17,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-20,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-18,-110,-107,-61,-83,-102,326,-239,-113,-145,-23,-111,-102,-239,-112,]),'ELSE':([295,369,373,],[-41,-162,381,]),'PLUSEQUAL':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,179,192,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,283,285,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,327,-239,-113,-145,-111,-102,-239,-112,]),'GREATERTHAN':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,193,-139,-140,-94,-95,-93,-92,-108,-109,-96,193,193,-105,-90,193,193,-131,193,193,-121,-130,-134,-129,-133,-124,-132,193,-128,-122,193,-123,193,193,-110,-107,193,193,-102,193,193,-113,-145,193,193,193,193,193,-111,-102,193,193,193,-112,193,]),'FUNC':([5,6,9,10,11,12,25,37,],[-238,-239,-223,-239,21,-226,-224,-225,]),'GO':([5,204,242,243,305,312,384,],[-238,-239,257,-44,-43,257,-239,]),'VAR':([5,6,9,10,11,12,25,37,204,242,243,305,312,384,],[-238,-239,-223,-239,22,-226,-224,-225,-239,22,-44,-43,22,-239,]),'OREQUAL':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,179,192,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,283,285,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,331,-239,-113,-145,-111,-102,-239,-112,]),'IF':([5,204,242,243,305,312,381,384,],[-238,-239,293,-44,-43,293,293,-239,]),'IMAGINARY_LIT':([5,91,107,115,117,118,121,122,124,133,136,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,204,220,238,242,243,248,257,263,269,272,276,281,288,293,305,312,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,357,370,375,384,],[-238,-100,-100,-100,-143,-142,-100,-141,166,-100,-144,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-239,-100,-100,-100,-44,-100,-100,-100,-100,-100,-206,-100,-100,-100,-43,-100,-100,-100,-189,-179,-190,-181,-184,-187,-191,-180,-188,-100,-185,-186,-182,-183,-100,-100,-100,-100,-239,]),'MAP':([33,35,36,42,47,56,83,86,93,96,100,102,104,137,142,154,156,158,200,206,207,215,255,],[-57,66,-56,66,66,66,66,-58,66,66,-59,66,66,66,66,66,-36,-56,66,66,-35,66,66,]),'BOOL_LIT':([5,91,107,115,117,118,121,122,125,133,136,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,204,220,238,242,243,248,257,263,269,272,276,281,288,293,305,312,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,357,370,375,384,],[-238,-97,-97,-97,-143,-142,-97,-141,167,-97,-144,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-239,-97,-97,-97,-44,-97,-97,-97,-97,-97,-206,-97,-97,-97,-43,-97,-97,-97,-189,-179,-190,-181,-184,-187,-191,-180,-188,-97,-185,-186,-182,-183,-97,-97,-97,-97,-239,]),'TYPECAST':([5,91,107,115,117,118,121,122,133,136,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,204,220,238,242,243,248,257,263,269,272,276,281,288,293,305,312,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,357,370,375,384,],[-238,137,137,137,-143,-142,137,-141,137,-144,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-239,137,137,137,-44,137,137,137,137,137,-206,137,137,137,-43,137,137,137,-189,-179,-190,-181,-184,-187,-191,-180,-188,137,-185,-186,-182,-183,137,137,137,137,-239,]),'RSHIFT':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,180,-139,-140,-94,-95,-93,-92,-108,-109,-96,180,180,-105,-90,180,180,-131,180,180,180,-130,-134,-129,180,180,180,180,-128,180,180,180,180,180,-110,-107,180,180,-102,180,180,-113,-145,180,180,180,180,180,-111,-102,180,180,180,-112,180,]),'LESSTHAN_EQUAL':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,195,-139,-140,-94,-95,-93,-92,-108,-109,-96,195,195,-105,-90,195,195,-131,195,195,-121,-130,-134,-129,-133,-124,-132,195,-128,-122,195,-123,195,195,-110,-107,195,195,-102,195,195,-113,-145,195,195,195,195,195,-111,-102,195,195,195,-112,195,]),'INT':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,137,142,154,156,158,200,206,207,215,255,],[-57,67,-56,67,67,67,67,-58,67,67,67,-59,67,67,67,67,67,-36,-56,67,67,-35,67,67,]),'TIMESEQUAL':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,179,192,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,283,285,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,332,-239,-113,-145,-111,-102,-239,-112,]),'MINUSEQUAL':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,179,192,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,283,285,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,323,-239,-113,-145,-111,-102,-239,-112,]),'FLOAT':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,137,142,154,156,158,200,206,207,215,255,],[-57,68,-56,68,68,68,68,-58,68,68,68,-59,68,68,68,68,68,-36,-56,68,68,-35,68,68,]),'FLOAT_LIT':([5,91,107,115,117,118,121,122,126,133,136,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,204,220,238,242,243,248,257,263,269,272,276,281,288,293,305,312,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,357,370,375,384,],[-238,-99,-99,-99,-143,-142,-99,-141,168,-99,-144,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-239,-99,-99,-99,-44,-99,-99,-99,-99,-99,-206,-99,-99,-99,-43,-99,-99,-99,-189,-179,-190,-181,-184,-187,-191,-180,-188,-99,-185,-186,-182,-183,-99,-99,-99,-99,-239,]),'BREAK':([5,204,242,243,305,312,384,],[-238,-239,287,-44,-43,287,-239,]),'COMPARE_OR':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,181,-139,-140,-94,-95,-93,-92,-108,-109,-96,181,181,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,181,181,-102,181,181,-113,-145,181,181,181,181,181,-111,-102,181,181,181,-112,181,]),'INT_LIT':([5,65,91,94,107,115,117,118,121,122,127,133,136,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,204,208,220,238,242,243,246,248,257,263,269,272,276,281,288,293,305,312,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,357,370,375,384,],[-238,-98,-98,141,-98,-98,-143,-142,-98,-141,169,-98,-144,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-239,-98,-98,-98,-98,-44,296,-98,-98,-98,-98,-98,-206,-98,-98,-98,-43,-98,-98,-98,-189,-179,-190,-181,-184,-187,-191,-180,-188,-98,-185,-186,-182,-183,-98,-98,-98,-98,-239,]),'CONTINUE':([5,204,242,243,305,312,384,],[-238,-239,279,-44,-43,279,-239,]),'BOOL':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,137,142,154,156,158,200,206,207,215,255,],[-57,71,-56,71,71,71,71,-58,71,71,71,-59,71,71,71,71,71,-36,-56,71,71,-35,71,71,]),'STRING_LIT':([5,8,14,26,28,29,30,31,48,49,91,107,113,115,117,118,121,122,130,133,136,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,204,220,238,242,243,248,257,263,269,272,276,281,288,293,305,312,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,357,370,375,384,],[-238,-228,-239,-239,-236,-235,51,-234,-232,-239,-101,-101,-231,-101,-143,-142,-101,-141,175,-101,-144,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-239,-101,-101,-101,-44,-101,-101,-101,-101,-101,-206,-101,-101,-101,-43,-101,-101,-101,-189,-179,-190,-181,-184,-187,-191,-180,-188,-101,-185,-186,-182,-183,-101,-101,-101,-101,-239,]),'NOT':([5,91,107,115,117,118,121,122,133,136,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,204,220,238,242,243,248,257,263,269,272,276,281,288,293,305,312,314,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,342,357,370,375,384,],[-238,121,121,121,-143,-142,121,-141,121,-144,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-239,121,121,121,-44,121,121,121,121,121,-206,121,121,121,-43,121,121,121,-189,-179,-190,-181,-184,-187,-191,-180,-188,121,-185,-186,-182,-183,121,121,121,121,-239,]),'ANDEQUAL':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,179,192,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,283,285,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-60,-62,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-61,-102,330,-239,-113,-145,-111,-102,-239,-112,]),'DECREMENT':([116,119,120,123,128,129,132,134,164,165,166,167,168,169,170,172,175,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,283,286,299,300,341,345,350,362,],[-106,-89,-91,-102,-116,-138,-104,-88,-139,-140,-94,-95,-93,-92,-108,-109,-96,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-110,-107,-102,335,-113,-145,-111,-102,335,-112,]),'COMMA':([33,36,55,57,58,60,62,63,64,67,68,71,72,74,86,89,90,97,99,100,116,119,120,123,128,129,132,134,135,138,139,140,155,157,158,159,164,165,166,167,168,169,170,172,175,179,192,199,205,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,245,247,249,251,254,283,286,299,300,302,341,345,350,362,],[52,75,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,-58,-29,-28,-12,-10,-59,-106,-89,-91,-102,-116,-138,-104,-88,-239,-103,-22,-17,-40,206,75,-37,-139,-140,-94,-95,-93,-92,-108,-109,-96,220,-62,-20,-39,-105,-90,-127,-120,-131,-117,-119,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,-118,-125,-18,-38,-110,-107,-61,-83,-102,-239,-113,-145,-23,-111,-102,-239,-112,]),'TYPE':([5,6,9,10,11,12,25,33,35,36,37,42,47,56,83,86,92,93,96,100,102,104,137,142,154,156,158,200,204,206,207,215,242,243,255,305,312,384,],[-238,-239,-223,-239,24,-226,-224,-57,73,-56,-225,73,73,73,73,-58,73,73,73,-59,73,73,73,73,73,-36,-56,73,-239,73,-35,73,24,-44,73,-43,24,-239,]),'OR':([116,119,120,123,128,129,132,134,135,164,165,166,167,168,169,170,172,175,176,214,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,247,249,251,252,283,286,298,299,300,304,306,318,337,339,341,345,350,352,356,362,366,],[-106,-89,-91,-102,-116,-138,-104,-88,197,-139,-140,-94,-95,-93,-92,-108,-109,-96,197,197,-105,-90,-127,197,-131,197,197,-121,-130,-134,-129,-133,-124,-132,-126,-128,-122,-135,-123,197,-125,-110,-107,197,197,-102,197,197,-113,-145,197,197,197,197,197,-111,-102,197,197,197,-112,197,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([153,],[202,]),'Conversion':([91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ContinueStmt':([242,312,],[256,256,]),'ExpressionRep':([135,286,350,],[179,179,179,]),'ExpressionStmt':([242,312,314,370,],[258,258,258,258,]),'ScanStmt':([242,312,],[259,259,]),'Statement':([242,312,],[260,343,]),'IfStmt':([242,312,381,],[261,261,387,]),'FallThroughStmt':([242,312,],[262,262,]),'StatementRep':([204,384,],[242,242,]),'TypeToken':([35,42,47,56,83,92,93,96,102,104,137,142,154,200,206,215,255,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'AliasDecl':([24,80,],[44,44,]),'PackageNameDotOpt':([14,49,],[30,30,]),'TypeName':([35,42,47,56,83,92,93,96,102,104,137,142,154,200,206,215,255,],[60,60,60,60,60,138,60,60,60,60,60,60,60,60,60,60,60,]),'ExprCaseClause':([372,],[379,]),'ParametersList':([104,],[157,]),'ParameterDecl':([104,206,],[159,245,]),'FuncScope':([69,],[98,]),'FunctionName':([21,],[39,]),'LabeledStmt':([242,312,],[267,267,]),'KeyType':([96,],[144,]),'StatementList':([204,384,],[244,388,]),'TypeAssertion':([129,],[172,]),'ConditionOpt':([357,],[365,]),'EndScope_1':([354,358,369,378,390,],[360,367,373,385,391,]),'ElementType':([93,142,200,],[140,199,239,]),'RetTypeSet':([103,],[153,]),'PointerType':([35,42,47,56,83,93,96,102,104,137,142,154,200,206,215,255,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'EndScope':([101,103,254,],[146,152,302,]),'VarSpecRep':([41,],[77,]),'VarDecl':([11,242,312,],[23,23,23,]),'PrintStmt':([242,312,],[268,268,]),'ConstSpecRep':([34,],[53,]),'Operand':([91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'TypeSpec':([24,80,],[46,111,]),'CCreateScope':([276,318,],[314,351,]),'Parameters':([76,102,],[102,147,]),'UnaryOp':([91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'PackageName':([2,14,49,],[7,29,29,]),'SourceFile':([0,],[3,]),'ExpressionListPureOpt':([269,],[309,]),'Label':([242,266,279,287,312,],[270,308,317,317,270,]),'FunctionDecl':([11,],[16,]),'TopLevelDecl':([11,],[17,]),'ExprSwitchStmt':([242,312,],[271,271,]),'IdentifierList':([15,22,53,77,104,206,240,],[35,42,35,42,154,154,255,]),'IdentifierRep':([15,22,53,77,104,206,240,],[33,33,33,33,33,33,33,]),'Type':([35,42,47,56,83,93,96,102,104,137,142,154,200,206,215,255,],[59,79,82,89,112,139,143,148,155,198,139,205,139,155,250,303,]),'ImportDeclRep':([6,],[10,]),'GoStmt':([242,312,],[273,273,]),'DeferStmt':([242,312,],[274,274,]),'PackageClause':([0,],[1,]),'ResultOpt':([102,],[149,]),'IncDecStmt':([242,312,314,370,],[265,265,265,265,]),'GotoStmt':([242,312,],[275,275,]),'TopLevelDeclRep':([10,],[11,]),'C':([91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'Semi':([1,13,17,85,87,106,111,253,260,344,365,],[6,25,37,113,114,160,163,301,305,357,370,]),'PrimaryExpr':([91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'S':([91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'StartSwitch':([359,],[368,]),'assign_op':([285,],[329,]),'Signature':([76,],[103,]),'Block':([153,338,348,361,389,],[203,354,358,369,390,]),'ExprCaseClauseList':([368,],[372,]),'SwitchStmt':([242,312,],[278,278,]),'VarSpec':([22,77,],[40,106,]),'Result':([102,],[151,]),'Assignment':([242,312,314,370,],[264,264,264,264,]),'ExpressionListTypeOpt':([171,],[210,]),'QualifiedIdent':([35,42,47,56,83,92,93,96,102,104,137,142,154,200,206,215,255,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'Literal':([91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'ImportDecl':([10,],[13,]),'OperandName':([91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'AssignOp':([285,],[321,]),'LabelOpt':([279,287,],[316,336,]),'FieldDeclRep':([201,],[240,]),'start':([0,],[4,]),'Declaration':([11,242,312,],[18,282,282,]),'Condition':([314,357,],[346,363,]),'StructType':([69,],[97,]),'B':([91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'ConstSpec':([15,53,],[32,87,]),'F':([91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'epsilon':([6,10,14,26,34,41,45,49,79,102,135,171,173,201,204,242,248,269,279,286,287,312,314,350,357,368,370,373,384,],[9,12,28,48,54,78,81,28,108,150,192,209,213,241,243,284,213,310,315,192,315,284,347,192,364,371,284,380,243,]),'ConditionBlockOpt':([314,],[348,]),'ExpressionList':([91,107,171,242,269,272,312,314,329,370,375,],[131,162,211,285,311,313,285,285,353,285,383,]),'SimpleStmt':([242,312,314,370,],[289,289,344,374,]),'ImportSpecRep':([26,],[49,]),'Expression':([91,107,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[135,135,176,135,214,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,251,252,286,298,304,306,135,135,318,337,339,286,350,352,135,356,366,286,135,]),'ImportPath':([30,],[50,]),'ExprSwitchCase':([372,],[376,]),'ExpressionOpt':([173,248,],[212,297,]),'ST':([35,42,47,56,83,93,96,102,104,137,142,154,200,206,215,255,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'TypeExprListOpt':([35,],[70,]),'ReturnStmt':([242,312,],[277,277,]),'ConstDecl':([11,242,312,],[19,19,19,]),'Slice':([129,],[170,]),'ArrayType':([35,42,47,56,83,93,96,102,104,137,142,154,200,206,215,255,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ForStmt':([242,312,],[290,290,]),'Function':([76,],[101,]),'ImportSpec':([14,49,],[27,85,]),'TypeLit':([35,42,47,56,83,93,96,102,104,137,142,154,200,206,215,255,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'TypeSpecRep':([45,],[80,]),'CreateScope':([39,242,312,339,381,],[76,291,291,355,386,]),'SliceType':([35,42,47,56,83,93,96,102,104,137,142,154,200,206,215,255,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'TypeDecl':([11,242,312,],[20,20,20,]),'BaseType':([56,],[90,]),'I':([65,91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,208,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[94,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,246,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'IFSYM':([291,355,386,],[338,361,389,]),'UnaryExpr':([91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[128,128,164,165,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'ArrayLength':([65,],[95,]),'MapType':([35,42,47,56,83,93,96,102,104,137,142,154,200,206,215,255,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ForClause':([314,],[349,]),'ShortVarDecl':([242,312,314,370,],[292,292,292,292,]),'TypeDef':([24,80,],[43,43,]),'FieldDecl':([240,],[253,]),'BreakStmt':([242,312,],[294,294,]),'BasicLit':([91,107,115,121,133,171,173,177,178,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,220,238,242,248,257,263,269,272,281,288,293,312,314,319,329,342,357,370,375,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'ExpressionListOpt':([79,],[109,]),'ElseOpt':([373,],[382,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',230),
  ('Type -> TypeName','Type',1,'p_type','parser.py',239),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',240),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','parser.py',244),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',245),
  ('TypeToken -> INT','TypeToken',1,'p_type_token','parser.py',255),
  ('TypeToken -> FLOAT','TypeToken',1,'p_type_token','parser.py',256),
  ('TypeToken -> BOOL','TypeToken',1,'p_type_token','parser.py',257),
  ('TypeToken -> STRING','TypeToken',1,'p_type_token','parser.py',258),
  ('TypeToken -> TYPE IDENTIFIER','TypeToken',2,'p_type_token','parser.py',259),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',295),
  ('TypeLit -> ST StructType','TypeLit',2,'p_type_lit','parser.py',296),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',297),
  ('TypeLit -> MapType','TypeLit',1,'p_type_lit','parser.py',298),
  ('TypeLit -> SliceType','TypeLit',1,'p_type_lit','parser.py',299),
  ('ST -> <empty>','ST',0,'p_S_T','parser.py',306),
  ('SliceType -> LSQUARE RSQUARE ElementType','SliceType',3,'p_slice_type','parser.py',321),
  ('MapType -> MAP LSQUARE KeyType RSQUARE ElementType','MapType',5,'p_map_type','parser.py',330),
  ('KeyType -> Type','KeyType',1,'p_key_type','parser.py',337),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE ElementType','ArrayType',4,'p_array_type','parser.py',344),
  ('ArrayLength -> I INT_LIT','ArrayLength',2,'p_array_length','parser.py',370),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',376),
  ('StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope','StructType',6,'p_struct_type','parser.py',381),
  ('FuncScope -> <empty>','FuncScope',0,'p_func_scope','parser.py',389),
  ('FieldDeclRep -> FieldDeclRep FieldDecl Semi','FieldDeclRep',3,'p_field_decl_rep','parser.py',397),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',398),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_field_decl','parser.py',411),
  ('PointerType -> MULTIPLY BaseType','PointerType',2,'p_point_type','parser.py',432),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',440),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_sign','parser.py',447),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',473),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',474),
  ('Result -> Parameters','Result',1,'p_result','parser.py',478),
  ('Result -> Type','Result',1,'p_result','parser.py',479),
  ('Parameters -> LPAREN ParametersList RPAREN','Parameters',3,'p_params','parser.py',485),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_params','parser.py',486),
  ('ParametersList -> ParameterDecl','ParametersList',1,'p_param_list','parser.py',509),
  ('ParametersList -> ParametersList COMMA ParameterDecl','ParametersList',3,'p_param_list','parser.py',510),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_param_decl','parser.py',522),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_param_decl','parser.py',523),
  ('Block -> LCURL StatementList RCURL','Block',3,'p_block','parser.py',557),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',561),
  ('StatementRep -> StatementRep Statement Semi','StatementRep',3,'p_stat_rep','parser.py',565),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',566),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',579),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',580),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',581),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',585),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',586),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',593),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',594),
  ('ConstSpecRep -> ConstSpecRep ConstSpec Semi','ConstSpecRep',3,'p_const_spec_rep','parser.py',601),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',602),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',611),
  ('TypeExprListOpt -> Type EQUALS ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',633),
  ('IdentifierList -> IDENTIFIER','IdentifierList',1,'p_identifier_list','parser.py',647),
  ('IdentifierList -> IdentifierRep','IdentifierList',1,'p_identifier_list','parser.py',648),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',665),
  ('IdentifierRep -> IDENTIFIER COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',666),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',697),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',710),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',711),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',732),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',733),
  ('TypeSpecRep -> TypeSpecRep TypeSpec Semi','TypeSpecRep',3,'p_type_spec_rep','parser.py',740),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',741),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',748),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',749),
  ('AliasDecl -> IDENTIFIER EQUALS Type','AliasDecl',3,'p_alias_decl','parser.py',753),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_type_def','parser.py',765),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',778),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',779),
  ('VarSpecRep -> VarSpecRep VarSpec Semi','VarSpecRep',3,'p_var_spec_rep','parser.py',786),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',787),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',797),
  ('ExpressionListOpt -> EQUALS ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',872),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',873),
  ('ExpressionListOpt -> EQUALS MALLOC LPAREN I INT_LIT RPAREN','ExpressionListOpt',6,'p_expr_list_opt','parser.py',874),
  ('ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',888),
  ('FunctionDecl -> FUNC FunctionName CreateScope Function EndScope','FunctionDecl',5,'p_func_decl','parser.py',919),
  ('FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope','FunctionDecl',5,'p_func_decl','parser.py',920),
  ('CreateScope -> <empty>','CreateScope',0,'p_create_scope','parser.py',942),
  ('EndScope -> <empty>','EndScope',0,'p_end_scope','parser.py',946),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',950),
  ('Function -> Signature RetTypeSet FunctionBody','Function',3,'p_func','parser.py',962),
  ('RetTypeSet -> <empty>','RetTypeSet',0,'p_ret_type_set','parser.py',981),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',995),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',1007),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',1008),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',1009),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',1016),
  ('BasicLit -> I INT_LIT','BasicLit',2,'p_basic_lit','parser.py',1021),
  ('BasicLit -> F FLOAT_LIT','BasicLit',2,'p_basic_lit','parser.py',1022),
  ('BasicLit -> C IMAGINARY_LIT','BasicLit',2,'p_basic_lit','parser.py',1023),
  ('BasicLit -> B BOOL_LIT','BasicLit',2,'p_basic_lit','parser.py',1024),
  ('BasicLit -> S STRING_LIT','BasicLit',2,'p_basic_lit','parser.py',1025),
  ('B -> <empty>','B',0,'p_B','parser.py',1045),
  ('I -> <empty>','I',0,'p_I','parser.py',1051),
  ('F -> <empty>','F',0,'p_F','parser.py',1057),
  ('C -> <empty>','C',0,'p_C','parser.py',1063),
  ('S -> <empty>','S',0,'p_S','parser.py',1069),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',1075),
  ('QualifiedIdent -> IDENTIFIER DOT TypeName','QualifiedIdent',3,'p_qualified_ident','parser.py',1121),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',1133),
  ('PrimaryExpr -> PrimaryExpr DOT IDENTIFIER','PrimaryExpr',3,'p_prim_expr','parser.py',1134),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',1135),
  ('PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE','PrimaryExpr',4,'p_prim_expr','parser.py',1136),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',1137),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser.py',1138),
  ('PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN','PrimaryExpr',4,'p_prim_expr','parser.py',1139),
  ('Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE','Slice',5,'p_slice','parser.py',1354),
  ('Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE','Slice',7,'p_slice','parser.py',1355),
  ('TypeAssertion -> DOT LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser.py',1363),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1368),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1369),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser.py',1373),
  ('Expression -> Expression COMPARE_OR Expression','Expression',3,'p_expr','parser.py',1374),
  ('Expression -> Expression COMPARE_AND Expression','Expression',3,'p_expr','parser.py',1375),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expr','parser.py',1376),
  ('Expression -> Expression NOTEQUALS Expression','Expression',3,'p_expr','parser.py',1377),
  ('Expression -> Expression LESSTHAN Expression','Expression',3,'p_expr','parser.py',1378),
  ('Expression -> Expression GREATERTHAN Expression','Expression',3,'p_expr','parser.py',1379),
  ('Expression -> Expression LESSTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',1380),
  ('Expression -> Expression GREATERTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',1381),
  ('Expression -> Expression OR Expression','Expression',3,'p_expr','parser.py',1382),
  ('Expression -> Expression XOR Expression','Expression',3,'p_expr','parser.py',1383),
  ('Expression -> Expression ANDXOR Expression','Expression',3,'p_expr','parser.py',1384),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expr','parser.py',1385),
  ('Expression -> Expression MODULO Expression','Expression',3,'p_expr','parser.py',1386),
  ('Expression -> Expression LSHIFT Expression','Expression',3,'p_expr','parser.py',1387),
  ('Expression -> Expression RSHIFT Expression','Expression',3,'p_expr','parser.py',1388),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expr','parser.py',1389),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expr','parser.py',1390),
  ('Expression -> Expression MULTIPLY Expression','Expression',3,'p_expr','parser.py',1391),
  ('Expression -> Expression AND Expression','Expression',3,'p_expr','parser.py',1392),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',1473),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',1474),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',1478),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1479),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1480),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',1527),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',1528),
  ('UnaryOp -> MULTIPLY','UnaryOp',1,'p_unary_op','parser.py',1529),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser.py',1530),
  ('Conversion -> TYPECAST Type LPAREN Expression RPAREN','Conversion',5,'p_conversion','parser.py',1544),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',1552),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',1553),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',1554),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',1555),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',1556),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',1557),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',1558),
  ('Statement -> CreateScope IFSYM Block EndScope_1','Statement',4,'p_statement','parser.py',1559),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',1560),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',1561),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',1562),
  ('Statement -> DeferStmt','Statement',1,'p_statement','parser.py',1563),
  ('Statement -> FallThroughStmt','Statement',1,'p_statement','parser.py',1564),
  ('Statement -> GoStmt','Statement',1,'p_statement','parser.py',1565),
  ('Statement -> PrintStmt','Statement',1,'p_statement','parser.py',1566),
  ('Statement -> ScanStmt','Statement',1,'p_statement','parser.py',1567),
  ('EndScope_1 -> <empty>','EndScope_1',0,'p_end_scope_new','parser.py',1574),
  ('PrintStmt -> PRINT ExpressionList','PrintStmt',2,'p_print_stmt','parser.py',1581),
  ('ScanStmt -> SCAN Expression','ScanStmt',2,'p_scan_stmt','parser.py',1606),
  ('FallThroughStmt -> FALLTHROUGH','FallThroughStmt',1,'p_fallthrough_stmt','parser.py',1630),
  ('GoStmt -> GO Expression','GoStmt',2,'p_go_stmt','parser.py',1634),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_defer_stmt','parser.py',1640),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',1645),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1646),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1647),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',1648),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',1649),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',1654),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',1672),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',1677),
  ('IncDecStmt -> Expression INCREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1683),
  ('IncDecStmt -> Expression DECREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1684),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',1691),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1729),
  ('AssignOp -> PLUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1733),
  ('AssignOp -> MINUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1734),
  ('AssignOp -> TIMESEQUAL','AssignOp',1,'p_AssignOp','parser.py',1735),
  ('AssignOp -> DIVIDE_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1736),
  ('AssignOp -> MODEQUAL','AssignOp',1,'p_AssignOp','parser.py',1737),
  ('AssignOp -> ANDEQUAL','AssignOp',1,'p_AssignOp','parser.py',1738),
  ('AssignOp -> OREQUAL','AssignOp',1,'p_AssignOp','parser.py',1739),
  ('AssignOp -> XOREQUAL','AssignOp',1,'p_AssignOp','parser.py',1740),
  ('AssignOp -> ANDXOR_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1741),
  ('AssignOp -> LSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1742),
  ('AssignOp -> RSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1743),
  ('AssignOp -> EQUALS','AssignOp',1,'p_AssignOp','parser.py',1744),
  ('IfStmt -> IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt','IfStmt',7,'p_if_statement','parser.py',1750),
  ('IFSYM -> <empty>','IFSYM',0,'p_if_sym','parser.py',1767),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1773),
  ('ElseOpt -> ELSE CreateScope IFSYM Block EndScope_1','ElseOpt',5,'p_else_opt','parser.py',1774),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1775),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',1787),
  ('ExprSwitchStmt -> SWITCH Expression CCreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1','ExprSwitchStmt',8,'p_ExprSwitchStmt','parser.py',1791),
  ('StartSwitch -> <empty>','StartSwitch',0,'p_start_switch','parser.py',1822),
  ('ExprCaseClauseList -> epsilon','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',1838),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',1839),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',1855),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',1878),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',1879),
  ('ForStmt -> FOR CCreateScope ConditionBlockOpt Block EndScope_1','ForStmt',5,'p_for','parser.py',1903),
  ('CCreateScope -> <empty>','CCreateScope',0,'p_c_create_scope','parser.py',1916),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1921),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1922),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1923),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1934),
  ('ForClause -> SimpleStmt Semi ConditionOpt Semi SimpleStmt','ForClause',5,'p_forclause','parser.py',1939),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',1958),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',1959),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',1966),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',2004),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',2005),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',2010),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',2014),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',2018),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',2019),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',2024),
  ('SourceFile -> PackageClause Semi ImportDeclRep TopLevelDeclRep','SourceFile',4,'p_source_file','parser.py',2030),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',2038),
  ('ImportDeclRep -> ImportDeclRep ImportDecl Semi','ImportDeclRep',3,'p_import_decl_rep','parser.py',2039),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl Semi','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',2048),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',2049),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',2060),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',2065),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',2076),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',2077),
  ('ImportSpecRep -> ImportSpecRep ImportSpec Semi','ImportSpecRep',3,'p_import_spec_rep','parser.py',2084),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',2085),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',2093),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2101),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2102),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2103),
  ('ImportPath -> STRING_LIT','ImportPath',1,'p_import_path','parser.py',2111),
  ('Semi -> SEMICOLON','Semi',1,'p_SemiColon','parser.py',2119),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',2132),
]
