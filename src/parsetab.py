
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDENTIFIERrightEQUALSNOTleftINT_LITleftFLOAT_LITleftSTRING_LITleftCOMPARE_ORleftCOMPARE_ANDleftEQEQNOTEQUALSleftORleftXORleftANDANDXORleftLESSTHANGREATERTHANLESSTHAN_EQUALGREATERTHAN_EQUALleftPLUSMINUSleftLSHIFTRSHIFTleftMULTIPLYDIVIDEMODULOleftLPARENRPARENAND ANDEQUAL ANDXOR ANDXOR_EQUAL BOOL BOOL_T BREAK CASE COLON COMMA COMPARE_AND COMPARE_OR COMPLEX COMPLEX_T CONST CONTINUE DECREMENT DEFAULT DEFER DIVIDE DIVIDE_EQUAL DOT DOTS ELSE EQEQ EQUALS FALLTHROUGH FLOAT FLOAT_LIT FLOAT_T FOR FUNC GO GOTO GREATERTHAN GREATERTHAN_EQUAL IDENTIFIER IF IMAGINARY_LIT IMPORT INCREMENT INT INT_LIT INT_T LCURL LEFT_ARROW LESSTHAN LESSTHAN_EQUAL LPAREN LSHIFT LSHIFT_EQUAL LSQUARE MAP MINUS MINUSEQUAL MODEQUAL MODULO MULTIPLY NOT NOTEQUALS OR OREQUAL PACKAGE PLUS PLUSEQUAL RANGE RCURL RETURN RPAREN RSHIFT RSHIFT_EQUAL RSQUARE SELECT SEMICOLON SHORT_ASSIGNMENT STRING STRING_LIT STRING_T STRUCT SWITCH TIMESEQUAL TYPE TYPECAST VAR XOR XOREQUALstart : SourceFileType : TypeName\n            | TypeLitTypeName : TypeToken\n                | QualifiedIdentTypeToken : INT_T\n                 | INT\n                 | FLOAT\n                 | BOOL\n                 | COMPLEX\n                 | BOOL_T\n                 | COMPLEX_T\n                 | STRING\n                 | FLOAT_T\n                 | STRING_T\n                 | TYPE IDENTIFIERTypeLit : ArrayType\n               | StructType\n               | PointerType\n               | MapType\n               | SliceTypeTypeOpt : Type\n               | epsilonSliceType : LSQUARE RSQUARE ElementTypeMapType : MAP LSQUARE KeyType RSQUARE ElementType KeyType : TypeArrayType : LSQUARE ArrayLength RSQUARE ElementType ArrayLength : Expression  ElementType : Type StructType : STRUCT LCURL FieldDeclRep RCURL FieldDeclRep : FieldDeclRep FieldDecl SEMICOLON\n                  | epsilon  FieldDecl : IdentifierList Type TagOpt TagOpt : Tag\n             | epsilon  Tag : STRING_LIT PointerType : MULTIPLY BaseTypeBaseType : TypeSignature : Parameters ResultOptResultOpt : Result\n                 | epsilonResult : Parameters\n              | TypeParameters : LPAREN ParametersList RPAREN\n                  | LPAREN ParametersList COMMA RPAREN\n                  | LPAREN RPARENParametersList : ParameterDecl\n                      | ParametersList COMMA ParameterDeclParameterDecl : DOTS Type\n                     | IdentifierList Type\n                     | IdentifierList DOTS Type\n                     | TypeBlock : LCURL StatementList RCURLStatementList : StatementRepStatementRep : StatementRep Statement SEMICOLON\n                    | epsilonDeclaration : ConstDecl\n                 | TypeDecl\n                 | VarDeclTopLevelDecl : Declaration\n                  | FunctionDeclConstDecl : CONST ConstSpec\n                 | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOLON\n                    | epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : TypeOpt EQUALS ExpressionList\n                       | epsilonIdentifierList : IDENTIFIER \n                      | IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n                     | IDENTIFIER COMMA IDENTIFIERExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n                     | epsilonTypeDecl : TYPE TypeSpec\n                | TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOLON\n                   | epsilonTypeSpec : AliasDecl\n                | TypeDefAliasDecl : IDENTIFIER EQUALS TypeTypeDef : IDENTIFIER TypeVarDecl : VAR VarSpec\n               | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOLON\n                  | epsilonVarSpec : IdentifierList Type ExpressionListOpt\n               | IdentifierList EQUALS ExpressionListExpressionListOpt : EQUALS ExpressionList\n                         | epsilon ShortVarDecl : IDENTIFIER SHORT_ASSIGNMENT Expression FunctionDecl : FUNC FunctionName Function\n                    | FUNC FunctionName SignatureFunctionName : IDENTIFIERFunction : Signature FunctionBodyFunctionBody : BlockOperand : Literal\n               | OperandName\n               | LPAREN Expression RPARENLiteral : BasicLit\n               | CompositeLitCompositeLit : LiteralType LiteralValueLiteralType : StructType\n                 | ArrayType\n                 | SliceType\n                 | MapType\n                 | TypeNameLiteralValue : LCURL RCURL\n                  | LCURL ElementList RCURL\n                  | LCURL ElementList COMMA RCURLElementList : KeyedElement\n                 | ElementList COMMA KeyedElementKeyedElement : Element\n                  | Key COLON Element\n                  | IDENTIFIER COLON ElementKey : Expression\n         | LiteralValueElement : Expression\n             | LiteralValueBasicLit : INT_LIT\n                | FLOAT_LIT\n                | IMAGINARY_LIT\n                | STRING_LITOperandName : IDENTIFIERQualifiedIdent : IDENTIFIER DOT TypeNamePrimaryExpr : Operand\n                   | PrimaryExpr Selector\n                   | Conversion\n                   | PrimaryExpr Index\n                   | PrimaryExpr Slice\n                   | PrimaryExpr TypeAssertion\n                   | PrimaryExpr ArgumentsSelector : DOT IDENTIFIERIndex : LSQUARE Expression RSQUARESlice : LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE\n             | LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARETypeAssertion : DOT LPAREN Type RPARENArguments : LPAREN ExpressionListTypeOpt RPARENExpressionListTypeOpt : ExpressionList\n                             | epsilonExpression : UnaryExpr\n                  | Expression COMPARE_OR Expression\n                  | Expression COMPARE_AND Expression\n                  | Expression EQEQ Expression\n                  | Expression NOTEQUALS Expression\n                  | Expression LESSTHAN Expression\n                  | Expression GREATERTHAN Expression\n                  | Expression LESSTHAN_EQUAL Expression\n                  | Expression GREATERTHAN_EQUAL Expression\n                  | Expression OR Expression\n                  | Expression XOR Expression\n                  | Expression ANDXOR Expression\n                  | Expression DIVIDE Expression\n                  | Expression MODULO Expression\n                  | Expression LSHIFT Expression\n                  | Expression RSHIFT Expression\n                  | Expression PLUS Expression\n                  | Expression MINUS Expression\n                  | Expression MULTIPLY Expression\n                  | Expression AND ExpressionExpressionOpt : Expression\n                     | epsilonUnaryExpr : PrimaryExpr\n                 | UnaryOp UnaryExpr\n                 | NOT UnaryExprUnaryOp : PLUS\n               | MINUS\n               | MULTIPLY\n               | AND Conversion : TYPECAST Type LPAREN Expression RPARENStatement : Declaration\n                 | LabeledStmt\n                 | SimpleStmt\n                 | ReturnStmt\n                 | BreakStmt\n                 | ContinueStmt\n                 | GotoStmt\n                 | Block\n                 | IfStmt\n                 | SwitchStmt\n                 | ForStmt\n                 | DeferStmt\n                 | SelectStmt\n                 | FallThroughStmt\n                 | GoStmtFallThroughStmt : FALLTHROUGHGoStmt : GO ExpressionSelectStmt : SELECT LCURL CCX RCURL\n                | SELECT LCURL RCURLCCX : CommClause\n         | CCX CommClauseCommClause : CommCase COLON StatementListCommCase : CASE SendStmt DEFAULT\n              | CASE RecvStmt DEFAULTSendStmt : Channel LEFT_ARROW ExpressionChannel : ExpressionRecvStmt : ExpressionList EQUALS RecvExpr\n              | IdentifierList SHORT_ASSIGNMENT RecvExprRecvExpr : ExpressionDeferStmt : DEFER Expression SimpleStmt : epsilon\n                 | ExpressionStmt\n                 | IncDecStmt\n                 | Assignment\n                 | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : Expression INCREMENT\n                 | Expression DECREMENT  Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOp AssignOp : PLUSEQUAL\n               | MINUSEQUAL\n               | TIMESEQUAL\n               | DIVIDE_EQUAL\n               | MODEQUAL\n               | ANDEQUAL\n               | OREQUAL\n               | XOREQUAL\n               | ANDXOR_EQUAL\n               | LSHIFT_EQUAL\n               | RSHIFT_EQUAL\n               | EQUALS  IfStmt : IF Expression Block ElseOpt  ElseOpt : ELSE IfStmt\n              | ELSE Block\n              | epsilon  SwitchStmt : ExprSwitchStmtExprSwitchStmt : SWITCH SimpleStmt SEMICOLON  ExpressionOpt LCURL ExprCaseClauseList RCURL\n                 | SWITCH ExpressionOpt LCURL ExprCaseClauseList RCURL ExprCaseClauseList : epsilon\n                 | ExprCaseClauseList ExprCaseClause\n    ExprCaseClause : ExprSwitchCase COLON StatementList \n    ExprSwitchCase : CASE ExpressionList\n                 | DEFAULT \n    ForStmt : FOR ConditionBlockOpt BlockConditionBlockOpt : epsilon\n             | Condition\n             | ForClause\n             | RangeClauseCondition : Expression ForClause : SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmtConditionOpt : epsilon\n          | Condition RangeClause : ExpressionIdentListOpt RANGE ExpressionExpressionIdentListOpt : epsilon\n             | ExpressionIdentifierExpressionIdentifier : ExpressionList EQUALSReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n             | epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n        | epsilon GotoStmt : GOTO Label SourceFile : PackageClause SEMICOLON ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n           | ImportDeclRep ImportDecl SEMICOLONTopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOLON\n                     | epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n          | IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOLON\n            | epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n                        | PackageName\n                        | epsilon ImportPath : STRING_LIT epsilon : '
    
_lr_action_items = {'NOTEQUALS':([104,107,111,112,116,117,119,120,121,125,126,130,131,132,160,167,170,171,172,174,175,176,180,201,226,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,254,257,289,292,306,308,310,312,318,320,329,334,344,365,366,368,369,370,371,375,388,396,398,402,406,410,413,420,436,441,443,],[-129,-122,-99,-101,-102,-125,-123,-142,-164,-98,182,-127,-121,-124,182,-165,-166,-130,-131,-128,-132,-133,182,-103,182,-134,-100,-153,-146,-154,-161,-152,182,-157,-159,-145,-149,-158,-160,-147,-148,-156,182,-155,-151,-150,-109,-125,182,-125,182,-139,-135,182,-110,182,182,-125,182,182,182,182,182,-138,-171,-111,182,182,-136,182,182,182,-125,182,182,-137,182,182,]),'VAR':([5,8,9,10,11,24,36,146,208,209,319,326,416,439,],[-275,-260,-275,21,-263,-261,-262,-275,21,-56,-55,21,-275,-275,]),'MULTIPLY':([32,34,35,41,46,56,70,85,87,91,95,98,104,105,107,108,109,110,111,112,114,115,116,117,119,120,121,124,125,126,127,128,130,131,132,134,135,138,146,147,149,151,153,156,160,167,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,208,209,212,213,214,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,254,257,259,262,264,268,273,280,287,289,292,299,303,305,306,307,308,310,311,312,313,314,318,319,320,326,329,334,338,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,365,366,368,369,370,371,375,382,384,385,387,388,390,396,397,398,402,406,410,413,416,420,421,422,429,430,431,436,439,441,443,],[-70,56,-69,56,56,56,108,56,56,108,56,-71,-129,108,-122,-169,-168,56,-99,-101,108,-167,-102,-125,-123,-142,-164,108,-98,192,-170,56,-127,-121,-124,108,56,-72,-275,56,-46,-69,56,108,192,-165,-166,-130,-131,108,-128,-132,-133,108,56,192,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-103,108,108,-56,56,56,-44,192,-134,56,-100,192,192,-154,192,192,192,192,192,192,192,192,-160,192,192,192,192,-155,192,192,108,-109,-125,192,56,56,108,108,108,108,108,-125,192,108,-45,108,-139,108,-135,192,108,-110,108,108,192,-55,192,108,-125,192,56,192,108,-223,-213,-224,-215,-218,-221,-225,-214,-222,108,-219,-220,-216,-217,192,192,192,-138,-171,-111,192,108,-225,108,108,192,108,-136,108,192,192,192,-125,192,-275,192,108,108,108,108,108,-137,-275,192,192,]),'MINUS':([70,91,104,105,107,108,109,111,112,114,115,116,117,119,120,121,124,125,126,127,130,131,132,134,146,156,160,167,170,171,172,173,174,175,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,208,209,226,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,254,257,264,268,273,280,287,289,292,299,305,306,307,308,310,311,312,313,314,318,319,320,326,329,334,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,365,366,368,369,370,371,375,382,384,385,387,388,390,396,397,398,402,406,410,413,416,420,421,422,429,430,431,436,439,441,443,],[109,109,-129,109,-122,-169,-168,-99,-101,109,-167,-102,-125,-123,-142,-164,109,-98,188,-170,-127,-121,-124,109,-275,109,188,-165,-166,-130,-131,109,-128,-132,-133,109,188,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-103,109,109,-56,188,-134,-100,188,188,-154,188,188,188,-157,-159,188,188,-158,-160,188,188,-156,188,-155,188,188,109,-109,-125,188,109,109,109,109,109,-125,188,109,109,-139,109,-135,188,109,-110,109,109,188,-55,188,109,-125,188,188,109,-223,-213,-224,-215,-218,-221,-225,-214,-222,109,-219,-220,-216,-217,188,188,188,-138,-171,-111,188,109,-225,109,109,188,109,-136,109,188,188,188,-125,188,-275,188,109,109,109,109,109,-137,-275,188,188,]),'DEFER':([146,208,209,319,326,416,439,],[-275,268,-56,-55,268,-275,-275,]),'RPAREN':([25,33,40,44,47,48,52,53,54,55,58,59,60,61,62,64,65,66,68,69,72,75,76,78,79,80,82,87,88,89,92,93,101,102,104,107,111,112,116,117,119,120,121,125,130,131,132,137,148,150,152,160,164,165,166,167,168,169,170,171,172,173,174,175,176,180,201,211,213,215,216,218,219,220,221,222,223,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,261,302,304,306,308,309,310,312,315,366,369,370,371,396,436,],[-275,-275,-275,-275,-269,96,100,-65,-17,-10,-4,-3,-14,-2,-12,-11,-18,-13,-6,-20,-15,-7,-8,-9,-19,-21,-5,149,154,-87,161,-79,-38,-37,-129,-122,-99,-101,-102,-125,-123,-142,-164,-98,-127,-121,-124,-16,-52,214,-47,-275,-268,-64,-126,-165,-29,-24,-166,-130,-131,-275,-128,-132,-133,230,-103,-50,303,-49,-86,-73,-75,-78,-141,306,-140,-134,-27,-100,-153,-146,-154,-161,-152,-143,-157,-159,-145,-149,-158,-160,-147,-148,-156,-144,-155,-151,-150,-109,-30,-51,-48,-139,-135,369,370,-110,-25,-74,-138,-171,-111,-136,-137,]),'FALLTHROUGH':([146,208,209,319,326,416,439,],[-275,286,-56,-55,286,-275,-275,]),'FLOAT_T':([32,34,35,41,46,56,70,85,87,91,95,98,103,105,108,109,110,114,115,124,127,128,134,135,138,146,147,149,151,153,156,173,177,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,209,212,213,214,228,250,259,262,264,268,273,280,287,299,303,305,307,311,313,314,319,326,338,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,382,384,385,387,390,397,416,421,422,429,430,431,439,],[-70,60,-69,60,60,60,60,60,60,60,60,-71,60,60,-169,-168,60,60,-167,60,-170,60,60,60,-72,-275,60,-46,-69,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-56,60,60,-44,60,60,60,60,60,60,60,60,60,60,-45,60,60,60,60,60,-55,60,60,60,-223,-213,-224,-215,-218,-221,-225,-214,-222,60,-219,-220,-216,-217,60,-225,60,60,60,60,-275,60,60,60,60,60,-275,]),'PLUS':([70,91,104,105,107,108,109,111,112,114,115,116,117,119,120,121,124,125,126,127,130,131,132,134,146,156,160,167,170,171,172,173,174,175,176,177,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,208,209,226,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,254,257,264,268,273,280,287,289,292,299,305,306,307,308,310,311,312,313,314,318,319,320,326,329,334,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,365,366,368,369,370,371,375,382,384,385,387,388,390,396,397,398,402,406,410,413,416,420,421,422,429,430,431,436,439,441,443,],[115,115,-129,115,-122,-169,-168,-99,-101,115,-167,-102,-125,-123,-142,-164,115,-98,191,-170,-127,-121,-124,115,-275,115,191,-165,-166,-130,-131,115,-128,-132,-133,115,191,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-103,115,115,-56,191,-134,-100,191,191,-154,191,191,191,-157,-159,191,191,-158,-160,191,191,-156,191,-155,191,191,115,-109,-125,191,115,115,115,115,115,-125,191,115,115,-139,115,-135,191,115,-110,115,115,191,-55,191,115,-125,191,191,115,-223,-213,-224,-215,-218,-221,-225,-214,-222,115,-219,-220,-216,-217,191,191,191,-138,-171,-111,191,115,-225,115,115,191,115,-136,115,191,191,191,-125,191,-275,191,115,115,115,115,115,-137,-275,191,191,]),'IMPORT':([5,8,9,24,],[-275,-260,13,-261,]),'MODULO':([104,107,111,112,116,117,119,120,121,125,126,130,131,132,160,167,170,171,172,174,175,176,180,201,226,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,254,257,289,292,306,308,310,312,318,320,329,334,344,365,366,368,369,370,371,375,388,396,398,402,406,410,413,420,436,441,443,],[-129,-122,-99,-101,-102,-125,-123,-142,-164,-98,197,-127,-121,-124,197,-165,-166,-130,-131,-128,-132,-133,197,-103,197,-134,-100,197,197,-154,197,197,197,197,197,197,197,197,-160,197,197,197,197,-155,197,197,-109,-125,197,-125,197,-139,-135,197,-110,197,197,-125,197,197,197,197,197,-138,-171,-111,197,197,-136,197,197,197,-125,197,197,-137,197,197,]),'GOTO':([146,208,209,319,326,416,439,],[-275,271,-56,-55,271,-275,-275,]),'GO':([146,208,209,319,326,416,439,],[-275,264,-56,-55,264,-275,-275,]),'MAP':([32,34,35,41,46,56,70,85,87,91,95,98,105,108,109,110,114,115,124,127,128,134,135,138,146,147,149,151,153,156,173,177,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,209,212,213,214,228,250,259,262,264,268,273,280,287,299,303,305,307,311,313,314,319,326,338,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,382,384,385,387,390,397,416,421,422,429,430,431,439,],[-70,73,-69,73,73,73,73,73,73,73,73,-71,73,-169,-168,73,73,-167,73,-170,73,73,73,-72,-275,73,-46,-69,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-56,73,73,-44,73,73,73,73,73,73,73,73,73,73,-45,73,73,73,73,73,-55,73,73,73,-223,-213,-224,-215,-218,-221,-225,-214,-222,73,-219,-220,-216,-217,73,-225,73,73,73,73,-275,73,73,73,73,73,-275,]),'MINUSEQUAL':([104,107,111,112,116,117,119,120,121,125,130,131,132,167,170,171,172,174,175,176,201,218,219,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,289,291,292,306,308,312,329,333,334,344,366,369,370,371,396,436,],[-129,-122,-99,-101,-102,-125,-123,-142,-164,-98,-127,-121,-124,-165,-166,-130,-131,-128,-132,-133,-103,-73,-75,-134,-100,-153,-146,-154,-161,-152,-143,-157,-159,-145,-149,-158,-160,-147,-148,-156,-144,-155,-151,-150,-109,-125,350,-275,-139,-135,-110,-125,350,-275,-275,-74,-138,-171,-111,-136,-137,]),'INT_LIT':([70,91,105,108,109,114,115,124,127,134,146,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,209,250,264,268,273,280,287,299,305,307,311,313,314,319,326,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,382,384,385,387,390,397,416,421,422,429,430,431,439,],[131,131,131,-169,-168,131,-167,131,-170,131,-275,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,-56,131,131,131,131,131,131,131,131,131,131,131,131,-55,131,131,-223,-213,-224,-215,-218,-221,-225,-214,-222,131,-219,-220,-216,-217,131,-225,131,131,131,131,-275,131,131,131,131,131,-275,]),'TIMESEQUAL':([104,107,111,112,116,117,119,120,121,125,130,131,132,167,170,171,172,174,175,176,201,218,219,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,289,291,292,306,308,312,329,333,334,344,366,369,370,371,396,436,],[-129,-122,-99,-101,-102,-125,-123,-142,-164,-98,-127,-121,-124,-165,-166,-130,-131,-128,-132,-133,-103,-73,-75,-134,-100,-153,-146,-154,-161,-152,-143,-157,-159,-145,-149,-158,-160,-147,-148,-156,-144,-155,-151,-150,-109,-125,359,-275,-139,-135,-110,-125,359,-275,-275,-74,-138,-171,-111,-136,-137,]),'OR':([104,107,111,112,116,117,119,120,121,125,126,130,131,132,160,167,170,171,172,174,175,176,180,201,226,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,254,257,289,292,306,308,310,312,318,320,329,334,344,365,366,368,369,370,371,375,388,396,398,402,406,410,413,420,436,441,443,],[-129,-122,-99,-101,-102,-125,-123,-142,-164,-98,198,-127,-121,-124,198,-165,-166,-130,-131,-128,-132,-133,198,-103,198,-134,-100,-153,198,-154,-161,-152,198,-157,-159,198,-149,-158,-160,-147,-148,-156,198,-155,-151,-150,-109,-125,198,-125,198,-139,-135,198,-110,198,198,-125,198,198,198,198,198,-138,-171,-111,198,198,-136,198,198,198,-125,198,198,-137,198,198,]),'RETURN':([146,208,209,319,326,416,439,],[-275,273,-56,-55,273,-275,-275,]),'COMPARE_OR':([104,107,111,112,116,117,119,120,121,125,126,130,131,132,160,167,170,171,172,174,175,176,180,201,226,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,254,257,289,292,306,308,310,312,318,320,329,334,344,365,366,368,369,370,371,375,388,396,398,402,406,410,413,420,436,441,443,],[-129,-122,-99,-101,-102,-125,-123,-142,-164,-98,186,-127,-121,-124,186,-165,-166,-130,-131,-128,-132,-133,186,-103,186,-134,-100,-153,-146,-154,-161,-152,-143,-157,-159,-145,-149,-158,-160,-147,-148,-156,-144,-155,-151,-150,-109,-125,186,-125,186,-139,-135,186,-110,186,186,-125,186,186,186,186,186,-138,-171,-111,186,186,-136,186,186,186,-125,186,186,-137,186,186,]),'EQEQ':([104,107,111,112,116,117,119,120,121,125,126,130,131,132,160,167,170,171,172,174,175,176,180,201,226,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,254,257,289,292,306,308,310,312,318,320,329,334,344,365,366,368,369,370,371,375,388,396,398,402,406,410,413,420,436,441,443,],[-129,-122,-99,-101,-102,-125,-123,-142,-164,-98,189,-127,-121,-124,189,-165,-166,-130,-131,-128,-132,-133,189,-103,189,-134,-100,-153,-146,-154,-161,-152,189,-157,-159,-145,-149,-158,-160,-147,-148,-156,189,-155,-151,-150,-109,-125,189,-125,189,-139,-135,189,-110,189,189,-125,189,189,189,189,189,-138,-171,-111,189,189,-136,189,189,189,-125,189,189,-137,189,189,]),'FLOAT_LIT':([70,91,105,108,109,114,115,124,127,134,146,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,209,250,264,268,273,280,287,299,305,307,311,313,314,319,326,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,382,384,385,387,390,397,416,421,422,429,430,431,439,],[107,107,107,-169,-168,107,-167,107,-170,107,-275,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-56,107,107,107,107,107,107,107,107,107,107,107,107,-55,107,107,-223,-213,-224,-215,-218,-221,-225,-214,-222,107,-219,-220,-216,-217,107,-225,107,107,107,107,-275,107,107,107,107,107,-275,]),'COMPLEX':([32,34,35,41,46,56,70,85,87,91,95,98,103,105,108,109,110,114,115,124,127,128,134,135,138,146,147,149,151,153,156,173,177,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,209,212,213,214,228,250,259,262,264,268,273,280,287,299,303,305,307,311,313,314,319,326,338,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,382,384,385,387,390,397,416,421,422,429,430,431,439,],[-70,55,-69,55,55,55,55,55,55,55,55,-71,55,55,-169,-168,55,55,-167,55,-170,55,55,55,-72,-275,55,-46,-69,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-56,55,55,-44,55,55,55,55,55,55,55,55,55,55,-45,55,55,55,55,55,-55,55,55,55,-223,-213,-224,-215,-218,-221,-225,-214,-222,55,-219,-220,-216,-217,55,-225,55,55,55,55,-275,55,55,55,55,55,-275,]),'SELECT':([146,208,209,319,326,416,439,],[-275,297,-56,-55,297,-275,-275,]),'RSQUARE':([54,55,58,59,60,61,62,64,65,66,68,69,70,72,75,76,78,79,80,82,101,102,104,107,111,112,116,117,119,120,121,122,125,126,130,131,132,137,166,167,168,169,170,171,172,174,175,176,201,204,205,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,261,306,307,308,312,315,367,368,369,370,371,396,420,436,],[-17,-10,-4,-3,-14,-2,-12,-11,-18,-13,-6,-20,110,-15,-7,-8,-9,-19,-21,-5,-38,-37,-129,-122,-99,-101,-102,-125,-123,-142,-164,179,-98,-28,-127,-121,-124,-16,-126,-165,-29,-24,-166,-130,-131,-128,-132,-133,-103,-26,259,-163,308,-134,-27,-100,-153,-146,-154,-161,-152,-143,-157,-159,-145,-149,-158,-160,-147,-148,-156,-144,-155,-151,-150,-109,-30,-139,-275,-135,-110,-25,396,-162,-138,-171,-111,-136,436,-137,]),'RCURL':([104,107,111,112,116,117,119,120,121,125,130,131,132,136,146,167,170,171,172,174,175,176,201,202,206,207,208,209,210,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,254,255,256,257,258,306,308,311,312,316,319,364,369,370,371,372,373,374,375,376,386,391,393,396,403,404,415,416,426,427,433,436,439,440,445,],[-129,-122,-99,-101,-102,-125,-123,-142,-164,-98,-127,-121,-124,-275,-275,-165,-166,-130,-131,-128,-132,-133,-103,252,261,-32,-54,-56,301,-134,-100,-153,-146,-154,-161,-152,-143,-157,-159,-145,-149,-158,-160,-147,-148,-156,-144,-155,-151,-150,312,-109,-125,-114,-120,-119,-112,-139,-135,371,-110,-31,-55,392,-138,-171,-111,-113,-115,-120,-119,-116,-275,414,-191,-136,-233,425,-192,-275,-234,-275,-193,-137,-275,446,-235,]),'ANDXOR_EQUAL':([104,107,111,112,116,117,119,120,121,125,130,131,132,167,170,171,172,174,175,176,201,218,219,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,289,291,292,306,308,312,329,333,334,344,366,369,370,371,396,436,],[-129,-122,-99,-101,-102,-125,-123,-142,-164,-98,-127,-121,-124,-165,-166,-130,-131,-128,-132,-133,-103,-73,-75,-134,-100,-153,-146,-154,-161,-152,-143,-157,-159,-145,-149,-158,-160,-147,-148,-156,-144,-155,-151,-150,-109,-125,355,-275,-139,-135,-110,-125,355,-275,-275,-74,-138,-171,-111,-136,-137,]),'COLON':([104,107,111,112,116,117,119,120,121,125,130,131,132,160,167,170,171,172,174,175,176,177,201,218,219,224,225,226,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,253,254,256,257,274,289,306,308,312,366,368,369,370,371,394,396,423,424,428,432,436,438,],[-129,-122,-99,-101,-102,-125,-123,-142,-164,-98,-127,-121,-124,-275,-165,-166,-130,-131,-128,-132,-133,-275,-103,-73,-75,307,-163,-162,-134,-100,-153,-146,-154,-161,-152,-143,-157,-159,-145,-149,-158,-160,-147,-148,-156,-144,-155,-151,-150,-109,313,-125,-118,-117,326,-208,-139,-135,-110,-74,397,-138,-171,-111,416,-136,439,-237,-194,-195,-137,-236,]),'DIVIDE_EQUAL':([104,107,111,112,116,117,119,120,121,125,130,131,132,167,170,171,172,174,175,176,201,218,219,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,289,291,292,306,308,312,329,333,334,344,366,369,370,371,396,436,],[-129,-122,-99,-101,-102,-125,-123,-142,-164,-98,-127,-121,-124,-165,-166,-130,-131,-128,-132,-133,-103,-73,-75,-134,-100,-153,-146,-154,-161,-152,-143,-157,-159,-145,-149,-158,-160,-147,-148,-156,-144,-155,-151,-150,-109,-125,360,-275,-139,-135,-110,-125,360,-275,-275,-74,-138,-171,-111,-136,-137,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([86,],[144,]),'SendStmt':([390,],[407,]),'Conversion':([70,91,105,114,124,134,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,250,264,268,273,280,287,299,305,307,311,313,314,326,346,356,382,385,387,390,397,421,422,429,430,431,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'CCX':([364,],[391,]),'ContinueStmt':([208,326,],[263,263,]),'ExpressionRep':([160,292,334,344,413,],[218,218,218,218,218,]),'ExpressionStmt':([208,280,287,326,421,],[265,265,265,265,265,]),'CommClause':([364,391,],[393,415,]),'Statement':([208,326,],[266,381,]),'IfStmt':([208,326,418,],[278,278,434,]),'FallThroughStmt':([208,326,],[267,267,]),'StatementRep':([146,416,439,],[208,208,208,]),'TypeToken':([34,41,46,56,70,85,87,91,95,103,105,110,114,124,128,134,135,147,153,156,173,177,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,212,213,228,250,259,262,264,268,273,280,287,299,305,307,311,313,314,326,338,346,356,382,385,387,390,397,421,422,429,430,431,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'AliasDecl':([23,92,283,],[43,43,43,]),'PackageNameDotOpt':([13,48,],[29,29,]),'TypeName':([34,41,46,56,70,85,87,91,95,103,105,110,114,124,128,134,135,147,153,156,173,177,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,212,213,228,250,259,262,264,268,273,280,287,299,305,307,311,313,314,326,338,346,356,382,385,387,390,397,421,422,429,430,431,],[61,61,61,61,113,61,61,113,61,166,113,61,113,113,61,113,61,61,61,113,113,113,61,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,61,61,61,113,61,61,113,113,113,113,113,113,113,113,113,113,113,113,61,113,113,113,113,113,113,113,113,113,113,113,113,]),'ExprCaseClause':([404,440,],[426,426,]),'ParametersList':([87,],[150,]),'ParameterDecl':([87,213,],[152,304,]),'FunctionName':([20,],[38,]),'LabeledStmt':([208,326,],[272,272,]),'KeyType':([135,],[205,]),'StatementList':([146,416,439,],[210,433,445,]),'TypeAssertion':([121,],[175,]),'ConditionOpt':([385,],[401,]),'ElementType':([110,179,259,],[169,229,315,]),'PointerType':([34,41,46,56,85,87,95,110,128,135,147,153,179,212,213,228,259,262,338,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'VarSpecRep':([40,],[88,]),'VarDecl':([10,208,326,],[22,22,22,]),'Tag':([317,],[378,]),'ConstSpecRep':([33,],[52,]),'Operand':([70,91,105,114,124,134,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,250,264,268,273,280,287,299,305,307,311,313,314,326,346,356,382,385,387,390,397,421,422,429,430,431,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'TypeSpec':([23,92,283,],[45,162,45,]),'Index':([121,],[171,]),'Parameters':([38,85,],[85,139,]),'UnaryOp':([70,91,105,114,124,134,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,250,264,268,273,280,287,299,305,307,311,313,314,326,346,356,382,385,387,390,397,421,422,429,430,431,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'PackageName':([2,13,48,],[6,28,28,]),'SourceFile':([0,],[3,]),'ExpressionListPureOpt':([273,],[323,]),'Label':([208,271,285,293,326,],[274,322,341,341,274,]),'FunctionDecl':([10,],[15,]),'TopLevelDecl':([10,],[16,]),'ExprSwitchStmt':([208,326,],[275,275,]),'IdentifierList':([14,21,52,87,88,206,213,390,],[34,41,34,147,41,262,147,408,]),'TypeLit':([34,41,46,56,85,87,95,110,128,135,147,153,179,212,213,228,259,262,338,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'ImportDeclRep':([5,],[9,]),'GoStmt':([208,326,],[276,276,]),'DeferStmt':([208,326,],[277,277,]),'PackageClause':([0,],[1,]),'ResultOpt':([85,],[141,]),'Selector':([121,],[174,]),'RangeClause':([280,],[327,]),'IncDecStmt':([208,280,287,326,421,],[270,270,270,270,270,]),'Key':([202,311,],[253,253,]),'GotoStmt':([208,326,],[279,279,]),'TopLevelDeclRep':([9,],[10,]),'PrimaryExpr':([70,91,105,114,124,134,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,250,264,268,273,280,287,299,305,307,311,313,314,326,346,356,382,385,387,390,397,421,422,429,430,431,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'CompositeLit':([70,91,105,114,124,134,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,250,264,268,273,280,287,299,305,307,311,313,314,326,346,356,382,385,387,390,397,421,422,429,430,431,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'assign_op':([291,333,],[356,356,]),'Signature':([38,],[86,]),'Block':([86,208,326,332,365,418,],[145,282,282,383,395,435,]),'ExpressionIdentListOpt':([280,],[328,]),'ExprCaseClauseList':([386,427,],[404,440,]),'SwitchStmt':([208,326,],[284,284,]),'VarSpec':([21,88,],[39,155,]),'Result':([85,],[143,]),'Assignment':([208,280,287,326,421,],[269,269,269,269,269,]),'ExpressionListTypeOpt':([173,],[222,]),'QualifiedIdent':([34,41,46,56,70,85,87,91,95,103,105,110,114,124,128,134,135,147,153,156,173,177,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,212,213,228,250,259,262,264,268,273,280,287,299,305,307,311,313,314,326,338,346,356,382,385,387,390,397,421,422,429,430,431,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'Literal':([70,91,105,114,124,134,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,250,264,268,273,280,287,299,305,307,311,313,314,326,346,356,382,385,387,390,397,421,422,429,430,431,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'ImportDecl':([9,],[12,]),'OperandName':([70,91,105,114,124,134,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,250,264,268,273,280,287,299,305,307,311,313,314,326,346,356,382,385,387,390,397,421,422,429,430,431,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'AssignOp':([291,333,],[348,348,]),'LabelOpt':([285,293,],[340,363,]),'FieldDeclRep':([136,],[206,]),'start':([0,],[4,]),'Declaration':([10,208,326,],[17,288,288,]),'Condition':([280,385,],[330,399,]),'StructType':([34,41,46,56,70,85,87,91,95,105,110,114,124,128,134,135,147,153,156,173,177,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,212,213,228,250,259,262,264,268,273,280,287,299,305,307,311,313,314,326,338,346,356,382,385,387,390,397,421,422,429,430,431,],[65,65,65,65,133,65,65,133,65,133,65,133,133,65,133,65,65,65,133,133,133,65,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,65,65,65,133,65,65,133,133,133,133,133,133,133,133,133,133,133,133,65,133,133,133,133,133,133,133,133,133,133,133,133,]),'ConstSpec':([14,52,],[31,99,]),'epsilon':([5,9,13,25,33,34,40,44,48,85,90,136,146,160,173,177,208,273,280,285,287,292,293,307,317,326,334,344,385,386,387,395,413,416,421,427,439,],[8,11,27,47,53,67,89,93,27,142,157,207,209,219,221,225,290,324,331,339,343,219,339,225,377,290,219,219,400,403,225,417,219,209,290,403,209,]),'LiteralValue':([129,202,311,313,314,],[201,256,256,374,374,]),'ExpressionList':([91,134,156,173,208,273,280,287,326,356,390,421,422,],[159,203,217,223,291,325,333,291,291,389,411,291,438,]),'SimpleStmt':([208,280,287,326,421,],[294,336,345,294,437,]),'ImportSpecRep':([25,],[48,]),'RecvStmt':([390,],[412,]),'Expression':([70,91,124,134,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,250,264,268,273,280,287,299,305,307,311,313,314,326,346,356,382,385,387,390,397,421,422,429,430,431,],[126,160,180,160,160,160,226,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,257,292,310,318,320,160,334,344,365,366,368,257,375,375,292,388,160,398,402,406,413,420,292,160,441,443,441,]),'RecvExpr':([429,431,],[442,444,]),'CommCase':([364,391,],[394,394,]),'ImportPath':([29,],[49,]),'ExprSwitchCase':([404,440,],[423,423,]),'ExpressionOpt':([177,287,307,387,],[224,342,367,405,]),'IdentifierRep':([14,21,52,87,88,206,213,390,],[32,32,32,32,32,32,32,32,]),'TypeExprListOpt':([34,],[77,]),'ReturnStmt':([208,326,],[281,281,]),'ConstDecl':([10,208,326,],[18,18,18,]),'ExpressionIdentifier':([280,],[335,]),'Slice':([121,],[172,]),'ArrayType':([34,41,46,56,70,85,87,91,95,105,110,114,124,128,134,135,147,153,156,173,177,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,212,213,228,250,259,262,264,268,273,280,287,299,305,307,311,313,314,326,338,346,356,382,385,387,390,397,421,422,429,430,431,],[54,54,54,54,106,54,54,106,54,106,54,106,106,54,106,54,54,54,106,106,106,54,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,54,54,54,106,54,54,106,106,106,106,106,106,106,106,106,106,106,106,54,106,106,106,106,106,106,106,106,106,106,106,106,]),'ForStmt':([208,326,],[295,295,]),'Arguments':([121,],[176,]),'SelectStmt':([208,326,],[296,296,]),'ElementList':([202,],[251,]),'Function':([38,],[84,]),'ImportSpec':([13,48,],[26,97,]),'Type':([34,41,46,56,85,87,95,110,128,135,147,153,179,212,213,228,259,262,338,],[57,90,94,101,140,148,163,168,200,204,211,215,168,302,148,309,168,317,94,]),'Channel':([390,],[409,]),'TypeSpecRep':([44,],[92,]),'SliceType':([34,41,46,56,70,85,87,91,95,105,110,114,124,128,134,135,147,153,156,173,177,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,212,213,228,250,259,262,264,268,273,280,287,299,305,307,311,313,314,326,338,346,356,382,385,387,390,397,421,422,429,430,431,],[80,80,80,80,118,80,80,118,80,118,80,118,118,80,118,80,80,80,118,118,118,80,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,80,80,80,118,80,80,118,118,118,118,118,118,118,118,118,118,118,118,80,118,118,118,118,118,118,118,118,118,118,118,118,]),'TypeDecl':([10,208,326,],[19,19,19,]),'BaseType':([56,],[102,]),'UnaryExpr':([70,91,105,114,124,134,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,250,264,268,273,280,287,299,305,307,311,313,314,326,346,356,382,385,387,390,397,421,422,429,430,431,],[120,120,167,170,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'Element':([202,311,313,314,],[255,255,373,376,]),'ArrayLength':([70,],[122,]),'MapType':([34,41,46,56,70,85,87,91,95,105,110,114,124,128,134,135,147,153,156,173,177,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,212,213,228,250,259,262,264,268,273,280,287,299,305,307,311,313,314,326,338,346,356,382,385,387,390,397,421,422,429,430,431,],[69,69,69,69,123,69,69,123,69,123,69,123,123,69,123,69,69,69,123,123,123,69,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,69,69,69,123,69,69,123,123,123,123,123,123,123,123,123,123,123,123,69,123,123,123,123,123,123,123,123,123,123,123,123,]),'ForClause':([280,],[337,]),'TypeOpt':([34,],[71,]),'ShortVarDecl':([208,280,287,326,421,],[298,298,298,298,298,]),'ConditionBlockOpt':([280,],[332,]),'TypeDef':([23,92,283,],[42,42,42,]),'LiteralType':([70,91,105,114,124,134,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,250,264,268,273,280,287,299,305,307,311,313,314,326,346,356,382,385,387,390,397,421,422,429,430,431,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'FieldDecl':([206,],[260,]),'BreakStmt':([208,326,],[300,300,]),'KeyedElement':([202,311,],[258,372,]),'TagOpt':([317,],[379,]),'BasicLit':([70,91,105,114,124,134,156,173,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,208,250,264,268,273,280,287,299,305,307,311,313,314,326,346,356,382,385,387,390,397,421,422,429,430,431,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'ExpressionListOpt':([90,],[158,]),'ElseOpt':([395,],[419,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',42),
  ('Type -> TypeName','Type',1,'p_type','parser.py',52),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',53),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','parser.py',61),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',62),
  ('TypeToken -> INT_T','TypeToken',1,'p_type_token','parser.py',67),
  ('TypeToken -> INT','TypeToken',1,'p_type_token','parser.py',68),
  ('TypeToken -> FLOAT','TypeToken',1,'p_type_token','parser.py',69),
  ('TypeToken -> BOOL','TypeToken',1,'p_type_token','parser.py',70),
  ('TypeToken -> COMPLEX','TypeToken',1,'p_type_token','parser.py',71),
  ('TypeToken -> BOOL_T','TypeToken',1,'p_type_token','parser.py',72),
  ('TypeToken -> COMPLEX_T','TypeToken',1,'p_type_token','parser.py',73),
  ('TypeToken -> STRING','TypeToken',1,'p_type_token','parser.py',74),
  ('TypeToken -> FLOAT_T','TypeToken',1,'p_type_token','parser.py',75),
  ('TypeToken -> STRING_T','TypeToken',1,'p_type_token','parser.py',76),
  ('TypeToken -> TYPE IDENTIFIER','TypeToken',2,'p_type_token','parser.py',77),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',85),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',86),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',87),
  ('TypeLit -> MapType','TypeLit',1,'p_type_lit','parser.py',88),
  ('TypeLit -> SliceType','TypeLit',1,'p_type_lit','parser.py',89),
  ('TypeOpt -> Type','TypeOpt',1,'p_type_opt','parser.py',95),
  ('TypeOpt -> epsilon','TypeOpt',1,'p_type_opt','parser.py',96),
  ('SliceType -> LSQUARE RSQUARE ElementType','SliceType',3,'p_slice_type','parser.py',103),
  ('MapType -> MAP LSQUARE KeyType RSQUARE ElementType','MapType',5,'p_map_type','parser.py',125),
  ('KeyType -> Type','KeyType',1,'p_key_type','parser.py',129),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE ElementType','ArrayType',4,'p_array_type','parser.py',138),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser.py',142),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',147),
  ('StructType -> STRUCT LCURL FieldDeclRep RCURL','StructType',4,'p_struct_type','parser.py',156),
  ('FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON','FieldDeclRep',3,'p_field_decl_rep','parser.py',160),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',161),
  ('FieldDecl -> IdentifierList Type TagOpt','FieldDecl',3,'p_field_decl','parser.py',169),
  ('TagOpt -> Tag','TagOpt',1,'p_TagOpt','parser.py',173),
  ('TagOpt -> epsilon','TagOpt',1,'p_TagOpt','parser.py',174),
  ('Tag -> STRING_LIT','Tag',1,'p_Tag','parser.py',179),
  ('PointerType -> MULTIPLY BaseType','PointerType',2,'p_point_type','parser.py',187),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',191),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_sign','parser.py',198),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',205),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',206),
  ('Result -> Parameters','Result',1,'p_result','parser.py',213),
  ('Result -> Type','Result',1,'p_result','parser.py',214),
  ('Parameters -> LPAREN ParametersList RPAREN','Parameters',3,'p_params','parser.py',223),
  ('Parameters -> LPAREN ParametersList COMMA RPAREN','Parameters',4,'p_params','parser.py',224),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_params','parser.py',225),
  ('ParametersList -> ParameterDecl','ParametersList',1,'p_param_list','parser.py',234),
  ('ParametersList -> ParametersList COMMA ParameterDecl','ParametersList',3,'p_param_list','parser.py',235),
  ('ParameterDecl -> DOTS Type','ParameterDecl',2,'p_param_decl','parser.py',245),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_param_decl','parser.py',246),
  ('ParameterDecl -> IdentifierList DOTS Type','ParameterDecl',3,'p_param_decl','parser.py',247),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_param_decl','parser.py',248),
  ('Block -> LCURL StatementList RCURL','Block',3,'p_block','parser.py',271),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',275),
  ('StatementRep -> StatementRep Statement SEMICOLON','StatementRep',3,'p_stat_rep','parser.py',280),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',281),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',292),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',293),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',294),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',298),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',299),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',308),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',309),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON','ConstSpecRep',3,'p_const_spec_rep','parser.py',316),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',317),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',325),
  ('TypeExprListOpt -> TypeOpt EQUALS ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',329),
  ('TypeExprListOpt -> epsilon','TypeExprListOpt',1,'p_type_expr_list','parser.py',330),
  ('IdentifierList -> IDENTIFIER','IdentifierList',1,'p_identifier_list','parser.py',339),
  ('IdentifierList -> IdentifierRep','IdentifierList',1,'p_identifier_list','parser.py',340),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',345),
  ('IdentifierRep -> IDENTIFIER COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',346),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',354),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',361),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',362),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',374),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',375),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON','TypeSpecRep',3,'p_type_spec_rep','parser.py',382),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',383),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',391),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',392),
  ('AliasDecl -> IDENTIFIER EQUALS Type','AliasDecl',3,'p_alias_decl','parser.py',395),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_type_def','parser.py',402),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',409),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',410),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOLON','VarSpecRep',3,'p_var_spec_rep','parser.py',417),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',418),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',426),
  ('VarSpec -> IdentifierList EQUALS ExpressionList','VarSpec',3,'p_var_spec','parser.py',427),
  ('ExpressionListOpt -> EQUALS ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',434),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',435),
  ('ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',447),
  ('FunctionDecl -> FUNC FunctionName Function','FunctionDecl',3,'p_func_decl','parser.py',455),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_func_decl','parser.py',456),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',460),
  ('Function -> Signature FunctionBody','Function',2,'p_func','parser.py',466),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',470),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',479),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',480),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',481),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',490),
  ('Literal -> CompositeLit','Literal',1,'p_literal','parser.py',491),
  ('CompositeLit -> LiteralType LiteralValue','CompositeLit',2,'p_composite_lit','parser.py',499),
  ('LiteralType -> StructType','LiteralType',1,'p_literal_type','parser.py',503),
  ('LiteralType -> ArrayType','LiteralType',1,'p_literal_type','parser.py',504),
  ('LiteralType -> SliceType','LiteralType',1,'p_literal_type','parser.py',505),
  ('LiteralType -> MapType','LiteralType',1,'p_literal_type','parser.py',506),
  ('LiteralType -> TypeName','LiteralType',1,'p_literal_type','parser.py',507),
  ('LiteralValue -> LCURL RCURL','LiteralValue',2,'p_literal_value','parser.py',511),
  ('LiteralValue -> LCURL ElementList RCURL','LiteralValue',3,'p_literal_value','parser.py',512),
  ('LiteralValue -> LCURL ElementList COMMA RCURL','LiteralValue',4,'p_literal_value','parser.py',513),
  ('ElementList -> KeyedElement','ElementList',1,'p_element_list','parser.py',522),
  ('ElementList -> ElementList COMMA KeyedElement','ElementList',3,'p_element_list','parser.py',523),
  ('KeyedElement -> Element','KeyedElement',1,'p_keyed_element','parser.py',538),
  ('KeyedElement -> Key COLON Element','KeyedElement',3,'p_keyed_element','parser.py',539),
  ('KeyedElement -> IDENTIFIER COLON Element','KeyedElement',3,'p_keyed_element','parser.py',540),
  ('Key -> Expression','Key',1,'p_key','parser.py',547),
  ('Key -> LiteralValue','Key',1,'p_key','parser.py',548),
  ('Element -> Expression','Element',1,'p_element','parser.py',552),
  ('Element -> LiteralValue','Element',1,'p_element','parser.py',553),
  ('BasicLit -> INT_LIT','BasicLit',1,'p_basic_lit','parser.py',559),
  ('BasicLit -> FLOAT_LIT','BasicLit',1,'p_basic_lit','parser.py',560),
  ('BasicLit -> IMAGINARY_LIT','BasicLit',1,'p_basic_lit','parser.py',561),
  ('BasicLit -> STRING_LIT','BasicLit',1,'p_basic_lit','parser.py',562),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',567),
  ('QualifiedIdent -> IDENTIFIER DOT TypeName','QualifiedIdent',3,'p_quali_ident','parser.py',575),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',582),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_prim_expr','parser.py',583),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',584),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_prim_expr','parser.py',585),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',586),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser.py',587),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_prim_expr','parser.py',588),
  ('Selector -> DOT IDENTIFIER','Selector',2,'p_selector','parser.py',597),
  ('Index -> LSQUARE Expression RSQUARE','Index',3,'p_index','parser.py',603),
  ('Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE','Slice',5,'p_slice','parser.py',607),
  ('Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE','Slice',7,'p_slice','parser.py',608),
  ('TypeAssertion -> DOT LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser.py',615),
  ('Arguments -> LPAREN ExpressionListTypeOpt RPAREN','Arguments',3,'p_argument','parser.py',619),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',623),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',624),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser.py',635),
  ('Expression -> Expression COMPARE_OR Expression','Expression',3,'p_expr','parser.py',636),
  ('Expression -> Expression COMPARE_AND Expression','Expression',3,'p_expr','parser.py',637),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expr','parser.py',638),
  ('Expression -> Expression NOTEQUALS Expression','Expression',3,'p_expr','parser.py',639),
  ('Expression -> Expression LESSTHAN Expression','Expression',3,'p_expr','parser.py',640),
  ('Expression -> Expression GREATERTHAN Expression','Expression',3,'p_expr','parser.py',641),
  ('Expression -> Expression LESSTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',642),
  ('Expression -> Expression GREATERTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',643),
  ('Expression -> Expression OR Expression','Expression',3,'p_expr','parser.py',644),
  ('Expression -> Expression XOR Expression','Expression',3,'p_expr','parser.py',645),
  ('Expression -> Expression ANDXOR Expression','Expression',3,'p_expr','parser.py',646),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expr','parser.py',647),
  ('Expression -> Expression MODULO Expression','Expression',3,'p_expr','parser.py',648),
  ('Expression -> Expression LSHIFT Expression','Expression',3,'p_expr','parser.py',649),
  ('Expression -> Expression RSHIFT Expression','Expression',3,'p_expr','parser.py',650),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expr','parser.py',651),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expr','parser.py',652),
  ('Expression -> Expression MULTIPLY Expression','Expression',3,'p_expr','parser.py',653),
  ('Expression -> Expression AND Expression','Expression',3,'p_expr','parser.py',654),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',666),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',667),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',672),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',673),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',674),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',686),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',687),
  ('UnaryOp -> MULTIPLY','UnaryOp',1,'p_unary_op','parser.py',688),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser.py',689),
  ('Conversion -> TYPECAST Type LPAREN Expression RPAREN','Conversion',5,'p_conversion','parser.py',705),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',716),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',717),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',718),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',719),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',720),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',721),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',722),
  ('Statement -> Block','Statement',1,'p_statement','parser.py',723),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',724),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',725),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',726),
  ('Statement -> DeferStmt','Statement',1,'p_statement','parser.py',727),
  ('Statement -> SelectStmt','Statement',1,'p_statement','parser.py',728),
  ('Statement -> FallThroughStmt','Statement',1,'p_statement','parser.py',729),
  ('Statement -> GoStmt','Statement',1,'p_statement','parser.py',730),
  ('FallThroughStmt -> FALLTHROUGH','FallThroughStmt',1,'p_fallthrough_stmt','parser.py',736),
  ('GoStmt -> GO Expression','GoStmt',2,'p_go_stmt','parser.py',740),
  ('SelectStmt -> SELECT LCURL CCX RCURL','SelectStmt',4,'p_select_stmt','parser.py',745),
  ('SelectStmt -> SELECT LCURL RCURL','SelectStmt',3,'p_select_stmt','parser.py',746),
  ('CCX -> CommClause','CCX',1,'p_ccx','parser.py',753),
  ('CCX -> CCX CommClause','CCX',2,'p_ccx','parser.py',754),
  ('CommClause -> CommCase COLON StatementList','CommClause',3,'p_commclause','parser.py',761),
  ('CommCase -> CASE SendStmt DEFAULT','CommCase',3,'p_commcase','parser.py',765),
  ('CommCase -> CASE RecvStmt DEFAULT','CommCase',3,'p_commcase','parser.py',766),
  ('SendStmt -> Channel LEFT_ARROW Expression','SendStmt',3,'p_send_stmt','parser.py',770),
  ('Channel -> Expression','Channel',1,'p_channel','parser.py',774),
  ('RecvStmt -> ExpressionList EQUALS RecvExpr','RecvStmt',3,'p_recv_stmt','parser.py',778),
  ('RecvStmt -> IdentifierList SHORT_ASSIGNMENT RecvExpr','RecvStmt',3,'p_recv_stmt','parser.py',779),
  ('RecvExpr -> Expression','RecvExpr',1,'p_recv_expr','parser.py',786),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_defer_stmt','parser.py',792),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',797),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',798),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',799),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',800),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',801),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',808),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',812),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',817),
  ('IncDecStmt -> Expression INCREMENT','IncDecStmt',2,'p_inc_dec','parser.py',823),
  ('IncDecStmt -> Expression DECREMENT','IncDecStmt',2,'p_inc_dec','parser.py',824),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',832),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',836),
  ('AssignOp -> PLUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',842),
  ('AssignOp -> MINUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',843),
  ('AssignOp -> TIMESEQUAL','AssignOp',1,'p_AssignOp','parser.py',844),
  ('AssignOp -> DIVIDE_EQUAL','AssignOp',1,'p_AssignOp','parser.py',845),
  ('AssignOp -> MODEQUAL','AssignOp',1,'p_AssignOp','parser.py',846),
  ('AssignOp -> ANDEQUAL','AssignOp',1,'p_AssignOp','parser.py',847),
  ('AssignOp -> OREQUAL','AssignOp',1,'p_AssignOp','parser.py',848),
  ('AssignOp -> XOREQUAL','AssignOp',1,'p_AssignOp','parser.py',849),
  ('AssignOp -> ANDXOR_EQUAL','AssignOp',1,'p_AssignOp','parser.py',850),
  ('AssignOp -> LSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',851),
  ('AssignOp -> RSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',852),
  ('AssignOp -> EQUALS','AssignOp',1,'p_AssignOp','parser.py',853),
  ('IfStmt -> IF Expression Block ElseOpt','IfStmt',4,'p_if_statement','parser.py',860),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',872),
  ('ElseOpt -> ELSE Block','ElseOpt',2,'p_else_opt','parser.py',873),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',874),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',887),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionOpt LCURL ExprCaseClauseList RCURL','ExprSwitchStmt',7,'p_ExprSwitchStmt','parser.py',893),
  ('ExprSwitchStmt -> SWITCH ExpressionOpt LCURL ExprCaseClauseList RCURL','ExprSwitchStmt',5,'p_ExprSwitchStmt','parser.py',894),
  ('ExprCaseClauseList -> epsilon','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',902),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',903),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',911),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',916),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',917),
  ('ForStmt -> FOR ConditionBlockOpt Block','ForStmt',3,'p_for','parser.py',931),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',935),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',936),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',937),
  ('ConditionBlockOpt -> RangeClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',938),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',943),
  ('ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt','ForClause',5,'p_forclause','parser.py',947),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',953),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',954),
  ('RangeClause -> ExpressionIdentListOpt RANGE Expression','RangeClause',3,'p_rageclause','parser.py',960),
  ('ExpressionIdentListOpt -> epsilon','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',964),
  ('ExpressionIdentListOpt -> ExpressionIdentifier','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',965),
  ('ExpressionIdentifier -> ExpressionList EQUALS','ExpressionIdentifier',2,'p_expressionidentifier','parser.py',970),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',977),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',981),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',982),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',987),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',991),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',995),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',996),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',1001),
  ('SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep','SourceFile',4,'p_source_file','parser.py',1008),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',1012),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON','ImportDeclRep',3,'p_import_decl_rep','parser.py',1013),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',1022),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',1023),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',1035),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',1040),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',1048),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',1049),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON','ImportSpecRep',3,'p_import_spec_rep','parser.py',1056),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',1057),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',1065),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1072),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1073),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1074),
  ('ImportPath -> STRING_LIT','ImportPath',1,'p_import_path','parser.py',1084),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',1091),
]
