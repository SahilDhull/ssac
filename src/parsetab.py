
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDENTIFIERrightEQUALSNOTleftINT_LITleftFLOAT_LITleftSTRING_LITleftCOMPARE_ORleftCOMPARE_ANDleftEQEQNOTEQUALSleftORleftXORleftANDANDXORleftLESSTHANGREATERTHANLESSTHAN_EQUALGREATERTHAN_EQUALleftPLUSMINUSleftLSHIFTRSHIFTleftMULTIPLYDIVIDEMODULOleftLPARENRPARENAND ANDEQUAL ANDXOR ANDXOR_EQUAL BOOL BOOL_LIT BREAK CASE COLON COMMA COMPARE_AND COMPARE_OR CONST CONTINUE DECREMENT DEFAULT DEFER DIVIDE DIVIDE_EQUAL DOT ELSE EQEQ EQUALS FALLTHROUGH FLOAT FLOAT_LIT FOR FUNC GO GOTO GREATERTHAN GREATERTHAN_EQUAL IDENTIFIER IF IMAGINARY_LIT IMPORT INCREMENT INT INT_LIT LCURL LESSTHAN LESSTHAN_EQUAL LPAREN LSHIFT LSHIFT_EQUAL LSQUARE MALLOC MAP MINUS MINUSEQUAL MODEQUAL MODULO MULTIPLY NOT NOTEQUALS NULL OR OREQUAL PACKAGE PLUS PLUSEQUAL PRINT RCURL RETURN RPAREN RSHIFT RSHIFT_EQUAL RSQUARE SCAN SEMICOLON SHORT_ASSIGNMENT STRING STRING_LIT STRUCT SWITCH TIMESEQUAL TYPE TYPECAST VAR XOR XOREQUALstart : SourceFileType : TypeName\n\t\t\t\t\t\t| TypeLitTypeName : TypeToken\n\t\t\t\t\t\t\t\t| QualifiedIdentTypeToken : INT\n\t\t\t\t\t\t\t\t | FLOAT\n\t\t\t\t\t\t\t\t | BOOL\n\t\t\t\t\t\t\t\t | STRING\n\t\t\t\t\t\t\t\t | TYPE IDENTIFIERTypeLit : ArrayType\n\t\t\t\t\t\t\t | ST StructType\n\t\t\t\t\t\t\t | PointerType\n\t\t\t\t\t\t\t | MapType\n\t\t\t\t\t\t\t | SliceTypeST : SliceType : LSQUARE RSQUARE ElementTypeMapType : MAP LSQUARE KeyType RSQUARE ElementType KeyType : TypeArrayType : LSQUARE ArrayLength RSQUARE ElementType ArrayLength : I INT_LIT  ElementType : Type StructType : FuncScope STRUCT LCURL FieldDeclRep RCURL EndScopeFuncScope :  FieldDeclRep : FieldDeclRep FieldDecl Semi\n\t\t\t\t\t\t\t\t\t| epsilon  FieldDecl : IdentifierList TypePointerType : MULTIPLY BaseTypeBaseType : TypeSignature : Parameters ResultOptResultOpt : Result\n\t\t\t\t\t\t\t\t | epsilonResult : Parameters\n\t\t\t\t\t\t\t| TypeParameters : LPAREN ParametersList RPAREN\n\t\t\t\t\t\t\t\t\t| LPAREN RPARENParametersList : ParameterDecl\n\t\t\t\t\t\t\t\t\t\t\t| ParametersList COMMA ParameterDeclParameterDecl : IdentifierList Type\n\t\t\t\t\t\t\t\t\t\t | TypeBlock : LCURL StatementList RCURLStatementList : StatementRepStatementRep : StatementRep Statement Semi\n\t\t\t\t\t\t\t\t\t\t| epsilonDeclaration : ConstDecl\n\t\t\t\t\t\t\t\t | TypeDecl\n\t\t\t\t\t\t\t\t | VarDeclTopLevelDecl : Declaration\n\t\t\t\t\t\t\t\t\t| FunctionDeclConstDecl : CONST ConstSpec\n\t\t\t\t\t\t\t\t | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec Semi\n\t\t\t\t\t\t\t\t\t\t| epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : Type EQUALS ExpressionListIdentifierList : IDENTIFIER \n\t\t\t\t\t\t\t\t\t\t\t| IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n\t\t\t\t\t\t\t\t\t\t | IDENTIFIER COMMA IDENTIFIERExpressionList : Expression ExpressionRep\n\t\t\t\t\t\t\t\t\t\t\t\t|\tNULLExpressionRep : ExpressionRep COMMA Expression\n\t\t\t\t\t\t\t\t\t\t | epsilonTypeDecl : TYPE TypeSpec\n\t\t\t\t\t\t\t\t| TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec Semi\n\t\t\t\t\t\t\t\t\t | epsilonTypeSpec : AliasDecl\n\t\t\t\t\t\t\t\t| TypeDefAliasDecl : IDENTIFIER EQUALS TypeTypeDef : IDENTIFIER TypeVarDecl : VAR VarSpec\n\t\t\t\t\t\t\t | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec Semi\n\t\t\t\t\t\t\t\t\t| epsilonVarSpec : IdentifierList Type ExpressionListOptExpressionListOpt : EQUALS ExpressionList\n\t\t\t\t\t\t\t\t\t\t\t\t | epsilon\n\t\t\t\t\t\t\t\t\t\t\t\t | EQUALS MALLOC LPAREN I INT_LIT RPAREN ShortVarDecl : IDENTIFIER SHORT_ASSIGNMENT Expression FunctionDecl : FUNC FunctionName CreateScope Function EndScope\n\t\t\t\t\t\t\t\t\t| FUNC FunctionName CreateScope Signature EndScopeCreateScope : EndScope : FunctionName : IDENTIFIERFunction : Signature RetTypeSet FunctionBodyRetTypeSet : FunctionBody : BlockOperand : Literal\n\t\t\t\t\t\t\t | OperandName\n\t\t\t\t\t\t\t | LPAREN Expression RPARENLiteral : BasicLitBasicLit : I INT_LIT\n              | F FLOAT_LIT\n              | C IMAGINARY_LIT\n              | B BOOL_LIT\n              | S STRING_LITB : I : F : C : S : OperandName : IDENTIFIERQualifiedIdent : IDENTIFIER DOT TypeNamePrimaryExpr : Operand\n                 | PrimaryExpr DOT IDENTIFIER\n                 | Conversion\n                 | PrimaryExpr LSQUARE Expression RSQUARE\n                 | PrimaryExpr Slice\n                 | PrimaryExpr TypeAssertion\n                 | PrimaryExpr LPAREN ExpressionListTypeOpt RPARENSlice : LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE\n\t\t\t\t\t\t | LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARETypeAssertion : DOT LPAREN Type RPARENExpressionListTypeOpt : ExpressionList\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t | epsilonExpression : UnaryExpr\n\t\t\t\t\t\t\t\t\t| NULL\n\t\t\t\t\t\t\t\t\t| Expression COMPARE_OR Expression\n\t\t\t\t\t\t\t\t\t| Expression COMPARE_AND Expression\n\t\t\t\t\t\t\t\t\t| Expression EQEQ Expression\n\t\t\t\t\t\t\t\t\t| Expression NOTEQUALS Expression\n\t\t\t\t\t\t\t\t\t| Expression LESSTHAN Expression\n\t\t\t\t\t\t\t\t\t| Expression GREATERTHAN Expression\n\t\t\t\t\t\t\t\t\t| Expression LESSTHAN_EQUAL Expression\n\t\t\t\t\t\t\t\t\t| Expression GREATERTHAN_EQUAL Expression\n\t\t\t\t\t\t\t\t\t| Expression OR Expression\n\t\t\t\t\t\t\t\t\t| Expression XOR Expression\n\t\t\t\t\t\t\t\t\t| Expression ANDXOR Expression\n\t\t\t\t\t\t\t\t\t| Expression DIVIDE Expression\n\t\t\t\t\t\t\t\t\t| Expression MODULO Expression\n\t\t\t\t\t\t\t\t\t| Expression LSHIFT Expression\n\t\t\t\t\t\t\t\t\t| Expression RSHIFT Expression\n\t\t\t\t\t\t\t\t\t| Expression PLUS Expression\n\t\t\t\t\t\t\t\t\t| Expression MINUS Expression\n\t\t\t\t\t\t\t\t\t| Expression MULTIPLY Expression\n\t\t\t\t\t\t\t\t\t| Expression AND ExpressionExpressionOpt : Expression\n\t\t\t\t\t\t\t\t\t\t | epsilonUnaryExpr : PrimaryExpr\n\t\t\t\t\t\t\t\t | UnaryOp UnaryExpr\n\t\t\t\t\t\t\t\t | NOT UnaryExprUnaryOp : PLUS\n\t\t\t\t\t\t\t | MINUS\n\t\t\t\t\t\t\t | MULTIPLY\n\t\t\t\t\t\t\t | AND Conversion : TYPECAST Type LPAREN Expression RPARENStatement : Declaration\n\t\t\t\t\t\t\t | LabeledStmt\n\t\t\t\t\t\t\t | SimpleStmt\n\t\t\t\t\t\t\t | ReturnStmt\n\t\t\t\t\t\t\t | BreakStmt\n\t\t\t\t\t\t\t | ContinueStmt\n\t\t\t\t\t\t\t | GotoStmt\n\t\t\t\t\t\t\t | CreateScope IFSYM Block EndScope_1\n\t\t\t\t\t\t\t | IfStmt\n\t\t\t\t\t\t\t | SwitchStmt\n\t\t\t\t\t\t\t | ForStmt\n\t\t\t\t\t\t\t | DeferStmt\n\t\t\t\t\t\t\t | FallThroughStmt\n\t\t\t\t\t\t\t | GoStmt\n\t\t\t\t\t\t\t | PrintStmt\n\t\t\t\t\t\t\t | ScanStmtEndScope_1 : PrintStmt : PRINT ExpressionListScanStmt : SCAN ExpressionFallThroughStmt : FALLTHROUGHGoStmt : GO ExpressionDeferStmt : DEFER Expression SimpleStmt : epsilon\n\t\t\t\t\t\t\t\t | ExpressionStmt\n\t\t\t\t\t\t\t\t | IncDecStmt\n\t\t\t\t\t\t\t\t | Assignment\n\t\t\t\t\t\t\t\t | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : Expression INCREMENT\n\t\t\t\t\t\t\t\t | Expression DECREMENT  Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOp AssignOp : PLUSEQUAL\n\t\t\t\t\t\t\t | MINUSEQUAL\n\t\t\t\t\t\t\t | TIMESEQUAL\n\t\t\t\t\t\t\t | DIVIDE_EQUAL\n\t\t\t\t\t\t\t | MODEQUAL\n\t\t\t\t\t\t\t | ANDEQUAL\n\t\t\t\t\t\t\t | OREQUAL\n\t\t\t\t\t\t\t | XOREQUAL\n\t\t\t\t\t\t\t | ANDXOR_EQUAL\n\t\t\t\t\t\t\t | LSHIFT_EQUAL\n\t\t\t\t\t\t\t | RSHIFT_EQUAL\n\t\t\t\t\t\t\t | EQUALS  IfStmt : IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt IFSYM :  ElseOpt : ELSE IfStmt\n\t\t\t\t\t\t\t| ELSE CreateScope IFSYM Block EndScope_1\n\t\t\t\t\t\t\t| epsilon  SwitchStmt : ExprSwitchStmtExprSwitchStmt : SWITCH Expression CCreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1StartSwitch : ExprCaseClauseList : epsilon\n\t\t\t\t\t\t\t\t | ExprCaseClauseList ExprCaseClause\n\t\tExprCaseClause : ExprSwitchCase COLON StatementList ExprSwitchCase : CASE ExpressionList\n\t\t\t\t\t\t\t\t | DEFAULT \n\t\tForStmt : FOR CCreateScope ConditionBlockOpt Block EndScope_1CCreateScope : ConditionBlockOpt : epsilon\n\t\t\t\t\t\t | Condition\n\t\t\t\t\t\t | ForClauseCondition : Expression ForClause : SimpleStmt Semi ConditionOpt Semi SimpleStmtConditionOpt : epsilon\n\t\t\t\t\t| Condition ReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n\t\t\t\t\t\t | epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n\t\t\t\t| epsilon GotoStmt : GOTO Label SourceFile : PackageClause Semi ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n\t\t\t\t\t | ImportDeclRep ImportDecl SemiTopLevelDeclRep : TopLevelDeclRep TopLevelDecl Semi\n\t\t\t\t\t\t\t\t\t\t | epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n\t\t\t\t\t| IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec Semi\n\t\t\t\t\t\t| epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n\t\t\t\t\t\t\t\t\t\t\t\t| PackageName\n\t\t\t\t\t\t\t\t\t\t\t\t| epsilon ImportPath : STRING_LIT Semi : SEMICOLONepsilon : '
    
_lr_action_items = {'LSQUARE':([33,35,36,42,47,56,66,83,86,93,96,100,102,104,116,120,121,124,130,133,135,138,143,155,157,159,167,168,169,170,171,173,176,202,208,209,217,218,219,249,251,257,285,302,303,344,348,365,],[-57,65,-56,65,65,65,96,65,-58,65,65,-59,65,65,-107,-90,-92,-103,174,-105,-89,65,65,65,-36,-56,-95,-96,-94,-93,-109,-110,-97,65,65,-35,65,-106,-91,-111,-108,65,-103,-114,-147,-112,-103,-113,]),'ANDXOR':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,179,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,179,179,-106,-91,-129,179,-133,179,179,-123,-132,-136,-131,-135,-126,-134,179,-130,-124,-137,-125,179,179,-111,-108,179,179,-103,179,-118,179,-114,-147,179,179,179,179,179,-112,-103,179,179,179,-113,179,]),'DIVIDE':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,193,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,193,193,-106,-91,193,193,193,193,193,193,193,-136,-131,193,193,193,193,-130,193,193,193,193,193,-111,-108,193,193,-103,193,-118,193,-114,-147,193,193,193,193,193,-112,-103,193,193,193,-113,193,]),'RETURN':([5,206,244,245,308,315,387,],[-240,-241,271,-44,-43,271,-241,]),'LPAREN':([5,14,15,22,24,38,39,55,57,58,60,62,63,64,67,68,71,72,74,76,89,90,91,97,99,102,107,115,116,117,119,120,121,122,123,124,130,133,134,135,137,139,140,141,157,162,167,168,169,170,171,172,173,174,175,176,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,206,209,218,219,222,240,241,244,245,249,250,251,256,259,265,271,274,278,283,285,290,296,302,303,305,308,315,317,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,344,345,348,360,365,373,378,387,],[-240,26,34,41,45,-85,-83,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,104,-29,-28,134,-12,-10,104,134,134,-107,-145,-144,-90,-92,134,-143,-103,172,-105,134,-89,-146,-104,-22,-17,-36,210,-95,-96,-94,-93,-109,134,-110,134,217,-97,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,240,-20,-241,-35,-106,-91,134,134,-18,134,-44,-111,134,-108,-84,134,134,134,134,-208,134,-103,134,134,-114,-147,-23,-43,134,134,134,-191,-181,-192,-183,-186,-189,-193,-182,-190,134,-187,-188,-184,-185,-112,134,-103,134,-113,134,134,-241,]),'SCAN':([5,206,244,245,308,315,387,],[-240,-241,290,-44,-43,290,-241,]),'DEFAULT':([5,244,245,308,362,371,374,375,382,387,391,],[-240,-42,-44,-43,-201,-241,-202,380,-203,-241,-204,]),'MODEQUAL':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,181,194,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-62,-103,327,-241,-61,-114,-147,-112,-103,-241,-113,]),'XOREQUAL':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,181,194,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-62,-103,328,-241,-61,-114,-147,-112,-103,-241,-113,]),'PRINT':([5,206,244,245,308,315,387,],[-240,-241,274,-44,-43,274,-241,]),'LESSTHAN':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,185,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,185,185,-106,-91,185,185,-133,185,185,-123,-132,-136,-131,-135,-126,-134,185,-130,-124,185,-125,185,185,-111,-108,185,185,-103,185,-118,185,-114,-147,185,185,185,185,185,-112,-103,185,185,185,-113,185,]),'COLON':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,174,176,177,181,194,214,215,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,272,285,301,302,303,344,365,379,380,386,],[-107,-61,-90,-92,-103,-117,-140,-105,-89,-241,-141,-142,-95,-96,-94,-93,-109,-110,-241,-97,-118,-60,-63,250,-139,-138,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-62,315,-176,345,-114,-147,-112,-113,387,-206,-205,]),'NOTEQUALS':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,180,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,180,180,-106,-91,-129,-122,-133,180,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,180,-127,-111,-108,180,180,-103,180,-118,180,-114,-147,180,180,180,180,180,-112,-103,180,180,180,-113,180,]),'LSHIFT':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,186,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,186,186,-106,-91,186,186,-133,186,186,186,-132,-136,-131,186,186,186,186,-130,186,186,186,186,186,-111,-108,186,186,-103,186,-118,186,-114,-147,186,186,186,186,186,-112,-103,186,186,186,-113,186,]),'MULTIPLY':([5,33,35,36,42,47,56,83,86,91,93,96,100,102,104,107,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,137,138,143,155,157,159,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,202,206,208,209,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,249,250,251,253,254,257,259,265,271,274,278,283,285,288,290,293,296,301,302,303,307,308,309,315,317,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,340,342,344,345,348,353,355,359,360,365,369,373,378,387,],[-240,-57,56,-56,56,56,56,56,-58,117,56,56,-59,56,56,117,117,-107,-145,-118,-144,-90,-92,117,-143,-103,-117,-140,-105,117,-89,187,-146,56,56,56,-36,-56,-141,-142,-95,-96,-94,-93,-109,117,-110,117,-97,-118,187,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,56,-241,56,-35,187,56,-106,-91,187,187,117,187,187,187,187,187,-136,-131,187,187,187,187,-130,187,187,187,187,187,117,117,-44,-111,117,-108,187,187,56,117,117,117,117,-208,117,-103,187,117,-118,117,187,-114,-147,187,-43,187,117,117,187,117,-191,-181,-192,-183,-186,-189,-193,-182,-190,117,-187,-188,-184,-185,187,187,-112,117,-103,187,187,187,117,-113,187,117,117,-241,]),'CONST':([5,6,9,10,11,12,25,37,206,244,245,308,315,387,],[-240,-241,-225,-241,15,-228,-226,-227,-241,15,-44,-43,15,-241,]),'NULL':([5,91,107,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,206,222,240,244,245,250,259,265,271,274,278,283,290,296,308,315,317,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,345,360,373,378,387,],[-240,118,118,177,118,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,-241,177,177,293,-44,177,177,177,118,118,-208,177,177,177,-43,293,293,177,-191,-181,-192,-183,-186,-189,-193,-182,-190,118,-187,-188,-184,-185,177,177,293,118,-241,]),'MINUS':([5,91,107,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,137,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,206,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,249,250,251,253,254,259,265,271,274,278,283,285,288,290,293,296,301,302,303,307,308,309,315,317,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,340,342,344,345,348,353,355,359,360,365,369,373,378,387,],[-240,119,119,119,-107,-145,-118,-144,-90,-92,119,-143,-103,-117,-140,-105,119,-89,189,-146,-141,-142,-95,-96,-94,-93,-109,119,-110,119,-97,-118,189,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-241,189,-106,-91,189,189,119,-133,189,189,189,-132,-136,-131,-135,189,-134,189,-130,189,189,189,189,189,119,119,-44,-111,119,-108,189,189,119,119,119,119,-208,119,-103,189,119,-118,119,189,-114,-147,189,-43,189,119,119,189,119,-191,-181,-192,-183,-186,-189,-193,-182,-190,119,-187,-188,-184,-185,189,189,-112,119,-103,189,189,189,119,-113,189,119,119,-241,]),'DOT':([5,14,26,48,49,61,113,116,120,121,124,130,133,135,159,167,168,169,170,171,173,176,218,219,249,251,285,302,303,344,348,365,],[-240,31,-241,-234,31,92,-233,-107,-90,-92,-103,175,-105,-89,92,-95,-96,-94,-93,-109,-110,-97,-106,-91,-111,-108,-103,-114,-147,-112,-103,-113,]),'LCURL':([5,55,57,58,60,62,63,64,67,68,71,72,74,89,90,97,99,102,103,116,118,120,121,124,129,130,133,135,136,139,140,141,146,148,149,150,151,152,154,157,165,166,167,168,169,170,171,173,176,177,181,194,201,206,209,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,244,245,249,251,253,256,260,266,267,278,286,288,293,294,295,302,303,305,308,315,317,321,337,338,341,342,344,348,349,350,351,352,353,354,355,356,358,364,365,373,377,384,387,389,392,],[-240,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,-29,-28,-12,-10,-241,-87,-107,-61,-90,-92,-103,-117,-140,-105,-89,-241,-104,-22,-17,203,-33,-34,-30,-32,-31,206,-36,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-20,-241,-35,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-18,-83,-44,-111,-108,-62,-84,-171,-173,-172,-208,-170,-177,-118,-195,-174,-114,-147,-23,-43,-83,-241,-208,-178,-179,206,-83,-112,-103,-210,-209,206,-211,-212,362,-80,-180,-195,206,-113,-241,-213,-83,-241,-195,206,]),'CASE':([5,244,245,308,362,371,374,375,382,387,391,],[-240,-42,-44,-43,-201,-241,-202,378,-203,-241,-204,]),'DEFER':([5,206,244,245,308,315,387,],[-240,-241,265,-44,-43,265,-241,]),'RPAREN':([5,26,34,41,45,48,49,53,54,55,57,58,60,62,63,64,67,68,71,72,74,77,78,80,81,89,90,97,99,104,113,114,116,118,120,121,124,129,130,133,135,136,139,140,141,156,158,160,161,164,165,166,167,168,169,170,171,172,173,176,177,178,181,194,201,207,211,212,213,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,247,249,251,252,253,254,256,299,302,303,305,344,365,],[-240,-241,-241,-241,-241,-234,84,88,-53,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,105,-75,110,-67,-29,-28,-12,-10,157,-233,-52,-107,-61,-90,-92,-103,-117,-140,-105,-89,-241,-104,-22,-17,-40,209,-37,-74,-66,-141,-142,-95,-96,-94,-93,-109,-241,-110,-97,-118,219,-60,-63,-20,-39,-116,249,-115,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-18,-38,-111,-108,302,-62,303,-84,343,-114,-147,-23,-112,-113,]),'SEMICOLON':([1,5,7,8,13,16,17,18,19,20,23,27,32,40,43,44,46,50,51,55,57,58,60,62,63,64,67,68,70,71,72,74,79,82,84,85,87,88,89,90,97,99,101,102,103,105,106,108,109,110,111,112,116,118,120,121,124,129,130,132,133,135,136,139,140,141,147,148,149,150,151,152,153,157,163,165,166,167,168,169,170,171,173,176,177,181,194,201,204,205,206,209,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,244,245,249,251,253,255,256,258,260,261,262,263,264,266,267,269,270,271,273,275,276,277,278,279,280,281,282,284,285,286,288,289,291,292,293,295,297,298,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,337,338,339,340,343,344,346,347,348,350,353,355,356,357,360,361,363,365,366,367,368,369,370,372,376,381,383,385,387,388,390,393,394,],[5,-240,-229,-230,5,-49,5,-48,-45,-46,-47,-231,-50,-72,-69,-68,-64,-235,-239,-11,-3,-4,-2,-15,-9,-14,-6,-7,-54,-8,-13,-5,-241,-71,-232,5,5,-51,-29,-28,-12,-10,-84,-241,-84,-73,5,-78,-76,-65,5,-70,-107,-61,-90,-92,-103,-117,-140,-55,-105,-89,-241,-104,-22,-17,-81,-33,-34,-30,-32,-31,-82,-36,-77,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-20,-86,-88,-241,-35,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-18,-241,-44,-111,-108,-62,5,-84,-153,-171,-163,5,-156,-160,-173,-172,-149,-162,-241,-199,-161,-159,-154,-208,-151,-157,-241,-167,-148,-103,-170,-177,-241,-150,-158,-118,-174,-152,-41,-114,-147,-23,-27,-168,-43,-169,-176,-223,-216,-218,-217,-241,-165,-241,-222,-220,-221,-178,-179,-219,-166,-79,-112,-175,5,-103,-170,-177,-80,-180,-164,-241,-164,-155,-113,-215,-214,5,-212,-207,-164,-241,-164,-198,-194,-241,-200,-196,-164,-197,]),'FALLTHROUGH':([5,206,244,245,308,315,387,],[-240,-241,282,-44,-43,282,-241,]),'STRUCT':([33,35,36,42,47,56,69,83,86,93,96,98,100,102,104,138,143,155,157,159,202,208,209,217,257,],[-57,-16,-56,-16,-16,-16,-24,-16,-58,-16,-16,146,-59,-16,-16,-16,-16,-16,-36,-56,-16,-16,-35,-16,-16,]),'GREATERTHAN_EQUAL':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,190,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,190,190,-106,-91,190,190,-133,190,190,-123,-132,-136,-131,-135,-126,-134,190,-130,-124,190,-125,190,190,-111,-108,190,190,-103,190,-118,190,-114,-147,190,190,190,190,190,-112,-103,190,190,190,-113,190,]),'RCURL':([5,203,206,242,243,244,245,246,304,308,362,371,374,375,382,387,391,],[-240,-241,-241,256,-26,-42,-44,298,-25,-43,-201,-241,-202,381,-203,-241,-204,]),'RSHIFT_EQUAL':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,181,194,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-62,-103,325,-241,-61,-114,-147,-112,-103,-241,-113,]),'EQEQ':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,184,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,184,184,-106,-91,-129,-122,-133,184,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,184,-127,-111,-108,184,184,-103,184,-118,184,-114,-147,184,184,184,184,184,-112,-103,184,184,184,-113,184,]),'SWITCH':([5,206,244,245,308,315,387,],[-240,-241,283,-44,-43,283,-241,]),'ANDXOR_EQUAL':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,181,194,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-62,-103,331,-241,-61,-114,-147,-112,-103,-241,-113,]),'PLUS':([5,91,107,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,137,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,206,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,249,250,251,253,254,259,265,271,274,278,283,285,288,290,293,296,301,302,303,307,308,309,315,317,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,340,342,344,345,348,353,355,359,360,365,369,373,378,387,],[-240,123,123,123,-107,-145,-118,-144,-90,-92,123,-143,-103,-117,-140,-105,123,-89,191,-146,-141,-142,-95,-96,-94,-93,-109,123,-110,123,-97,-118,191,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-241,191,-106,-91,191,191,123,-133,191,191,191,-132,-136,-131,-135,191,-134,191,-130,191,191,191,191,191,123,123,-44,-111,123,-108,191,191,123,123,123,123,-208,123,-103,191,123,-118,123,191,-114,-147,191,-43,191,123,123,191,123,-191,-181,-192,-183,-186,-189,-193,-182,-190,123,-187,-188,-184,-185,191,191,-112,123,-103,191,191,191,123,-113,191,123,123,-241,]),'DIVIDE_EQUAL':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,181,194,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-62,-103,336,-241,-61,-114,-147,-112,-103,-241,-113,]),'INCREMENT':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,285,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-103,337,-118,-114,-147,-112,-103,337,-113,]),'IMPORT':([5,6,9,10,25,],[-240,-241,-225,14,-226,]),'STRING':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,138,143,155,157,159,202,208,209,217,257,],[-57,63,-56,63,63,63,63,-58,63,63,63,-59,63,63,63,63,63,-36,-56,63,63,-35,63,63,]),'IDENTIFIER':([2,5,14,15,21,22,24,26,33,34,35,36,41,42,45,47,48,49,52,53,54,56,73,75,77,78,80,81,83,86,91,92,93,96,100,102,104,107,113,114,115,117,119,122,123,134,137,138,143,155,157,159,161,164,172,174,175,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,202,203,206,208,209,217,222,240,242,243,244,245,250,257,259,265,268,271,274,278,281,283,289,290,296,304,308,315,317,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,345,360,373,378,387,],[8,-240,8,36,38,36,47,-241,-57,-241,61,-56,-241,61,-241,61,-234,8,86,36,-53,61,99,100,36,-75,47,-67,61,-58,124,61,61,61,-59,61,159,124,-233,-52,124,-145,-144,124,-143,124,-146,61,61,61,-36,-56,-74,-66,124,124,218,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,61,-241,-241,159,-35,61,124,124,36,-26,285,-44,124,61,124,124,310,124,124,-208,310,124,310,124,124,-25,-43,285,348,124,-191,-181,-192,-183,-186,-189,-193,-182,-190,124,-187,-188,-184,-185,124,124,348,124,-241,]),'SHORT_ASSIGNMENT':([285,348,],[322,322,]),'$end':([3,4,5,6,9,10,11,12,25,37,],[-1,0,-240,-241,-225,-241,-224,-228,-226,-227,]),'AND':([5,91,107,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,137,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,206,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,249,250,251,253,254,259,265,271,274,278,283,285,288,290,293,296,301,302,303,307,308,309,315,317,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,340,342,344,345,348,353,355,359,360,365,369,373,378,387,],[-240,137,137,137,-107,-145,-118,-144,-90,-92,137,-143,-103,-117,-140,-105,137,-89,196,-146,-141,-142,-95,-96,-94,-93,-109,137,-110,137,-97,-118,196,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-241,196,-106,-91,-129,196,137,-133,196,196,-123,-132,-136,-131,-135,-126,-134,196,-130,-124,-137,-125,196,196,137,137,-44,-111,137,-108,196,196,137,137,137,137,-208,137,-103,196,137,-118,137,196,-114,-147,196,-43,196,137,137,196,137,-191,-181,-192,-183,-186,-189,-193,-182,-190,137,-187,-188,-184,-185,196,196,-112,137,-103,196,196,196,137,-113,196,137,137,-241,]),'MALLOC':([107,],[162,]),'MODULO':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,188,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,188,188,-106,-91,188,188,188,188,188,188,188,-136,-131,188,188,188,188,-130,188,188,188,188,188,-111,-108,188,188,-103,188,-118,188,-114,-147,188,188,188,188,188,-112,-103,188,188,188,-113,188,]),'GOTO':([5,206,244,245,308,315,387,],[-240,-241,268,-44,-43,268,-241,]),'FOR':([5,206,244,245,308,315,387,],[-240,-241,278,-44,-43,278,-241,]),'PACKAGE':([0,],[2,]),'COMPARE_AND':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,198,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,198,198,-106,-91,-129,-122,-133,198,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,198,198,-103,198,-118,198,-114,-147,198,198,198,198,198,-112,-103,198,198,198,-113,198,]),'LSHIFT_EQUAL':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,181,194,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-62,-103,323,-241,-61,-114,-147,-112,-103,-241,-113,]),'RSQUARE':([55,57,58,60,62,63,64,65,67,68,71,72,74,89,90,95,97,99,116,120,121,124,129,130,133,135,139,140,141,142,144,145,165,166,167,168,169,170,171,173,176,177,201,215,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,249,250,251,256,300,301,302,303,305,344,359,365,],[-11,-3,-4,-2,-15,-9,-14,93,-6,-7,-8,-13,-5,-29,-28,143,-12,-10,-107,-90,-92,-103,-117,-140,-105,-89,-104,-22,-17,-21,-19,202,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-20,-139,251,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-18,-111,-241,-108,-84,344,-138,-114,-147,-23,-112,365,-113,]),'XOR':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,192,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,192,192,-106,-91,-129,192,-133,192,192,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,192,192,-111,-108,192,192,-103,192,-118,192,-114,-147,192,192,192,192,192,-112,-103,192,192,192,-113,192,]),'EQUALS':([47,55,57,58,59,60,62,63,64,67,68,71,72,74,79,89,90,97,99,116,120,121,124,129,130,133,135,139,140,141,165,166,167,168,169,170,171,173,176,177,181,194,201,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,249,251,253,256,285,287,288,293,302,303,305,344,348,353,365,],[83,-11,-3,-4,91,-2,-15,-9,-14,-6,-7,-8,-13,-5,107,-29,-28,-12,-10,-107,-90,-92,-103,-117,-140,-105,-89,-104,-22,-17,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-20,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-18,-111,-108,-62,-84,-103,329,-241,-61,-114,-147,-23,-112,-103,-241,-113,]),'ELSE':([298,372,376,],[-41,-164,384,]),'PLUSEQUAL':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,181,194,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-62,-103,330,-241,-61,-114,-147,-112,-103,-241,-113,]),'GREATERTHAN':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,195,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,195,195,-106,-91,195,195,-133,195,195,-123,-132,-136,-131,-135,-126,-134,195,-130,-124,195,-125,195,195,-111,-108,195,195,-103,195,-118,195,-114,-147,195,195,195,195,195,-112,-103,195,195,195,-113,195,]),'FUNC':([5,6,9,10,11,12,25,37,],[-240,-241,-225,-241,21,-228,-226,-227,]),'GO':([5,206,244,245,308,315,387,],[-240,-241,259,-44,-43,259,-241,]),'VAR':([5,6,9,10,11,12,25,37,206,244,245,308,315,387,],[-240,-241,-225,-241,22,-228,-226,-227,-241,22,-44,-43,22,-241,]),'OREQUAL':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,181,194,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-62,-103,334,-241,-61,-114,-147,-112,-103,-241,-113,]),'IF':([5,206,244,245,308,315,384,387,],[-240,-241,296,-44,-43,296,296,-241,]),'IMAGINARY_LIT':([5,91,107,115,117,119,122,123,125,134,137,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,206,222,240,244,245,250,259,265,271,274,278,283,290,296,308,315,317,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,345,360,373,378,387,],[-240,-101,-101,-101,-145,-144,-101,-143,167,-101,-146,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-241,-101,-101,-101,-44,-101,-101,-101,-101,-101,-208,-101,-101,-101,-43,-101,-101,-101,-191,-181,-192,-183,-186,-189,-193,-182,-190,-101,-187,-188,-184,-185,-101,-101,-101,-101,-241,]),'MAP':([33,35,36,42,47,56,83,86,93,96,100,102,104,138,143,155,157,159,202,208,209,217,257,],[-57,66,-56,66,66,66,66,-58,66,66,-59,66,66,66,66,66,-36,-56,66,66,-35,66,66,]),'BOOL_LIT':([5,91,107,115,117,119,122,123,126,134,137,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,206,222,240,244,245,250,259,265,271,274,278,283,290,296,308,315,317,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,345,360,373,378,387,],[-240,-98,-98,-98,-145,-144,-98,-143,168,-98,-146,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-241,-98,-98,-98,-44,-98,-98,-98,-98,-98,-208,-98,-98,-98,-43,-98,-98,-98,-191,-181,-192,-183,-186,-189,-193,-182,-190,-98,-187,-188,-184,-185,-98,-98,-98,-98,-241,]),'TYPECAST':([5,91,107,115,117,119,122,123,134,137,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,206,222,240,244,245,250,259,265,271,274,278,283,290,296,308,315,317,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,345,360,373,378,387,],[-240,138,138,138,-145,-144,138,-143,138,-146,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,-241,138,138,138,-44,138,138,138,138,138,-208,138,138,138,-43,138,138,138,-191,-181,-192,-183,-186,-189,-193,-182,-190,138,-187,-188,-184,-185,138,138,138,138,-241,]),'RSHIFT':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,182,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,182,182,-106,-91,182,182,-133,182,182,182,-132,-136,-131,182,182,182,182,-130,182,182,182,182,182,-111,-108,182,182,-103,182,-118,182,-114,-147,182,182,182,182,182,-112,-103,182,182,182,-113,182,]),'LESSTHAN_EQUAL':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,197,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,197,197,-106,-91,197,197,-133,197,197,-123,-132,-136,-131,-135,-126,-134,197,-130,-124,197,-125,197,197,-111,-108,197,197,-103,197,-118,197,-114,-147,197,197,197,197,197,-112,-103,197,197,197,-113,197,]),'INT':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,138,143,155,157,159,202,208,209,217,257,],[-57,67,-56,67,67,67,67,-58,67,67,67,-59,67,67,67,67,67,-36,-56,67,67,-35,67,67,]),'TIMESEQUAL':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,181,194,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-62,-103,335,-241,-61,-114,-147,-112,-103,-241,-113,]),'MINUSEQUAL':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,181,194,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-62,-103,326,-241,-61,-114,-147,-112,-103,-241,-113,]),'FLOAT':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,138,143,155,157,159,202,208,209,217,257,],[-57,68,-56,68,68,68,68,-58,68,68,68,-59,68,68,68,68,68,-36,-56,68,68,-35,68,68,]),'FLOAT_LIT':([5,91,107,115,117,119,122,123,127,134,137,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,206,222,240,244,245,250,259,265,271,274,278,283,290,296,308,315,317,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,345,360,373,378,387,],[-240,-100,-100,-100,-145,-144,-100,-143,169,-100,-146,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-241,-100,-100,-100,-44,-100,-100,-100,-100,-100,-208,-100,-100,-100,-43,-100,-100,-100,-191,-181,-192,-183,-186,-189,-193,-182,-190,-100,-187,-188,-184,-185,-100,-100,-100,-100,-241,]),'BREAK':([5,206,244,245,308,315,387,],[-240,-241,289,-44,-43,289,-241,]),'COMPARE_OR':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,183,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,183,183,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,183,183,-103,183,-118,183,-114,-147,183,183,183,183,183,-112,-103,183,183,183,-113,183,]),'INT_LIT':([5,65,91,94,107,115,117,119,122,123,128,134,137,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,206,210,222,240,244,245,248,250,259,265,271,274,278,283,290,296,308,315,317,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,345,360,373,378,387,],[-240,-99,-99,142,-99,-99,-145,-144,-99,-143,170,-99,-146,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-241,-99,-99,-99,-99,-44,299,-99,-99,-99,-99,-99,-208,-99,-99,-99,-43,-99,-99,-99,-191,-181,-192,-183,-186,-189,-193,-182,-190,-99,-187,-188,-184,-185,-99,-99,-99,-99,-241,]),'CONTINUE':([5,206,244,245,308,315,387,],[-240,-241,281,-44,-43,281,-241,]),'BOOL':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,138,143,155,157,159,202,208,209,217,257,],[-57,71,-56,71,71,71,71,-58,71,71,71,-59,71,71,71,71,71,-36,-56,71,71,-35,71,71,]),'STRING_LIT':([5,8,14,26,28,29,30,31,48,49,91,107,113,115,117,119,122,123,131,134,137,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,206,222,240,244,245,250,259,265,271,274,278,283,290,296,308,315,317,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,345,360,373,378,387,],[-240,-230,-241,-241,-238,-237,51,-236,-234,-241,-102,-102,-233,-102,-145,-144,-102,-143,176,-102,-146,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-241,-102,-102,-102,-44,-102,-102,-102,-102,-102,-208,-102,-102,-102,-43,-102,-102,-102,-191,-181,-192,-183,-186,-189,-193,-182,-190,-102,-187,-188,-184,-185,-102,-102,-102,-102,-241,]),'NOT':([5,91,107,115,117,119,122,123,134,137,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,206,222,240,244,245,250,259,265,271,274,278,283,290,296,308,315,317,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,345,360,373,378,387,],[-240,122,122,122,-145,-144,122,-143,122,-146,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-241,122,122,122,-44,122,122,122,122,122,-208,122,122,122,-43,122,122,122,-191,-181,-192,-183,-186,-189,-193,-182,-190,122,-187,-188,-184,-185,122,122,122,122,-241,]),'ANDEQUAL':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,181,194,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-60,-63,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-62,-103,333,-241,-61,-114,-147,-112,-103,-241,-113,]),'DECREMENT':([116,120,121,124,129,130,133,135,165,166,167,168,169,170,171,173,176,177,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,285,288,293,302,303,344,348,353,365,],[-107,-90,-92,-103,-117,-140,-105,-89,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-111,-108,-103,338,-118,-114,-147,-112,-103,338,-113,]),'COMMA':([33,36,55,57,58,60,62,63,64,67,68,71,72,74,86,89,90,97,99,100,116,118,120,121,124,129,130,133,135,136,139,140,141,156,158,159,160,165,166,167,168,169,170,171,173,176,177,181,194,201,207,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,247,249,251,253,256,285,288,293,302,303,305,344,348,353,365,],[52,75,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,-58,-29,-28,-12,-10,-59,-107,-118,-90,-92,-103,-117,-140,-105,-89,-241,-104,-22,-17,-40,208,75,-37,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,222,-63,-20,-39,-106,-91,-129,-122,-133,-119,-121,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,-120,-127,-18,-38,-111,-108,-62,-84,-103,-241,-118,-114,-147,-23,-112,-103,-241,-113,]),'TYPE':([5,6,9,10,11,12,25,33,35,36,37,42,47,56,83,86,92,93,96,100,102,104,138,143,155,157,159,202,206,208,209,217,244,245,257,308,315,387,],[-240,-241,-225,-241,24,-228,-226,-57,73,-56,-227,73,73,73,73,-58,73,73,73,-59,73,73,73,73,73,-36,-56,73,-241,73,-35,73,24,-44,73,-43,24,-241,]),'OR':([116,118,120,121,124,129,130,133,135,136,165,166,167,168,169,170,171,173,176,177,178,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,293,301,302,303,307,309,321,340,342,344,348,353,355,359,365,369,],[-107,-118,-90,-92,-103,-117,-140,-105,-89,199,-141,-142,-95,-96,-94,-93,-109,-110,-97,-118,199,199,-106,-91,-129,199,-133,199,199,-123,-132,-136,-131,-135,-126,-134,-128,-130,-124,-137,-125,199,-127,-111,-108,199,199,-103,199,-118,199,-114,-147,199,199,199,199,199,-112,-103,199,199,199,-113,199,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([154,],[204,]),'Conversion':([91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ContinueStmt':([244,315,],[258,258,]),'ExpressionRep':([136,288,353,],[181,181,181,]),'ExpressionStmt':([244,315,317,373,],[260,260,260,260,]),'ScanStmt':([244,315,],[261,261,]),'Statement':([244,315,],[262,346,]),'IfStmt':([244,315,384,],[263,263,390,]),'FallThroughStmt':([244,315,],[264,264,]),'StatementRep':([206,387,],[244,244,]),'TypeToken':([35,42,47,56,83,92,93,96,102,104,138,143,155,202,208,217,257,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'AliasDecl':([24,80,],[44,44,]),'PackageNameDotOpt':([14,49,],[30,30,]),'TypeName':([35,42,47,56,83,92,93,96,102,104,138,143,155,202,208,217,257,],[60,60,60,60,60,139,60,60,60,60,60,60,60,60,60,60,60,]),'ExprCaseClause':([375,],[382,]),'ParametersList':([104,],[158,]),'ParameterDecl':([104,208,],[160,247,]),'FuncScope':([69,],[98,]),'FunctionName':([21,],[39,]),'LabeledStmt':([244,315,],[269,269,]),'KeyType':([96,],[145,]),'StatementList':([206,387,],[246,391,]),'TypeAssertion':([130,],[173,]),'ConditionOpt':([360,],[368,]),'EndScope_1':([357,361,372,381,393,],[363,370,376,388,394,]),'ElementType':([93,143,202,],[141,201,241,]),'RetTypeSet':([103,],[154,]),'PointerType':([35,42,47,56,83,93,96,102,104,138,143,155,202,208,217,257,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'EndScope':([101,103,256,],[147,153,305,]),'VarSpecRep':([41,],[77,]),'VarDecl':([11,244,315,],[23,23,23,]),'PrintStmt':([244,315,],[270,270,]),'ConstSpecRep':([34,],[53,]),'Operand':([91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'TypeSpec':([24,80,],[46,111,]),'CCreateScope':([278,321,],[317,354,]),'Parameters':([76,102,],[102,148,]),'UnaryOp':([91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'PackageName':([2,14,49,],[7,29,29,]),'SourceFile':([0,],[3,]),'ExpressionListPureOpt':([271,],[312,]),'Label':([244,268,281,289,315,],[272,311,320,320,272,]),'FunctionDecl':([11,],[16,]),'TopLevelDecl':([11,],[17,]),'ExprSwitchStmt':([244,315,],[273,273,]),'IdentifierList':([15,22,53,77,104,208,242,],[35,42,35,42,155,155,257,]),'IdentifierRep':([15,22,53,77,104,208,242,],[33,33,33,33,33,33,33,]),'Type':([35,42,47,56,83,93,96,102,104,138,143,155,202,208,217,257,],[59,79,82,89,112,140,144,149,156,200,140,207,140,156,252,306,]),'ImportDeclRep':([6,],[10,]),'GoStmt':([244,315,],[275,275,]),'DeferStmt':([244,315,],[276,276,]),'PackageClause':([0,],[1,]),'ResultOpt':([102,],[150,]),'IncDecStmt':([244,315,317,373,],[267,267,267,267,]),'GotoStmt':([244,315,],[277,277,]),'TopLevelDeclRep':([10,],[11,]),'C':([91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'Semi':([1,13,17,85,87,106,111,255,262,347,368,],[6,25,37,113,114,161,164,304,308,360,373,]),'PrimaryExpr':([91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'S':([91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'StartSwitch':([362,],[371,]),'assign_op':([287,],[332,]),'Signature':([76,],[103,]),'Block':([154,341,351,364,392,],[205,357,361,372,393,]),'ExprCaseClauseList':([371,],[375,]),'SwitchStmt':([244,315,],[280,280,]),'VarSpec':([22,77,],[40,106,]),'Result':([102,],[152,]),'Assignment':([244,315,317,373,],[266,266,266,266,]),'ExpressionListTypeOpt':([172,],[212,]),'QualifiedIdent':([35,42,47,56,83,92,93,96,102,104,138,143,155,202,208,217,257,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'Literal':([91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'ImportDecl':([10,],[13,]),'OperandName':([91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'AssignOp':([287,],[324,]),'LabelOpt':([281,289,],[319,339,]),'FieldDeclRep':([203,],[242,]),'start':([0,],[4,]),'Declaration':([11,244,315,],[18,284,284,]),'Condition':([317,360,],[349,366,]),'StructType':([69,],[97,]),'B':([91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'ConstSpec':([15,53,],[32,87,]),'F':([91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'epsilon':([6,10,14,26,34,41,45,49,79,102,136,172,174,203,206,244,250,271,281,288,289,315,317,353,360,371,373,376,387,],[9,12,28,48,54,78,81,28,108,151,194,211,215,243,245,286,215,313,318,194,318,286,350,194,367,374,286,383,245,]),'ConditionBlockOpt':([317,],[351,]),'ExpressionList':([91,107,172,244,271,274,315,317,332,373,378,],[132,163,213,287,314,316,287,287,356,287,386,]),'SimpleStmt':([244,315,317,373,],[291,291,347,377,]),'ImportSpecRep':([26,],[49,]),'Expression':([91,107,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[136,136,178,136,216,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,253,254,288,301,307,309,136,136,321,340,342,288,353,355,136,359,369,288,136,]),'ImportPath':([30,],[50,]),'ExprSwitchCase':([375,],[379,]),'ExpressionOpt':([174,250,],[214,300,]),'ST':([35,42,47,56,83,93,96,102,104,138,143,155,202,208,217,257,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'TypeExprListOpt':([35,],[70,]),'ReturnStmt':([244,315,],[279,279,]),'ConstDecl':([11,244,315,],[19,19,19,]),'Slice':([130,],[171,]),'ArrayType':([35,42,47,56,83,93,96,102,104,138,143,155,202,208,217,257,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ForStmt':([244,315,],[292,292,]),'Function':([76,],[101,]),'ImportSpec':([14,49,],[27,85,]),'TypeLit':([35,42,47,56,83,93,96,102,104,138,143,155,202,208,217,257,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'TypeSpecRep':([45,],[80,]),'CreateScope':([39,244,315,342,384,],[76,294,294,358,389,]),'SliceType':([35,42,47,56,83,93,96,102,104,138,143,155,202,208,217,257,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'TypeDecl':([11,244,315,],[20,20,20,]),'BaseType':([56,],[90,]),'I':([65,91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,210,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[94,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,248,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'IFSYM':([294,358,389,],[341,364,392,]),'UnaryExpr':([91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[129,129,165,166,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'ArrayLength':([65,],[95,]),'MapType':([35,42,47,56,83,93,96,102,104,138,143,155,202,208,217,257,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ForClause':([317,],[352,]),'ShortVarDecl':([244,315,317,373,],[295,295,295,295,]),'TypeDef':([24,80,],[43,43,]),'FieldDecl':([242,],[255,]),'BreakStmt':([244,315,],[297,297,]),'BasicLit':([91,107,115,122,134,172,174,179,180,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,222,240,244,250,259,265,271,274,283,290,296,315,317,322,332,345,360,373,378,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'ExpressionListOpt':([79,],[109,]),'ElseOpt':([376,],[385,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',237),
  ('Type -> TypeName','Type',1,'p_type','parser.py',246),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',247),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','parser.py',251),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',252),
  ('TypeToken -> INT','TypeToken',1,'p_type_token','parser.py',262),
  ('TypeToken -> FLOAT','TypeToken',1,'p_type_token','parser.py',263),
  ('TypeToken -> BOOL','TypeToken',1,'p_type_token','parser.py',264),
  ('TypeToken -> STRING','TypeToken',1,'p_type_token','parser.py',265),
  ('TypeToken -> TYPE IDENTIFIER','TypeToken',2,'p_type_token','parser.py',266),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',302),
  ('TypeLit -> ST StructType','TypeLit',2,'p_type_lit','parser.py',303),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',304),
  ('TypeLit -> MapType','TypeLit',1,'p_type_lit','parser.py',305),
  ('TypeLit -> SliceType','TypeLit',1,'p_type_lit','parser.py',306),
  ('ST -> <empty>','ST',0,'p_S_T','parser.py',313),
  ('SliceType -> LSQUARE RSQUARE ElementType','SliceType',3,'p_slice_type','parser.py',328),
  ('MapType -> MAP LSQUARE KeyType RSQUARE ElementType','MapType',5,'p_map_type','parser.py',337),
  ('KeyType -> Type','KeyType',1,'p_key_type','parser.py',344),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE ElementType','ArrayType',4,'p_array_type','parser.py',351),
  ('ArrayLength -> I INT_LIT','ArrayLength',2,'p_array_length','parser.py',377),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',383),
  ('StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope','StructType',6,'p_struct_type','parser.py',388),
  ('FuncScope -> <empty>','FuncScope',0,'p_func_scope','parser.py',396),
  ('FieldDeclRep -> FieldDeclRep FieldDecl Semi','FieldDeclRep',3,'p_field_decl_rep','parser.py',404),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',405),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_field_decl','parser.py',418),
  ('PointerType -> MULTIPLY BaseType','PointerType',2,'p_point_type','parser.py',439),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',447),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_sign','parser.py',454),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',480),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',481),
  ('Result -> Parameters','Result',1,'p_result','parser.py',485),
  ('Result -> Type','Result',1,'p_result','parser.py',486),
  ('Parameters -> LPAREN ParametersList RPAREN','Parameters',3,'p_params','parser.py',492),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_params','parser.py',493),
  ('ParametersList -> ParameterDecl','ParametersList',1,'p_param_list','parser.py',516),
  ('ParametersList -> ParametersList COMMA ParameterDecl','ParametersList',3,'p_param_list','parser.py',517),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_param_decl','parser.py',529),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_param_decl','parser.py',530),
  ('Block -> LCURL StatementList RCURL','Block',3,'p_block','parser.py',564),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',568),
  ('StatementRep -> StatementRep Statement Semi','StatementRep',3,'p_stat_rep','parser.py',572),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',573),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',586),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',587),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',588),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',592),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',593),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',600),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',601),
  ('ConstSpecRep -> ConstSpecRep ConstSpec Semi','ConstSpecRep',3,'p_const_spec_rep','parser.py',608),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',609),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',618),
  ('TypeExprListOpt -> Type EQUALS ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',640),
  ('IdentifierList -> IDENTIFIER','IdentifierList',1,'p_identifier_list','parser.py',654),
  ('IdentifierList -> IdentifierRep','IdentifierList',1,'p_identifier_list','parser.py',655),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',672),
  ('IdentifierRep -> IDENTIFIER COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',673),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',704),
  ('ExpressionList -> NULL','ExpressionList',1,'p_expr_list','parser.py',705),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',722),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',723),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',744),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',745),
  ('TypeSpecRep -> TypeSpecRep TypeSpec Semi','TypeSpecRep',3,'p_type_spec_rep','parser.py',752),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',753),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',760),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',761),
  ('AliasDecl -> IDENTIFIER EQUALS Type','AliasDecl',3,'p_alias_decl','parser.py',765),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_type_def','parser.py',777),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',790),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',791),
  ('VarSpecRep -> VarSpecRep VarSpec Semi','VarSpecRep',3,'p_var_spec_rep','parser.py',798),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',799),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',809),
  ('ExpressionListOpt -> EQUALS ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',884),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',885),
  ('ExpressionListOpt -> EQUALS MALLOC LPAREN I INT_LIT RPAREN','ExpressionListOpt',6,'p_expr_list_opt','parser.py',886),
  ('ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',900),
  ('FunctionDecl -> FUNC FunctionName CreateScope Function EndScope','FunctionDecl',5,'p_func_decl','parser.py',931),
  ('FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope','FunctionDecl',5,'p_func_decl','parser.py',932),
  ('CreateScope -> <empty>','CreateScope',0,'p_create_scope','parser.py',954),
  ('EndScope -> <empty>','EndScope',0,'p_end_scope','parser.py',958),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',962),
  ('Function -> Signature RetTypeSet FunctionBody','Function',3,'p_func','parser.py',974),
  ('RetTypeSet -> <empty>','RetTypeSet',0,'p_ret_type_set','parser.py',993),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',1007),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',1019),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',1020),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',1021),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',1028),
  ('BasicLit -> I INT_LIT','BasicLit',2,'p_basic_lit','parser.py',1033),
  ('BasicLit -> F FLOAT_LIT','BasicLit',2,'p_basic_lit','parser.py',1034),
  ('BasicLit -> C IMAGINARY_LIT','BasicLit',2,'p_basic_lit','parser.py',1035),
  ('BasicLit -> B BOOL_LIT','BasicLit',2,'p_basic_lit','parser.py',1036),
  ('BasicLit -> S STRING_LIT','BasicLit',2,'p_basic_lit','parser.py',1037),
  ('B -> <empty>','B',0,'p_B','parser.py',1057),
  ('I -> <empty>','I',0,'p_I','parser.py',1063),
  ('F -> <empty>','F',0,'p_F','parser.py',1069),
  ('C -> <empty>','C',0,'p_C','parser.py',1075),
  ('S -> <empty>','S',0,'p_S','parser.py',1081),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',1087),
  ('QualifiedIdent -> IDENTIFIER DOT TypeName','QualifiedIdent',3,'p_qualified_ident','parser.py',1133),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',1145),
  ('PrimaryExpr -> PrimaryExpr DOT IDENTIFIER','PrimaryExpr',3,'p_prim_expr','parser.py',1146),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',1147),
  ('PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE','PrimaryExpr',4,'p_prim_expr','parser.py',1148),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',1149),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser.py',1150),
  ('PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN','PrimaryExpr',4,'p_prim_expr','parser.py',1151),
  ('Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE','Slice',5,'p_slice','parser.py',1374),
  ('Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE','Slice',7,'p_slice','parser.py',1375),
  ('TypeAssertion -> DOT LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser.py',1383),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1388),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1389),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser.py',1393),
  ('Expression -> NULL','Expression',1,'p_expr','parser.py',1394),
  ('Expression -> Expression COMPARE_OR Expression','Expression',3,'p_expr','parser.py',1395),
  ('Expression -> Expression COMPARE_AND Expression','Expression',3,'p_expr','parser.py',1396),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expr','parser.py',1397),
  ('Expression -> Expression NOTEQUALS Expression','Expression',3,'p_expr','parser.py',1398),
  ('Expression -> Expression LESSTHAN Expression','Expression',3,'p_expr','parser.py',1399),
  ('Expression -> Expression GREATERTHAN Expression','Expression',3,'p_expr','parser.py',1400),
  ('Expression -> Expression LESSTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',1401),
  ('Expression -> Expression GREATERTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',1402),
  ('Expression -> Expression OR Expression','Expression',3,'p_expr','parser.py',1403),
  ('Expression -> Expression XOR Expression','Expression',3,'p_expr','parser.py',1404),
  ('Expression -> Expression ANDXOR Expression','Expression',3,'p_expr','parser.py',1405),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expr','parser.py',1406),
  ('Expression -> Expression MODULO Expression','Expression',3,'p_expr','parser.py',1407),
  ('Expression -> Expression LSHIFT Expression','Expression',3,'p_expr','parser.py',1408),
  ('Expression -> Expression RSHIFT Expression','Expression',3,'p_expr','parser.py',1409),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expr','parser.py',1410),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expr','parser.py',1411),
  ('Expression -> Expression MULTIPLY Expression','Expression',3,'p_expr','parser.py',1412),
  ('Expression -> Expression AND Expression','Expression',3,'p_expr','parser.py',1413),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',1521),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',1522),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',1526),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1527),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1528),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',1575),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',1576),
  ('UnaryOp -> MULTIPLY','UnaryOp',1,'p_unary_op','parser.py',1577),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser.py',1578),
  ('Conversion -> TYPECAST Type LPAREN Expression RPAREN','Conversion',5,'p_conversion','parser.py',1592),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',1600),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',1601),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',1602),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',1603),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',1604),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',1605),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',1606),
  ('Statement -> CreateScope IFSYM Block EndScope_1','Statement',4,'p_statement','parser.py',1607),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',1608),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',1609),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',1610),
  ('Statement -> DeferStmt','Statement',1,'p_statement','parser.py',1611),
  ('Statement -> FallThroughStmt','Statement',1,'p_statement','parser.py',1612),
  ('Statement -> GoStmt','Statement',1,'p_statement','parser.py',1613),
  ('Statement -> PrintStmt','Statement',1,'p_statement','parser.py',1614),
  ('Statement -> ScanStmt','Statement',1,'p_statement','parser.py',1615),
  ('EndScope_1 -> <empty>','EndScope_1',0,'p_end_scope_new','parser.py',1622),
  ('PrintStmt -> PRINT ExpressionList','PrintStmt',2,'p_print_stmt','parser.py',1629),
  ('ScanStmt -> SCAN Expression','ScanStmt',2,'p_scan_stmt','parser.py',1654),
  ('FallThroughStmt -> FALLTHROUGH','FallThroughStmt',1,'p_fallthrough_stmt','parser.py',1678),
  ('GoStmt -> GO Expression','GoStmt',2,'p_go_stmt','parser.py',1682),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_defer_stmt','parser.py',1688),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',1693),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1694),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1695),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',1696),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',1697),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',1702),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',1720),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',1725),
  ('IncDecStmt -> Expression INCREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1731),
  ('IncDecStmt -> Expression DECREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1732),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',1739),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1783),
  ('AssignOp -> PLUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1787),
  ('AssignOp -> MINUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1788),
  ('AssignOp -> TIMESEQUAL','AssignOp',1,'p_AssignOp','parser.py',1789),
  ('AssignOp -> DIVIDE_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1790),
  ('AssignOp -> MODEQUAL','AssignOp',1,'p_AssignOp','parser.py',1791),
  ('AssignOp -> ANDEQUAL','AssignOp',1,'p_AssignOp','parser.py',1792),
  ('AssignOp -> OREQUAL','AssignOp',1,'p_AssignOp','parser.py',1793),
  ('AssignOp -> XOREQUAL','AssignOp',1,'p_AssignOp','parser.py',1794),
  ('AssignOp -> ANDXOR_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1795),
  ('AssignOp -> LSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1796),
  ('AssignOp -> RSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1797),
  ('AssignOp -> EQUALS','AssignOp',1,'p_AssignOp','parser.py',1798),
  ('IfStmt -> IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt','IfStmt',7,'p_if_statement','parser.py',1804),
  ('IFSYM -> <empty>','IFSYM',0,'p_if_sym','parser.py',1821),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1827),
  ('ElseOpt -> ELSE CreateScope IFSYM Block EndScope_1','ElseOpt',5,'p_else_opt','parser.py',1828),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1829),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',1841),
  ('ExprSwitchStmt -> SWITCH Expression CCreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1','ExprSwitchStmt',8,'p_ExprSwitchStmt','parser.py',1845),
  ('StartSwitch -> <empty>','StartSwitch',0,'p_start_switch','parser.py',1876),
  ('ExprCaseClauseList -> epsilon','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',1892),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',1893),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',1909),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',1932),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',1933),
  ('ForStmt -> FOR CCreateScope ConditionBlockOpt Block EndScope_1','ForStmt',5,'p_for','parser.py',1957),
  ('CCreateScope -> <empty>','CCreateScope',0,'p_c_create_scope','parser.py',1970),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1975),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1976),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1977),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1988),
  ('ForClause -> SimpleStmt Semi ConditionOpt Semi SimpleStmt','ForClause',5,'p_forclause','parser.py',1993),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',2012),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',2013),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',2020),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',2058),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',2059),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',2064),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',2068),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',2072),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',2073),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',2078),
  ('SourceFile -> PackageClause Semi ImportDeclRep TopLevelDeclRep','SourceFile',4,'p_source_file','parser.py',2084),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',2092),
  ('ImportDeclRep -> ImportDeclRep ImportDecl Semi','ImportDeclRep',3,'p_import_decl_rep','parser.py',2093),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl Semi','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',2102),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',2103),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',2114),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',2119),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',2130),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',2131),
  ('ImportSpecRep -> ImportSpecRep ImportSpec Semi','ImportSpecRep',3,'p_import_spec_rep','parser.py',2138),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',2139),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',2147),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2155),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2156),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2157),
  ('ImportPath -> STRING_LIT','ImportPath',1,'p_import_path','parser.py',2165),
  ('Semi -> SEMICOLON','Semi',1,'p_SemiColon','parser.py',2173),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',2186),
]
