
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDENTIFIERrightEQUALSNOTleftINT_LITleftFLOAT_LITleftSTRING_LITleftCOMPARE_ORleftCOMPARE_ANDleftEQEQNOTEQUALSleftORleftXORleftANDANDXORleftLESSTHANGREATERTHANLESSTHAN_EQUALGREATERTHAN_EQUALleftPLUSMINUSleftLSHIFTRSHIFTleftMULTIPLYDIVIDEMODULOleftLPARENRPARENAND ANDEQUAL ANDXOR ANDXOR_EQUAL BOOL BOOL_LIT BREAK CASE COLON COMMA COMPARE_AND COMPARE_OR CONST CONTINUE DECREMENT DEFAULT DEFER DIVIDE DIVIDE_EQUAL DOT ELSE EQEQ EQUALS FALLTHROUGH FLOAT FLOAT_LIT FOR FUNC GO GOTO GREATERTHAN GREATERTHAN_EQUAL IDENTIFIER IF IMAGINARY_LIT IMPORT INCREMENT INT INT_LIT LCURL LESSTHAN LESSTHAN_EQUAL LPAREN LSHIFT LSHIFT_EQUAL LSQUARE MALLOC MAP MINUS MINUSEQUAL MODEQUAL MODULO MULTIPLY NOT NOTEQUALS NULL OR OREQUAL PACKAGE PLUS PLUSEQUAL PRINT RCURL RETURN RPAREN RSHIFT RSHIFT_EQUAL RSQUARE SCAN SEMICOLON SHORT_ASSIGNMENT STRING STRING_LIT STRUCT SWITCH TIMESEQUAL TYPE TYPECAST VAR XOR XOREQUALstart : SourceFileType : TypeName\n\t\t\t\t\t\t| TypeLitTypeName : TypeToken\n\t\t\t\t\t\t\t\t| QualifiedIdentTypeToken : INT\n\t\t\t\t\t\t\t\t | FLOAT\n\t\t\t\t\t\t\t\t | BOOL\n\t\t\t\t\t\t\t\t | STRING\n\t\t\t\t\t\t\t\t | TYPE IDENTIFIERTypeLit : ArrayType\n\t\t\t\t\t\t\t | ST StructType\n\t\t\t\t\t\t\t | PointerType\n\t\t\t\t\t\t\t | MapType\n\t\t\t\t\t\t\t | SliceTypeST : SliceType : LSQUARE RSQUARE ElementTypeMapType : MAP LSQUARE KeyType RSQUARE ElementType KeyType : TypeArrayType : LSQUARE ArrayLength RSQUARE ElementType ArrayLength : I INT_LIT  ElementType : Type StructType : FuncScope STRUCT LCURL FieldDeclRep RCURL EndScopeFuncScope :  FieldDeclRep : FieldDeclRep FieldDecl Semi\n\t\t\t\t\t\t\t\t\t| epsilon  FieldDecl : IdentifierList TypePointerType : MULTIPLY BaseTypeBaseType : TypeSignature : Parameters ResultOptResultOpt : Result\n\t\t\t\t\t\t\t\t | epsilonResult : Parameters\n\t\t\t\t\t\t\t| TypeParameters : LPAREN ParametersList RPAREN\n\t\t\t\t\t\t\t\t\t| LPAREN RPARENParametersList : ParameterDecl\n\t\t\t\t\t\t\t\t\t\t\t| ParametersList COMMA ParameterDeclParameterDecl : IdentifierList Type\n\t\t\t\t\t\t\t\t\t\t | TypeBlock : LCURL StatementList RCURLStatementList : StatementRepStatementRep : StatementRep Statement Semi\n\t\t\t\t\t\t\t\t\t\t| epsilonDeclaration : ConstDecl\n\t\t\t\t\t\t\t\t | TypeDecl\n\t\t\t\t\t\t\t\t | VarDeclTopLevelDecl : Declaration\n\t\t\t\t\t\t\t\t\t| FunctionDeclConstDecl : CONST ConstSpec\n\t\t\t\t\t\t\t\t | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec Semi\n\t\t\t\t\t\t\t\t\t\t| epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : Type EQUALS ExpressionListIdentifierList : IDENTIFIER \n\t\t\t\t\t\t\t\t\t\t\t| IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n\t\t\t\t\t\t\t\t\t\t | IDENTIFIER COMMA IDENTIFIERExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n\t\t\t\t\t\t\t\t\t\t | epsilonTypeDecl : TYPE TypeSpec\n\t\t\t\t\t\t\t\t| TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec Semi\n\t\t\t\t\t\t\t\t\t | epsilonTypeSpec : AliasDecl\n\t\t\t\t\t\t\t\t| TypeDefAliasDecl : IDENTIFIER EQUALS TypeTypeDef : IDENTIFIER TypeVarDecl : VAR VarSpec\n\t\t\t\t\t\t\t | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec Semi\n\t\t\t\t\t\t\t\t\t| epsilonVarSpec : IdentifierList Type ExpressionListOptExpressionListOpt : EQUALS ExpressionList\n\t\t\t\t\t\t\t | epsilon ShortVarDecl : IDENTIFIER SHORT_ASSIGNMENT Expression FunctionDecl : FUNC FunctionName CreateScope Function EndScope\n\t\t\t\t\t| FUNC FunctionName CreateScope Signature EndScopeCreateScope : EndScope : FunctionName : IDENTIFIERFunction : Signature RetTypeSet FunctionBodyRetTypeSet : FunctionBody : BlockOperand : Literal\n\t\t\t\t\t\t\t | OperandName\n\t\t\t\t\t\t\t | LPAREN Expression RPARENLiteral : BasicLitBasicLit : I INT_LIT\n              | F FLOAT_LIT\n              | C IMAGINARY_LIT\n              | B BOOL_LIT\n              | S STRING_LITB : I : F : C : S : OperandName : IDENTIFIERQualifiedIdent : IDENTIFIER DOT TypeNamePrimaryExpr : Operand\n                 | PrimaryExpr DOT IDENTIFIER\n                 | Conversion\n                 | PrimaryExpr LSQUARE Expression RSQUARE\n                 | PrimaryExpr Slice\n                 | PrimaryExpr TypeAssertion\n                 | PrimaryExpr LPAREN ExpressionListTypeOpt RPARENSlice : LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE\n\t\t\t\t\t\t | LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARETypeAssertion : DOT LPAREN Type RPARENExpressionListTypeOpt : ExpressionList\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t | epsilonExpression : UnaryExpr\n\t\t\t\t\t| Expression COMPARE_OR Expression\n\t\t\t\t\t| Expression COMPARE_AND Expression\n\t\t\t\t\t| Expression EQEQ Expression\n\t\t\t\t\t| Expression NOTEQUALS Expression\n\t\t\t\t\t| Expression LESSTHAN Expression\n\t\t\t\t\t| Expression GREATERTHAN Expression\n\t\t\t\t\t| Expression LESSTHAN_EQUAL Expression\n\t\t\t\t\t| Expression GREATERTHAN_EQUAL Expression\n\t\t\t\t\t| Expression OR Expression\n\t\t\t\t\t| Expression XOR Expression\n\t\t\t\t\t| Expression ANDXOR Expression\n\t\t\t\t\t| Expression DIVIDE Expression\n\t\t\t\t\t| Expression MODULO Expression\n\t\t\t\t\t| Expression LSHIFT Expression\n\t\t\t\t\t| Expression RSHIFT Expression\n\t\t\t\t\t| Expression PLUS Expression\n\t\t\t\t\t| Expression MINUS Expression\n\t\t\t\t\t| Expression MULTIPLY Expression\n\t\t\t\t\t| Expression AND ExpressionExpressionOpt : Expression\n\t\t\t\t\t\t\t\t\t\t | epsilonUnaryExpr : PrimaryExpr\n\t\t\t\t\t | UnaryOp UnaryExpr\n\t\t\t\t\t | NOT UnaryExpr\n\t\t\t\t\t | MALLOC LPAREN I INT_LIT RPAREN\n\t\t\t\t\t | NULLUnaryOp : PLUS\n\t\t\t\t\t\t\t | MINUS\n\t\t\t\t\t\t\t | MULTIPLY\n\t\t\t\t\t\t\t | AND Conversion : TYPECAST Type LPAREN Expression RPARENStatement : Declaration\n\t\t\t\t\t\t\t | LabeledStmt\n\t\t\t\t\t\t\t | SimpleStmt\n\t\t\t\t\t\t\t | ReturnStmt\n\t\t\t\t\t\t\t | BreakStmt\n\t\t\t\t\t\t\t | ContinueStmt\n\t\t\t\t\t\t\t | GotoStmt\n\t\t\t\t\t\t\t | CreateScope IFSYM Block EndScope_1\n\t\t\t\t\t\t\t | IfStmt\n\t\t\t\t\t\t\t | SwitchStmt\n\t\t\t\t\t\t\t | ForStmt\n\t\t\t\t\t\t\t | DeferStmt\n\t\t\t\t\t\t\t | FallThroughStmt\n\t\t\t\t\t\t\t | GoStmt\n\t\t\t\t\t\t\t | PrintStmt\n\t\t\t\t\t\t\t | ScanStmtEndScope_1 : PrintStmt : PRINT ExpressionListScanStmt : SCAN ExpressionFallThroughStmt : FALLTHROUGHGoStmt : GO ExpressionDeferStmt : DEFER Expression SimpleStmt : epsilon\n\t\t\t\t\t\t\t\t | ExpressionStmt\n\t\t\t\t\t\t\t\t | IncDecStmt\n\t\t\t\t\t\t\t\t | Assignment\n\t\t\t\t\t\t\t\t | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : Expression INCREMENT\n\t\t\t\t\t\t\t\t | Expression DECREMENT  Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOp AssignOp : PLUSEQUAL\n\t\t\t\t\t\t\t | MINUSEQUAL\n\t\t\t\t\t\t\t | TIMESEQUAL\n\t\t\t\t\t\t\t | DIVIDE_EQUAL\n\t\t\t\t\t\t\t | MODEQUAL\n\t\t\t\t\t\t\t | ANDEQUAL\n\t\t\t\t\t\t\t | OREQUAL\n\t\t\t\t\t\t\t | XOREQUAL\n\t\t\t\t\t\t\t | ANDXOR_EQUAL\n\t\t\t\t\t\t\t | LSHIFT_EQUAL\n\t\t\t\t\t\t\t | RSHIFT_EQUAL\n\t\t\t\t\t\t\t | EQUALS  IfStmt : IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt IFSYM :  ElseOpt : ELSE IfStmt\n\t\t\t\t\t\t\t| ELSE CreateScope IFSYM Block EndScope_1\n\t\t\t\t\t\t\t| epsilon  SwitchStmt : ExprSwitchStmtExprSwitchStmt : SWITCH Expression CCreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1StartSwitch : ExprCaseClauseList : epsilon\n\t\t\t\t\t\t\t\t | ExprCaseClauseList ExprCaseClause\n\t\tExprCaseClause : ExprSwitchCase COLON StatementList ExprSwitchCase : CASE ExpressionList\n\t\t\t\t\t\t\t\t | DEFAULT \n\t\tForStmt : FOR CCreateScope ConditionBlockOpt Block EndScope_1CCreateScope : ConditionBlockOpt : epsilon\n\t\t\t\t\t\t | Condition\n\t\t\t\t\t\t | ForClauseCondition : Expression ForClause : SimpleStmt Semi ConditionOpt Semi SimpleStmtConditionOpt : epsilon\n\t\t\t\t\t| Condition ReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n\t\t\t\t\t\t | epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n\t\t\t\t| epsilon GotoStmt : GOTO Label SourceFile : PackageClause Semi ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n\t\t\t\t\t | ImportDeclRep ImportDecl SemiTopLevelDeclRep : TopLevelDeclRep TopLevelDecl Semi\n\t\t\t\t\t\t\t\t\t\t | epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n\t\t\t\t\t| IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec Semi\n\t\t\t\t\t\t| epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n\t\t\t\t\t\t\t\t\t\t\t\t| PackageName\n\t\t\t\t\t\t\t\t\t\t\t\t| epsilon ImportPath : STRING_LIT Semi : SEMICOLONepsilon : '
    
_lr_action_items = {'LSQUARE':([33,35,36,42,47,56,66,83,86,93,96,100,102,104,116,120,121,124,130,134,137,139,144,156,158,160,168,169,170,171,173,176,200,202,208,209,217,218,219,249,251,257,285,301,302,342,346,363,],[-57,65,-56,65,65,65,96,65,-58,65,65,-59,65,65,-105,-88,-90,-101,174,-87,65,-103,65,65,-36,-56,-94,-92,-91,-107,-108,-95,-93,65,65,-35,65,-104,-89,-109,-106,65,-101,-112,-146,-110,-101,-111,]),'ANDXOR':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,178,-103,-138,-139,-94,-92,-91,-107,-108,-95,178,-93,178,-104,-89,-126,178,-130,178,178,-120,-129,-133,-128,-132,-123,-131,178,-127,-121,-134,-122,178,178,-109,-106,178,178,-101,178,-140,178,-112,-146,178,178,178,178,178,-110,-101,178,178,178,-111,178,]),'DIVIDE':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,192,-103,-138,-139,-94,-92,-91,-107,-108,-95,192,-93,192,-104,-89,192,192,192,192,192,192,192,-133,-128,192,192,192,192,-127,192,192,192,192,192,-109,-106,192,192,-101,192,-140,192,-112,-146,192,192,192,192,192,-110,-101,192,192,192,-111,192,]),'RETURN':([5,206,244,245,307,314,385,],[-239,-240,271,-44,-43,271,-240,]),'LPAREN':([5,14,15,22,24,38,39,55,57,58,60,62,63,64,67,68,71,72,74,76,89,90,91,97,99,102,107,115,116,117,119,120,121,122,123,124,125,130,133,134,136,139,140,141,142,158,168,169,170,171,172,173,174,175,176,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,206,209,218,219,222,240,241,244,245,249,250,251,256,259,265,271,274,278,283,285,290,295,301,302,304,307,314,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,342,343,346,358,363,371,376,385,],[-239,26,34,41,45,-83,-81,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,104,-29,-28,133,-12,-10,104,133,133,-105,-144,-143,-88,-90,133,-142,-101,167,172,133,-87,-145,-103,-102,-22,-17,-36,-94,-92,-91,-107,133,-108,133,217,-95,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,240,-93,-20,-240,-35,-104,-89,133,133,-18,133,-44,-109,133,-106,-82,133,133,133,133,-207,133,-101,133,133,-112,-146,-23,-43,133,133,133,-190,-180,-191,-182,-185,-188,-192,-181,-189,133,-186,-187,-183,-184,-110,133,-101,133,-111,133,133,-240,]),'RSHIFT':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,181,-103,-138,-139,-94,-92,-91,-107,-108,-95,181,-93,181,-104,-89,181,181,-130,181,181,181,-129,-133,-128,181,181,181,181,-127,181,181,181,181,181,-109,-106,181,181,-101,181,-140,181,-112,-146,181,181,181,181,181,-110,-101,181,181,181,-111,181,]),'SCAN':([5,206,244,245,307,314,385,],[-239,-240,290,-44,-43,290,-240,]),'DEFAULT':([5,244,245,307,360,369,372,373,380,385,389,],[-239,-42,-44,-43,-200,-240,-201,378,-202,-240,-203,]),'MODEQUAL':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,180,193,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-61,-101,326,-240,-140,-112,-146,-110,-101,-240,-111,]),'XOREQUAL':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,180,193,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-61,-101,327,-240,-140,-112,-146,-110,-101,-240,-111,]),'VAR':([5,6,9,10,11,12,25,37,206,244,245,307,314,385,],[-239,-240,-224,-240,22,-227,-225,-226,-240,22,-44,-43,22,-240,]),'LESSTHAN':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,184,-103,-138,-139,-94,-92,-91,-107,-108,-95,184,-93,184,-104,-89,184,184,-130,184,184,-120,-129,-133,-128,-132,-123,-131,184,-127,-121,184,-122,184,184,-109,-106,184,184,-101,184,-140,184,-112,-146,184,184,184,184,184,-110,-101,184,184,184,-111,184,]),'COLON':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,174,176,180,193,200,214,215,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,272,285,298,300,301,302,342,363,377,378,384,],[-105,-141,-88,-90,-101,-115,-137,-87,-240,-103,-138,-139,-94,-92,-91,-107,-108,-240,-95,-60,-62,-93,250,-136,-135,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-61,314,-175,-140,343,-112,-146,-110,-111,385,-205,-204,]),'NOTEQUALS':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,179,-103,-138,-139,-94,-92,-91,-107,-108,-95,179,-93,179,-104,-89,-126,-119,-130,179,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,179,-124,-109,-106,179,179,-101,179,-140,179,-112,-146,179,179,179,179,179,-110,-101,179,179,179,-111,179,]),'LSHIFT':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,185,-103,-138,-139,-94,-92,-91,-107,-108,-95,185,-93,185,-104,-89,185,185,-130,185,185,185,-129,-133,-128,185,185,185,185,-127,185,185,185,185,185,-109,-106,185,185,-101,185,-140,185,-112,-146,185,185,185,185,185,-110,-101,185,185,185,-111,185,]),'PRINT':([5,206,244,245,307,314,385,],[-239,-240,274,-44,-43,274,-240,]),'CONST':([5,6,9,10,11,12,25,37,206,244,245,307,314,385,],[-239,-240,-224,-240,15,-227,-225,-226,-240,15,-44,-43,15,-240,]),'NULL':([5,91,107,115,117,119,122,123,133,136,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,206,222,240,244,245,250,259,265,271,274,278,283,290,295,307,314,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,343,358,371,376,385,],[-239,118,118,118,-144,-143,118,-142,118,-145,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-240,118,118,118,-44,118,118,118,118,118,-207,118,118,118,-43,118,118,118,-190,-180,-191,-182,-185,-188,-192,-181,-189,118,-186,-187,-183,-184,118,118,118,118,-240,]),'MINUS':([5,91,107,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,139,165,166,168,169,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,200,206,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,249,250,251,253,254,259,265,271,274,278,283,285,288,290,295,298,300,301,302,306,307,308,314,316,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,339,341,342,343,346,351,353,357,358,363,367,371,376,385,],[-239,119,119,119,-105,-144,-141,-143,-88,-90,119,-142,-101,-115,-137,119,-87,188,-145,-103,-138,-139,-94,-92,-91,-107,119,-108,119,-95,188,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-93,-240,188,-104,-89,188,188,119,-130,188,188,188,-129,-133,-128,-132,188,-131,188,-127,188,188,188,188,188,119,119,-44,-109,119,-106,188,188,119,119,119,119,-207,119,-101,188,119,119,-140,188,-112,-146,188,-43,188,119,119,188,119,-190,-180,-191,-182,-185,-188,-192,-181,-189,119,-186,-187,-183,-184,188,188,-110,119,-101,188,188,188,119,-111,188,119,119,-240,]),'DOT':([5,14,26,48,49,61,113,116,120,121,124,130,134,139,160,168,169,170,171,173,176,200,218,219,249,251,285,301,302,342,346,363,],[-239,31,-240,-233,31,92,-232,-105,-88,-90,-101,175,-87,-103,92,-94,-92,-91,-107,-108,-95,-93,-104,-89,-109,-106,-101,-112,-146,-110,-101,-111,]),'LCURL':([5,55,57,58,60,62,63,64,67,68,71,72,74,89,90,97,99,102,103,116,118,120,121,124,129,130,134,135,139,140,141,142,147,149,150,151,152,153,155,158,165,166,168,169,170,171,173,176,180,193,200,201,206,209,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,244,245,249,251,253,256,260,266,267,278,286,288,293,294,298,301,302,304,307,314,316,320,336,337,340,341,342,346,347,348,349,350,351,352,353,354,356,362,363,371,375,382,385,387,390,],[-239,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,-29,-28,-12,-10,-240,-85,-105,-141,-88,-90,-101,-115,-137,-87,-240,-103,-102,-22,-17,203,-33,-34,-30,-32,-31,206,-36,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-20,-240,-35,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-18,-81,-44,-109,-106,-61,-82,-170,-172,-171,-207,-169,-176,-194,-173,-140,-112,-146,-23,-43,-81,-240,-207,-177,-178,206,-81,-110,-101,-209,-208,206,-210,-211,360,-78,-179,-194,206,-111,-240,-212,-81,-240,-194,206,]),'CASE':([5,244,245,307,360,369,372,373,380,385,389,],[-239,-42,-44,-43,-200,-240,-201,376,-202,-240,-203,]),'DEFER':([5,206,244,245,307,314,385,],[-239,-240,265,-44,-43,265,-240,]),'RPAREN':([5,26,34,41,45,48,49,53,54,55,57,58,60,62,63,64,67,68,71,72,74,77,78,80,81,89,90,97,99,104,113,114,116,118,120,121,124,129,130,134,135,139,140,141,142,157,159,161,162,164,165,166,168,169,170,171,172,173,176,177,180,193,200,201,207,211,212,213,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,247,248,249,251,252,253,254,256,298,301,302,304,342,363,],[-239,-240,-240,-240,-240,-233,84,88,-53,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,105,-74,110,-66,-29,-28,-12,-10,158,-232,-52,-105,-141,-88,-90,-101,-115,-137,-87,-240,-103,-102,-22,-17,-40,209,-37,-73,-65,-138,-139,-94,-92,-91,-107,-240,-108,-95,219,-60,-62,-93,-20,-39,-114,249,-113,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-18,-38,298,-109,-106,301,-61,302,-82,-140,-112,-146,-23,-110,-111,]),'SEMICOLON':([1,5,7,8,13,16,17,18,19,20,23,27,32,40,43,44,46,50,51,55,57,58,60,62,63,64,67,68,70,71,72,74,79,82,84,85,87,88,89,90,97,99,101,102,103,105,106,108,109,110,111,112,116,118,120,121,124,129,130,132,134,135,139,140,141,142,148,149,150,151,152,153,154,158,163,165,166,168,169,170,171,173,176,180,193,200,201,204,205,206,209,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,244,245,249,251,253,255,256,258,260,261,262,263,264,266,267,269,270,271,273,275,276,277,278,279,280,281,282,284,285,286,288,289,291,292,294,296,297,298,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,336,337,338,339,342,344,345,346,348,351,353,354,355,358,359,361,363,364,365,366,367,368,370,374,379,381,383,385,386,388,391,392,],[5,-239,-228,-229,5,-49,5,-48,-45,-46,-47,-230,-50,-71,-68,-67,-63,-234,-238,-11,-3,-4,-2,-15,-9,-14,-6,-7,-54,-8,-13,-5,-240,-70,-231,5,5,-51,-29,-28,-12,-10,-82,-240,-82,-72,5,-77,-75,-64,5,-69,-105,-141,-88,-90,-101,-115,-137,-55,-87,-240,-103,-102,-22,-17,-79,-33,-34,-30,-32,-31,-80,-36,-76,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-20,-84,-86,-240,-35,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-18,-240,-44,-109,-106,-61,5,-82,-152,-170,-162,5,-155,-159,-172,-171,-148,-161,-240,-198,-160,-158,-153,-207,-150,-156,-240,-166,-147,-101,-169,-176,-240,-149,-157,-173,-151,-41,-140,-112,-146,-23,-27,-167,-43,-168,-175,-222,-215,-217,-216,-240,-164,-240,-221,-219,-220,-177,-178,-218,-165,-110,-174,5,-101,-169,-176,-78,-179,-163,-240,-163,-154,-111,-214,-213,5,-211,-206,-163,-240,-163,-197,-193,-240,-199,-195,-163,-196,]),'FALLTHROUGH':([5,206,244,245,307,314,385,],[-239,-240,282,-44,-43,282,-240,]),'STRUCT':([33,35,36,42,47,56,69,83,86,93,96,98,100,102,104,137,144,156,158,160,202,208,209,217,257,],[-57,-16,-56,-16,-16,-16,-24,-16,-58,-16,-16,147,-59,-16,-16,-16,-16,-16,-36,-56,-16,-16,-35,-16,-16,]),'GREATERTHAN_EQUAL':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,189,-103,-138,-139,-94,-92,-91,-107,-108,-95,189,-93,189,-104,-89,189,189,-130,189,189,-120,-129,-133,-128,-132,-123,-131,189,-127,-121,189,-122,189,189,-109,-106,189,189,-101,189,-140,189,-112,-146,189,189,189,189,189,-110,-101,189,189,189,-111,189,]),'RCURL':([5,203,206,242,243,244,245,246,303,307,360,369,372,373,380,385,389,],[-239,-240,-240,256,-26,-42,-44,297,-25,-43,-200,-240,-201,379,-202,-240,-203,]),'RSHIFT_EQUAL':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,180,193,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-61,-101,324,-240,-140,-112,-146,-110,-101,-240,-111,]),'EQEQ':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,183,-103,-138,-139,-94,-92,-91,-107,-108,-95,183,-93,183,-104,-89,-126,-119,-130,183,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,183,-124,-109,-106,183,183,-101,183,-140,183,-112,-146,183,183,183,183,183,-110,-101,183,183,183,-111,183,]),'SWITCH':([5,206,244,245,307,314,385,],[-239,-240,283,-44,-43,283,-240,]),'ANDXOR_EQUAL':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,180,193,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-61,-101,330,-240,-140,-112,-146,-110,-101,-240,-111,]),'PLUS':([5,91,107,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,139,165,166,168,169,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,200,206,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,249,250,251,253,254,259,265,271,274,278,283,285,288,290,295,298,300,301,302,306,307,308,314,316,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,339,341,342,343,346,351,353,357,358,363,367,371,376,385,],[-239,123,123,123,-105,-144,-141,-143,-88,-90,123,-142,-101,-115,-137,123,-87,190,-145,-103,-138,-139,-94,-92,-91,-107,123,-108,123,-95,190,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-93,-240,190,-104,-89,190,190,123,-130,190,190,190,-129,-133,-128,-132,190,-131,190,-127,190,190,190,190,190,123,123,-44,-109,123,-106,190,190,123,123,123,123,-207,123,-101,190,123,123,-140,190,-112,-146,190,-43,190,123,123,190,123,-190,-180,-191,-182,-185,-188,-192,-181,-189,123,-186,-187,-183,-184,190,190,-110,123,-101,190,190,190,123,-111,190,123,123,-240,]),'DIVIDE_EQUAL':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,180,193,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-61,-101,335,-240,-140,-112,-146,-110,-101,-240,-111,]),'INCREMENT':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,285,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-101,336,-140,-112,-146,-110,-101,336,-111,]),'IMPORT':([5,6,9,10,25,],[-239,-240,-224,14,-225,]),'STRING':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,137,144,156,158,160,202,208,209,217,257,],[-57,63,-56,63,63,63,63,-58,63,63,63,-59,63,63,63,63,63,-36,-56,63,63,-35,63,63,]),'IDENTIFIER':([2,5,14,15,21,22,24,26,33,34,35,36,41,42,45,47,48,49,52,53,54,56,73,75,77,78,80,81,83,86,91,92,93,96,100,102,104,107,113,114,115,117,119,122,123,133,136,137,144,156,158,160,162,164,172,174,175,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,202,203,206,208,209,217,222,240,242,243,244,245,250,257,259,265,268,271,274,278,281,283,289,290,295,303,307,314,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,343,358,371,376,385,],[8,-239,8,36,38,36,47,-240,-57,-240,61,-56,-240,61,-240,61,-233,8,86,36,-53,61,99,100,36,-74,47,-66,61,-58,124,61,61,61,-59,61,160,124,-232,-52,124,-144,-143,124,-142,124,-145,61,61,61,-36,-56,-73,-65,124,124,218,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,61,-240,-240,160,-35,61,124,124,36,-26,285,-44,124,61,124,124,309,124,124,-207,309,124,309,124,124,-25,-43,285,346,124,-190,-180,-191,-182,-185,-188,-192,-181,-189,124,-186,-187,-183,-184,124,124,346,124,-240,]),'SHORT_ASSIGNMENT':([285,346,],[321,321,]),'$end':([3,4,5,6,9,10,11,12,25,37,],[-1,0,-239,-240,-224,-240,-223,-227,-225,-226,]),'AND':([5,91,107,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,139,165,166,168,169,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,200,206,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,249,250,251,253,254,259,265,271,274,278,283,285,288,290,295,298,300,301,302,306,307,308,314,316,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,339,341,342,343,346,351,353,357,358,363,367,371,376,385,],[-239,136,136,136,-105,-144,-141,-143,-88,-90,136,-142,-101,-115,-137,136,-87,195,-145,-103,-138,-139,-94,-92,-91,-107,136,-108,136,-95,195,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,-93,-240,195,-104,-89,-126,195,136,-130,195,195,-120,-129,-133,-128,-132,-123,-131,195,-127,-121,-134,-122,195,195,136,136,-44,-109,136,-106,195,195,136,136,136,136,-207,136,-101,195,136,136,-140,195,-112,-146,195,-43,195,136,136,195,136,-190,-180,-191,-182,-185,-188,-192,-181,-189,136,-186,-187,-183,-184,195,195,-110,136,-101,195,195,195,136,-111,195,136,136,-240,]),'MALLOC':([5,91,107,115,117,119,122,123,133,136,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,206,222,240,244,245,250,259,265,271,274,278,283,290,295,307,314,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,343,358,371,376,385,],[-239,125,125,125,-144,-143,125,-142,125,-145,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-240,125,125,125,-44,125,125,125,125,125,-207,125,125,125,-43,125,125,125,-190,-180,-191,-182,-185,-188,-192,-181,-189,125,-186,-187,-183,-184,125,125,125,125,-240,]),'MODULO':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,187,-103,-138,-139,-94,-92,-91,-107,-108,-95,187,-93,187,-104,-89,187,187,187,187,187,187,187,-133,-128,187,187,187,187,-127,187,187,187,187,187,-109,-106,187,187,-101,187,-140,187,-112,-146,187,187,187,187,187,-110,-101,187,187,187,-111,187,]),'GOTO':([5,206,244,245,307,314,385,],[-239,-240,268,-44,-43,268,-240,]),'FOR':([5,206,244,245,307,314,385,],[-239,-240,278,-44,-43,278,-240,]),'PACKAGE':([0,],[2,]),'COMPARE_AND':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,197,-103,-138,-139,-94,-92,-91,-107,-108,-95,197,-93,197,-104,-89,-126,-119,-130,197,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,197,197,-101,197,-140,197,-112,-146,197,197,197,197,197,-110,-101,197,197,197,-111,197,]),'LSHIFT_EQUAL':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,180,193,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-61,-101,322,-240,-140,-112,-146,-110,-101,-240,-111,]),'RSQUARE':([55,57,58,60,62,63,64,65,67,68,71,72,74,89,90,95,97,99,116,118,120,121,124,129,130,134,139,140,141,142,143,145,146,165,166,168,169,170,171,173,176,200,201,215,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,249,250,251,256,298,299,300,301,302,304,342,357,363,],[-11,-3,-4,-2,-15,-9,-14,93,-6,-7,-8,-13,-5,-29,-28,144,-12,-10,-105,-141,-88,-90,-101,-115,-137,-87,-103,-102,-22,-17,-21,-19,202,-138,-139,-94,-92,-91,-107,-108,-95,-93,-20,-136,251,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-18,-109,-240,-106,-82,-140,342,-135,-112,-146,-23,-110,363,-111,]),'XOR':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,191,-103,-138,-139,-94,-92,-91,-107,-108,-95,191,-93,191,-104,-89,-126,191,-130,191,191,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,191,191,-109,-106,191,191,-101,191,-140,191,-112,-146,191,191,191,191,191,-110,-101,191,191,191,-111,191,]),'EQUALS':([47,55,57,58,59,60,62,63,64,67,68,71,72,74,79,89,90,97,99,116,118,120,121,124,129,130,134,139,140,141,142,165,166,168,169,170,171,173,176,180,193,200,201,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,249,251,253,256,285,287,288,298,301,302,304,342,346,351,363,],[83,-11,-3,-4,91,-2,-15,-9,-14,-6,-7,-8,-13,-5,107,-29,-28,-12,-10,-105,-141,-88,-90,-101,-115,-137,-87,-103,-102,-22,-17,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-20,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-18,-109,-106,-61,-82,-101,328,-240,-140,-112,-146,-23,-110,-101,-240,-111,]),'ELSE':([297,370,374,],[-41,-163,382,]),'PLUSEQUAL':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,180,193,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-61,-101,329,-240,-140,-112,-146,-110,-101,-240,-111,]),'GREATERTHAN':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,194,-103,-138,-139,-94,-92,-91,-107,-108,-95,194,-93,194,-104,-89,194,194,-130,194,194,-120,-129,-133,-128,-132,-123,-131,194,-127,-121,194,-122,194,194,-109,-106,194,194,-101,194,-140,194,-112,-146,194,194,194,194,194,-110,-101,194,194,194,-111,194,]),'FUNC':([5,6,9,10,11,12,25,37,],[-239,-240,-224,-240,21,-227,-225,-226,]),'GO':([5,206,244,245,307,314,385,],[-239,-240,259,-44,-43,259,-240,]),'OREQUAL':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,180,193,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-61,-101,333,-240,-140,-112,-146,-110,-101,-240,-111,]),'IF':([5,206,244,245,307,314,382,385,],[-239,-240,295,-44,-43,295,295,-240,]),'IMAGINARY_LIT':([5,91,107,115,117,119,122,123,133,136,138,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,206,222,240,244,245,250,259,265,271,274,278,283,290,295,307,314,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,343,358,371,376,385,],[-239,-99,-99,-99,-144,-143,-99,-142,-99,-145,200,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-240,-99,-99,-99,-44,-99,-99,-99,-99,-99,-207,-99,-99,-99,-43,-99,-99,-99,-190,-180,-191,-182,-185,-188,-192,-181,-189,-99,-186,-187,-183,-184,-99,-99,-99,-99,-240,]),'MAP':([33,35,36,42,47,56,83,86,93,96,100,102,104,137,144,156,158,160,202,208,209,217,257,],[-57,66,-56,66,66,66,66,-58,66,66,-59,66,66,66,66,66,-36,-56,66,66,-35,66,66,]),'BOOL_LIT':([5,91,107,115,117,119,122,123,126,133,136,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,206,222,240,244,245,250,259,265,271,274,278,283,290,295,307,314,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,343,358,371,376,385,],[-239,-96,-96,-96,-144,-143,-96,-142,168,-96,-145,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-240,-96,-96,-96,-44,-96,-96,-96,-96,-96,-207,-96,-96,-96,-43,-96,-96,-96,-190,-180,-191,-182,-185,-188,-192,-181,-189,-96,-186,-187,-183,-184,-96,-96,-96,-96,-240,]),'TYPECAST':([5,91,107,115,117,119,122,123,133,136,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,206,222,240,244,245,250,259,265,271,274,278,283,290,295,307,314,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,343,358,371,376,385,],[-239,137,137,137,-144,-143,137,-142,137,-145,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-240,137,137,137,-44,137,137,137,137,137,-207,137,137,137,-43,137,137,137,-190,-180,-191,-182,-185,-188,-192,-181,-189,137,-186,-187,-183,-184,137,137,137,137,-240,]),'MULTIPLY':([5,33,35,36,42,47,56,83,86,91,93,96,100,102,104,107,115,116,117,118,119,120,121,122,123,124,129,130,133,134,135,136,137,139,144,156,158,160,165,166,168,169,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,200,202,206,208,209,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,245,249,250,251,253,254,257,259,265,271,274,278,283,285,288,290,295,298,300,301,302,306,307,308,314,316,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,339,341,342,343,346,351,353,357,358,363,367,371,376,385,],[-239,-57,56,-56,56,56,56,56,-58,117,56,56,-59,56,56,117,117,-105,-144,-141,-143,-88,-90,117,-142,-101,-115,-137,117,-87,186,-145,56,-103,56,56,-36,-56,-138,-139,-94,-92,-91,-107,117,-108,117,-95,186,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-93,56,-240,56,-35,186,56,-104,-89,186,186,117,186,186,186,186,186,-133,-128,186,186,186,186,-127,186,186,186,186,186,117,117,-44,-109,117,-106,186,186,56,117,117,117,117,-207,117,-101,186,117,117,-140,186,-112,-146,186,-43,186,117,117,186,117,-190,-180,-191,-182,-185,-188,-192,-181,-189,117,-186,-187,-183,-184,186,186,-110,117,-101,186,186,186,117,-111,186,117,117,-240,]),'LESSTHAN_EQUAL':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,196,-103,-138,-139,-94,-92,-91,-107,-108,-95,196,-93,196,-104,-89,196,196,-130,196,196,-120,-129,-133,-128,-132,-123,-131,196,-127,-121,196,-122,196,196,-109,-106,196,196,-101,196,-140,196,-112,-146,196,196,196,196,196,-110,-101,196,196,196,-111,196,]),'INT':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,137,144,156,158,160,202,208,209,217,257,],[-57,67,-56,67,67,67,67,-58,67,67,67,-59,67,67,67,67,67,-36,-56,67,67,-35,67,67,]),'TIMESEQUAL':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,180,193,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-61,-101,334,-240,-140,-112,-146,-110,-101,-240,-111,]),'MINUSEQUAL':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,180,193,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-61,-101,325,-240,-140,-112,-146,-110,-101,-240,-111,]),'FLOAT':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,137,144,156,158,160,202,208,209,217,257,],[-57,68,-56,68,68,68,68,-58,68,68,68,-59,68,68,68,68,68,-36,-56,68,68,-35,68,68,]),'FLOAT_LIT':([5,91,107,115,117,119,122,123,127,133,136,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,206,222,240,244,245,250,259,265,271,274,278,283,290,295,307,314,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,343,358,371,376,385,],[-239,-98,-98,-98,-144,-143,-98,-142,169,-98,-145,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-240,-98,-98,-98,-44,-98,-98,-98,-98,-98,-207,-98,-98,-98,-43,-98,-98,-98,-190,-180,-191,-182,-185,-188,-192,-181,-189,-98,-186,-187,-183,-184,-98,-98,-98,-98,-240,]),'BREAK':([5,206,244,245,307,314,385,],[-239,-240,289,-44,-43,289,-240,]),'COMPARE_OR':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,182,-103,-138,-139,-94,-92,-91,-107,-108,-95,182,-93,182,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,182,182,-101,182,-140,182,-112,-146,182,182,182,182,182,-110,-101,182,182,182,-111,182,]),'INT_LIT':([5,65,91,94,107,115,117,119,122,123,128,133,136,167,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,206,210,222,240,244,245,250,259,265,271,274,278,283,290,295,307,314,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,343,358,371,376,385,],[-239,-97,-97,143,-97,-97,-144,-143,-97,-142,170,-97,-145,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-240,248,-97,-97,-97,-44,-97,-97,-97,-97,-97,-207,-97,-97,-97,-43,-97,-97,-97,-190,-180,-191,-182,-185,-188,-192,-181,-189,-97,-186,-187,-183,-184,-97,-97,-97,-97,-240,]),'CONTINUE':([5,206,244,245,307,314,385,],[-239,-240,281,-44,-43,281,-240,]),'BOOL':([33,35,36,42,47,56,83,86,92,93,96,100,102,104,137,144,156,158,160,202,208,209,217,257,],[-57,71,-56,71,71,71,71,-58,71,71,71,-59,71,71,71,71,71,-36,-56,71,71,-35,71,71,]),'STRING_LIT':([5,8,14,26,28,29,30,31,48,49,91,107,113,115,117,119,122,123,131,133,136,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,206,222,240,244,245,250,259,265,271,274,278,283,290,295,307,314,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,343,358,371,376,385,],[-239,-229,-240,-240,-237,-236,51,-235,-233,-240,-100,-100,-232,-100,-144,-143,-100,-142,176,-100,-145,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-240,-100,-100,-100,-44,-100,-100,-100,-100,-100,-207,-100,-100,-100,-43,-100,-100,-100,-190,-180,-191,-182,-185,-188,-192,-181,-189,-100,-186,-187,-183,-184,-100,-100,-100,-100,-240,]),'NOT':([5,91,107,115,117,119,122,123,133,136,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,206,222,240,244,245,250,259,265,271,274,278,283,290,295,307,314,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,343,358,371,376,385,],[-239,122,122,122,-144,-143,122,-142,122,-145,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-240,122,122,122,-44,122,122,122,122,122,-207,122,122,122,-43,122,122,122,-190,-180,-191,-182,-185,-188,-192,-181,-189,122,-186,-187,-183,-184,122,122,122,122,-240,]),'ANDEQUAL':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,180,193,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,285,287,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-60,-62,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-61,-101,332,-240,-140,-112,-146,-110,-101,-240,-111,]),'DECREMENT':([116,118,120,121,124,129,130,134,139,165,166,168,169,170,171,173,176,200,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,285,288,298,301,302,342,346,351,363,],[-105,-141,-88,-90,-101,-115,-137,-87,-103,-138,-139,-94,-92,-91,-107,-108,-95,-93,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-109,-106,-101,337,-140,-112,-146,-110,-101,337,-111,]),'COMMA':([33,36,55,57,58,60,62,63,64,67,68,71,72,74,86,89,90,97,99,100,116,118,120,121,124,129,130,134,135,139,140,141,142,157,159,160,161,165,166,168,169,170,171,173,176,180,193,200,201,207,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,247,249,251,253,256,285,288,298,301,302,304,342,346,351,363,],[52,75,-11,-3,-4,-2,-15,-9,-14,-6,-7,-8,-13,-5,-58,-29,-28,-12,-10,-59,-105,-141,-88,-90,-101,-115,-137,-87,-240,-103,-102,-22,-17,-40,208,75,-37,-138,-139,-94,-92,-91,-107,-108,-95,222,-62,-93,-20,-39,-104,-89,-126,-119,-130,-116,-118,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,-117,-124,-18,-38,-109,-106,-61,-82,-101,-240,-140,-112,-146,-23,-110,-101,-240,-111,]),'TYPE':([5,6,9,10,11,12,25,33,35,36,37,42,47,56,83,86,92,93,96,100,102,104,137,144,156,158,160,202,206,208,209,217,244,245,257,307,314,385,],[-239,-240,-224,-240,24,-227,-225,-57,73,-56,-226,73,73,73,73,-58,73,73,73,-59,73,73,73,73,73,-36,-56,73,-240,73,-35,73,24,-44,73,-43,24,-240,]),'OR':([116,118,120,121,124,129,130,134,135,139,165,166,168,169,170,171,173,176,177,200,216,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,249,251,253,254,285,288,298,300,301,302,306,308,320,339,341,342,346,351,353,357,363,367,],[-105,-141,-88,-90,-101,-115,-137,-87,198,-103,-138,-139,-94,-92,-91,-107,-108,-95,198,-93,198,-104,-89,-126,198,-130,198,198,-120,-129,-133,-128,-132,-123,-131,-125,-127,-121,-134,-122,198,-124,-109,-106,198,198,-101,198,-140,198,-112,-146,198,198,198,198,198,-110,-101,198,198,198,-111,198,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([155,],[204,]),'Conversion':([91,107,115,122,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ContinueStmt':([244,314,],[258,258,]),'ExpressionRep':([135,288,351,],[180,180,180,]),'ExpressionStmt':([244,314,316,371,],[260,260,260,260,]),'ScanStmt':([244,314,],[261,261,]),'Statement':([244,314,],[262,344,]),'IfStmt':([244,314,382,],[263,263,388,]),'FallThroughStmt':([244,314,],[264,264,]),'StatementRep':([206,385,],[244,244,]),'TypeToken':([35,42,47,56,83,92,93,96,102,104,137,144,156,202,208,217,257,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'AliasDecl':([24,80,],[44,44,]),'PackageNameDotOpt':([14,49,],[30,30,]),'TypeName':([35,42,47,56,83,92,93,96,102,104,137,144,156,202,208,217,257,],[60,60,60,60,60,140,60,60,60,60,60,60,60,60,60,60,60,]),'ExprCaseClause':([373,],[380,]),'ParametersList':([104,],[159,]),'ParameterDecl':([104,208,],[161,247,]),'FuncScope':([69,],[98,]),'FunctionName':([21,],[39,]),'LabeledStmt':([244,314,],[269,269,]),'KeyType':([96,],[146,]),'StatementList':([206,385,],[246,389,]),'TypeAssertion':([130,],[173,]),'ConditionOpt':([358,],[366,]),'EndScope_1':([355,359,370,379,391,],[361,368,374,386,392,]),'ElementType':([93,144,202,],[142,201,241,]),'RetTypeSet':([103,],[155,]),'PointerType':([35,42,47,56,83,93,96,102,104,137,144,156,202,208,217,257,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'EndScope':([101,103,256,],[148,154,304,]),'VarSpecRep':([41,],[77,]),'VarDecl':([11,244,314,],[23,23,23,]),'PrintStmt':([244,314,],[270,270,]),'ConstSpecRep':([34,],[53,]),'Operand':([91,107,115,122,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'TypeSpec':([24,80,],[46,111,]),'CCreateScope':([278,320,],[316,352,]),'Parameters':([76,102,],[102,149,]),'UnaryOp':([91,107,115,122,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'PackageName':([2,14,49,],[7,29,29,]),'SourceFile':([0,],[3,]),'ExpressionListPureOpt':([271,],[311,]),'Label':([244,268,281,289,314,],[272,310,319,319,272,]),'FunctionDecl':([11,],[16,]),'TopLevelDecl':([11,],[17,]),'ExprSwitchStmt':([244,314,],[273,273,]),'IdentifierList':([15,22,53,77,104,208,242,],[35,42,35,42,156,156,257,]),'IdentifierRep':([15,22,53,77,104,208,242,],[33,33,33,33,33,33,33,]),'Type':([35,42,47,56,83,93,96,102,104,137,144,156,202,208,217,257,],[59,79,82,89,112,141,145,150,157,199,141,207,141,157,252,305,]),'ImportDeclRep':([6,],[10,]),'GoStmt':([244,314,],[275,275,]),'DeferStmt':([244,314,],[276,276,]),'PackageClause':([0,],[1,]),'ResultOpt':([102,],[151,]),'IncDecStmt':([244,314,316,371,],[267,267,267,267,]),'GotoStmt':([244,314,],[277,277,]),'TopLevelDeclRep':([10,],[11,]),'C':([91,107,115,122,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'Semi':([1,13,17,85,87,106,111,255,262,345,366,],[6,25,37,113,114,162,164,303,307,358,371,]),'PrimaryExpr':([91,107,115,122,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'S':([91,107,115,122,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'StartSwitch':([360,],[369,]),'assign_op':([287,],[331,]),'Signature':([76,],[103,]),'Block':([155,340,349,362,390,],[205,355,359,370,391,]),'ExprCaseClauseList':([369,],[373,]),'SwitchStmt':([244,314,],[280,280,]),'VarSpec':([22,77,],[40,106,]),'Result':([102,],[153,]),'Assignment':([244,314,316,371,],[266,266,266,266,]),'ExpressionListTypeOpt':([172,],[212,]),'QualifiedIdent':([35,42,47,56,83,92,93,96,102,104,137,144,156,202,208,217,257,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'Literal':([91,107,115,122,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'ImportDecl':([10,],[13,]),'OperandName':([91,107,115,122,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'AssignOp':([287,],[323,]),'LabelOpt':([281,289,],[318,338,]),'FieldDeclRep':([203,],[242,]),'start':([0,],[4,]),'Declaration':([11,244,314,],[18,284,284,]),'Condition':([316,358,],[347,364,]),'StructType':([69,],[97,]),'B':([91,107,115,122,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'ConstSpec':([15,53,],[32,87,]),'F':([91,107,115,122,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'epsilon':([6,10,14,26,34,41,45,49,79,102,135,172,174,203,206,244,250,271,281,288,289,314,316,351,358,369,371,374,385,],[9,12,28,48,54,78,81,28,108,152,193,211,215,243,245,286,215,312,317,193,317,286,348,193,365,372,286,381,245,]),'ConditionBlockOpt':([316,],[349,]),'ExpressionList':([91,107,172,244,271,274,314,316,331,371,376,],[132,163,213,287,313,315,287,287,354,287,384,]),'SimpleStmt':([244,314,316,371,],[291,291,345,375,]),'ImportSpecRep':([26,],[49,]),'Expression':([91,107,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[135,135,177,135,216,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,253,254,288,300,306,308,135,135,320,339,341,288,351,353,135,357,367,288,135,]),'ImportPath':([30,],[50,]),'ExprSwitchCase':([373,],[377,]),'ExpressionOpt':([174,250,],[214,299,]),'ST':([35,42,47,56,83,93,96,102,104,137,144,156,202,208,217,257,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'TypeExprListOpt':([35,],[70,]),'ReturnStmt':([244,314,],[279,279,]),'ConstDecl':([11,244,314,],[19,19,19,]),'Slice':([130,],[171,]),'ArrayType':([35,42,47,56,83,93,96,102,104,137,144,156,202,208,217,257,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ForStmt':([244,314,],[292,292,]),'Function':([76,],[101,]),'ImportSpec':([14,49,],[27,85,]),'TypeLit':([35,42,47,56,83,93,96,102,104,137,144,156,202,208,217,257,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'TypeSpecRep':([45,],[80,]),'CreateScope':([39,244,314,341,382,],[76,293,293,356,387,]),'SliceType':([35,42,47,56,83,93,96,102,104,137,144,156,202,208,217,257,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'TypeDecl':([11,244,314,],[20,20,20,]),'BaseType':([56,],[90,]),'I':([65,91,107,115,122,133,167,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[94,128,128,128,128,128,210,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'IFSYM':([293,356,387,],[340,362,390,]),'UnaryExpr':([91,107,115,122,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[129,129,165,166,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'ArrayLength':([65,],[95,]),'MapType':([35,42,47,56,83,93,96,102,104,137,144,156,202,208,217,257,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ForClause':([316,],[350,]),'ShortVarDecl':([244,314,316,371,],[294,294,294,294,]),'TypeDef':([24,80,],[43,43,]),'FieldDecl':([242,],[255,]),'BreakStmt':([244,314,],[296,296,]),'BasicLit':([91,107,115,122,133,172,174,178,179,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,222,240,244,250,259,265,271,274,283,290,295,314,316,321,331,343,358,371,376,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'ExpressionListOpt':([79,],[109,]),'ElseOpt':([374,],[383,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',242),
  ('Type -> TypeName','Type',1,'p_type','parser.py',251),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',252),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','parser.py',256),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',257),
  ('TypeToken -> INT','TypeToken',1,'p_type_token','parser.py',267),
  ('TypeToken -> FLOAT','TypeToken',1,'p_type_token','parser.py',268),
  ('TypeToken -> BOOL','TypeToken',1,'p_type_token','parser.py',269),
  ('TypeToken -> STRING','TypeToken',1,'p_type_token','parser.py',270),
  ('TypeToken -> TYPE IDENTIFIER','TypeToken',2,'p_type_token','parser.py',271),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',307),
  ('TypeLit -> ST StructType','TypeLit',2,'p_type_lit','parser.py',308),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',309),
  ('TypeLit -> MapType','TypeLit',1,'p_type_lit','parser.py',310),
  ('TypeLit -> SliceType','TypeLit',1,'p_type_lit','parser.py',311),
  ('ST -> <empty>','ST',0,'p_S_T','parser.py',318),
  ('SliceType -> LSQUARE RSQUARE ElementType','SliceType',3,'p_slice_type','parser.py',333),
  ('MapType -> MAP LSQUARE KeyType RSQUARE ElementType','MapType',5,'p_map_type','parser.py',342),
  ('KeyType -> Type','KeyType',1,'p_key_type','parser.py',349),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE ElementType','ArrayType',4,'p_array_type','parser.py',356),
  ('ArrayLength -> I INT_LIT','ArrayLength',2,'p_array_length','parser.py',382),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',388),
  ('StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL EndScope','StructType',6,'p_struct_type','parser.py',393),
  ('FuncScope -> <empty>','FuncScope',0,'p_func_scope','parser.py',401),
  ('FieldDeclRep -> FieldDeclRep FieldDecl Semi','FieldDeclRep',3,'p_field_decl_rep','parser.py',409),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',410),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_field_decl','parser.py',423),
  ('PointerType -> MULTIPLY BaseType','PointerType',2,'p_point_type','parser.py',444),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',452),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_sign','parser.py',459),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',485),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',486),
  ('Result -> Parameters','Result',1,'p_result','parser.py',490),
  ('Result -> Type','Result',1,'p_result','parser.py',491),
  ('Parameters -> LPAREN ParametersList RPAREN','Parameters',3,'p_params','parser.py',497),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_params','parser.py',498),
  ('ParametersList -> ParameterDecl','ParametersList',1,'p_param_list','parser.py',521),
  ('ParametersList -> ParametersList COMMA ParameterDecl','ParametersList',3,'p_param_list','parser.py',522),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_param_decl','parser.py',534),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_param_decl','parser.py',535),
  ('Block -> LCURL StatementList RCURL','Block',3,'p_block','parser.py',572),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',576),
  ('StatementRep -> StatementRep Statement Semi','StatementRep',3,'p_stat_rep','parser.py',580),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',581),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',594),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',595),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',596),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',600),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',601),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',608),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',609),
  ('ConstSpecRep -> ConstSpecRep ConstSpec Semi','ConstSpecRep',3,'p_const_spec_rep','parser.py',616),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',617),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',626),
  ('TypeExprListOpt -> Type EQUALS ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',648),
  ('IdentifierList -> IDENTIFIER','IdentifierList',1,'p_identifier_list','parser.py',662),
  ('IdentifierList -> IdentifierRep','IdentifierList',1,'p_identifier_list','parser.py',663),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',680),
  ('IdentifierRep -> IDENTIFIER COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',681),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',712),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',728),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',729),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',752),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',753),
  ('TypeSpecRep -> TypeSpecRep TypeSpec Semi','TypeSpecRep',3,'p_type_spec_rep','parser.py',760),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',761),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',768),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',769),
  ('AliasDecl -> IDENTIFIER EQUALS Type','AliasDecl',3,'p_alias_decl','parser.py',773),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_type_def','parser.py',785),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',798),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',799),
  ('VarSpecRep -> VarSpecRep VarSpec Semi','VarSpecRep',3,'p_var_spec_rep','parser.py',806),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',807),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',817),
  ('ExpressionListOpt -> EQUALS ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',901),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',902),
  ('ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',912),
  ('FunctionDecl -> FUNC FunctionName CreateScope Function EndScope','FunctionDecl',5,'p_func_decl','parser.py',942),
  ('FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope','FunctionDecl',5,'p_func_decl','parser.py',943),
  ('CreateScope -> <empty>','CreateScope',0,'p_create_scope','parser.py',965),
  ('EndScope -> <empty>','EndScope',0,'p_end_scope','parser.py',969),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',973),
  ('Function -> Signature RetTypeSet FunctionBody','Function',3,'p_func','parser.py',985),
  ('RetTypeSet -> <empty>','RetTypeSet',0,'p_ret_type_set','parser.py',1004),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',1018),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',1030),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',1031),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',1032),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',1039),
  ('BasicLit -> I INT_LIT','BasicLit',2,'p_basic_lit','parser.py',1044),
  ('BasicLit -> F FLOAT_LIT','BasicLit',2,'p_basic_lit','parser.py',1045),
  ('BasicLit -> C IMAGINARY_LIT','BasicLit',2,'p_basic_lit','parser.py',1046),
  ('BasicLit -> B BOOL_LIT','BasicLit',2,'p_basic_lit','parser.py',1047),
  ('BasicLit -> S STRING_LIT','BasicLit',2,'p_basic_lit','parser.py',1048),
  ('B -> <empty>','B',0,'p_B','parser.py',1072),
  ('I -> <empty>','I',0,'p_I','parser.py',1078),
  ('F -> <empty>','F',0,'p_F','parser.py',1084),
  ('C -> <empty>','C',0,'p_C','parser.py',1090),
  ('S -> <empty>','S',0,'p_S','parser.py',1096),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',1102),
  ('QualifiedIdent -> IDENTIFIER DOT TypeName','QualifiedIdent',3,'p_qualified_ident','parser.py',1151),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',1163),
  ('PrimaryExpr -> PrimaryExpr DOT IDENTIFIER','PrimaryExpr',3,'p_prim_expr','parser.py',1164),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',1165),
  ('PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE','PrimaryExpr',4,'p_prim_expr','parser.py',1166),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',1167),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser.py',1168),
  ('PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN','PrimaryExpr',4,'p_prim_expr','parser.py',1169),
  ('Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE','Slice',5,'p_slice','parser.py',1410),
  ('Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE','Slice',7,'p_slice','parser.py',1411),
  ('TypeAssertion -> DOT LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser.py',1419),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1424),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1425),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser.py',1429),
  ('Expression -> Expression COMPARE_OR Expression','Expression',3,'p_expr','parser.py',1430),
  ('Expression -> Expression COMPARE_AND Expression','Expression',3,'p_expr','parser.py',1431),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expr','parser.py',1432),
  ('Expression -> Expression NOTEQUALS Expression','Expression',3,'p_expr','parser.py',1433),
  ('Expression -> Expression LESSTHAN Expression','Expression',3,'p_expr','parser.py',1434),
  ('Expression -> Expression GREATERTHAN Expression','Expression',3,'p_expr','parser.py',1435),
  ('Expression -> Expression LESSTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',1436),
  ('Expression -> Expression GREATERTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',1437),
  ('Expression -> Expression OR Expression','Expression',3,'p_expr','parser.py',1438),
  ('Expression -> Expression XOR Expression','Expression',3,'p_expr','parser.py',1439),
  ('Expression -> Expression ANDXOR Expression','Expression',3,'p_expr','parser.py',1440),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expr','parser.py',1441),
  ('Expression -> Expression MODULO Expression','Expression',3,'p_expr','parser.py',1442),
  ('Expression -> Expression LSHIFT Expression','Expression',3,'p_expr','parser.py',1443),
  ('Expression -> Expression RSHIFT Expression','Expression',3,'p_expr','parser.py',1444),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expr','parser.py',1445),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expr','parser.py',1446),
  ('Expression -> Expression MULTIPLY Expression','Expression',3,'p_expr','parser.py',1447),
  ('Expression -> Expression AND Expression','Expression',3,'p_expr','parser.py',1448),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',1555),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',1556),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',1560),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1561),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1562),
  ('UnaryExpr -> MALLOC LPAREN I INT_LIT RPAREN','UnaryExpr',5,'p_unary_expr','parser.py',1563),
  ('UnaryExpr -> NULL','UnaryExpr',1,'p_unary_expr','parser.py',1564),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',1636),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',1637),
  ('UnaryOp -> MULTIPLY','UnaryOp',1,'p_unary_op','parser.py',1638),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser.py',1639),
  ('Conversion -> TYPECAST Type LPAREN Expression RPAREN','Conversion',5,'p_conversion','parser.py',1653),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',1661),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',1662),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',1663),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',1664),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',1665),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',1666),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',1667),
  ('Statement -> CreateScope IFSYM Block EndScope_1','Statement',4,'p_statement','parser.py',1668),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',1669),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',1670),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',1671),
  ('Statement -> DeferStmt','Statement',1,'p_statement','parser.py',1672),
  ('Statement -> FallThroughStmt','Statement',1,'p_statement','parser.py',1673),
  ('Statement -> GoStmt','Statement',1,'p_statement','parser.py',1674),
  ('Statement -> PrintStmt','Statement',1,'p_statement','parser.py',1675),
  ('Statement -> ScanStmt','Statement',1,'p_statement','parser.py',1676),
  ('EndScope_1 -> <empty>','EndScope_1',0,'p_end_scope_new','parser.py',1683),
  ('PrintStmt -> PRINT ExpressionList','PrintStmt',2,'p_print_stmt','parser.py',1690),
  ('ScanStmt -> SCAN Expression','ScanStmt',2,'p_scan_stmt','parser.py',1715),
  ('FallThroughStmt -> FALLTHROUGH','FallThroughStmt',1,'p_fallthrough_stmt','parser.py',1739),
  ('GoStmt -> GO Expression','GoStmt',2,'p_go_stmt','parser.py',1743),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_defer_stmt','parser.py',1749),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',1754),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1755),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1756),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',1757),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',1758),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',1763),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',1781),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',1786),
  ('IncDecStmt -> Expression INCREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1792),
  ('IncDecStmt -> Expression DECREMENT','IncDecStmt',2,'p_inc_dec','parser.py',1793),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',1800),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1851),
  ('AssignOp -> PLUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1855),
  ('AssignOp -> MINUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1856),
  ('AssignOp -> TIMESEQUAL','AssignOp',1,'p_AssignOp','parser.py',1857),
  ('AssignOp -> DIVIDE_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1858),
  ('AssignOp -> MODEQUAL','AssignOp',1,'p_AssignOp','parser.py',1859),
  ('AssignOp -> ANDEQUAL','AssignOp',1,'p_AssignOp','parser.py',1860),
  ('AssignOp -> OREQUAL','AssignOp',1,'p_AssignOp','parser.py',1861),
  ('AssignOp -> XOREQUAL','AssignOp',1,'p_AssignOp','parser.py',1862),
  ('AssignOp -> ANDXOR_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1863),
  ('AssignOp -> LSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1864),
  ('AssignOp -> RSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1865),
  ('AssignOp -> EQUALS','AssignOp',1,'p_AssignOp','parser.py',1866),
  ('IfStmt -> IF Expression CreateScope IFSYM Block EndScope_1 ElseOpt','IfStmt',7,'p_if_statement','parser.py',1872),
  ('IFSYM -> <empty>','IFSYM',0,'p_if_sym','parser.py',1889),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1895),
  ('ElseOpt -> ELSE CreateScope IFSYM Block EndScope_1','ElseOpt',5,'p_else_opt','parser.py',1896),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1897),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',1909),
  ('ExprSwitchStmt -> SWITCH Expression CCreateScope LCURL StartSwitch ExprCaseClauseList RCURL EndScope_1','ExprSwitchStmt',8,'p_ExprSwitchStmt','parser.py',1913),
  ('StartSwitch -> <empty>','StartSwitch',0,'p_start_switch','parser.py',1944),
  ('ExprCaseClauseList -> epsilon','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',1960),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',1961),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',1977),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',2000),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',2001),
  ('ForStmt -> FOR CCreateScope ConditionBlockOpt Block EndScope_1','ForStmt',5,'p_for','parser.py',2025),
  ('CCreateScope -> <empty>','CCreateScope',0,'p_c_create_scope','parser.py',2036),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',2041),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',2042),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',2043),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',2054),
  ('ForClause -> SimpleStmt Semi ConditionOpt Semi SimpleStmt','ForClause',5,'p_forclause','parser.py',2059),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',2076),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',2077),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',2084),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',2122),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',2123),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',2128),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',2132),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',2136),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',2137),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',2142),
  ('SourceFile -> PackageClause Semi ImportDeclRep TopLevelDeclRep','SourceFile',4,'p_source_file','parser.py',2148),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',2156),
  ('ImportDeclRep -> ImportDeclRep ImportDecl Semi','ImportDeclRep',3,'p_import_decl_rep','parser.py',2157),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl Semi','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',2166),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',2167),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',2178),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',2183),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',2194),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',2195),
  ('ImportSpecRep -> ImportSpecRep ImportSpec Semi','ImportSpecRep',3,'p_import_spec_rep','parser.py',2202),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',2203),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',2211),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2219),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2220),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',2221),
  ('ImportPath -> STRING_LIT','ImportPath',1,'p_import_path','parser.py',2229),
  ('Semi -> SEMICOLON','Semi',1,'p_SemiColon','parser.py',2237),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',2250),
]
