
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDENTIFIERrightEQUALSNOTleftINT_LITleftFLOAT_LITleftSTRING_LITleftCOMPARE_ORleftCOMPARE_ANDleftEQEQNOTEQUALSleftORleftXORleftANDANDXORleftLESSTHANGREATERTHANLESSTHAN_EQUALGREATERTHAN_EQUALleftPLUSMINUSleftLSHIFTRSHIFTleftMULTIPLYDIVIDEMODULOleftLPARENRPARENAND ANDEQUAL ANDXOR ANDXOR_EQUAL BOOL BREAK CASE COLON COMMA COMPARE_AND COMPARE_OR CONST CONTINUE DECREMENT DEFAULT DEFER DIVIDE DIVIDE_EQUAL DOT DOTS ELSE EQEQ EQUALS FALLTHROUGH FLOAT FLOAT_LIT FOR FUNC GO GOTO GREATERTHAN GREATERTHAN_EQUAL IDENTIFIER IF IMAGINARY_LIT IMPORT INCREMENT INT INT_LIT LCURL LEFT_ARROW LESSTHAN LESSTHAN_EQUAL LPAREN LSHIFT LSHIFT_EQUAL LSQUARE MAP MINUS MINUSEQUAL MODEQUAL MODULO MULTIPLY NOT NOTEQUALS OR OREQUAL PACKAGE PLUS PLUSEQUAL RANGE RCURL RETURN RPAREN RSHIFT RSHIFT_EQUAL RSQUARE SELECT SEMICOLON SHORT_ASSIGNMENT STRING STRING_LIT STRUCT SWITCH TIMESEQUAL TYPE TYPECAST VAR XOR XOREQUALstart : SourceFileType : TypeName\n            | TypeLitTypeName : TypeToken\n                | QualifiedIdentTypeToken : INT\n                 | FLOAT\n                 | BOOL\n                 | STRING\n                 | TYPE IDENTIFIERTypeLit : ArrayType\n               | StructType\n               | PointerType\n               | MapType\n               | SliceTypeSliceType : LSQUARE RSQUARE ElementTypeMapType : MAP LSQUARE KeyType RSQUARE ElementType KeyType : TypeArrayType : LSQUARE ArrayLength RSQUARE ElementType ArrayLength : Expression  ElementType : Type StructType : FuncScope STRUCT LCURL FieldDeclRep RCURLFuncScope :  FieldDeclRep : FieldDeclRep FieldDecl SEMICOLON\n                  | epsilon  FieldDecl : IdentifierList TypePointerType : MULTIPLY BaseTypeBaseType : TypeSignature : Parameters ResultOptResultOpt : Result\n                 | epsilonResult : Parameters\n              | TypeParameters : LPAREN ParametersList RPAREN\n                  | LPAREN ParametersList COMMA RPAREN\n                  | LPAREN RPARENParametersList : ParameterDecl\n                      | ParametersList COMMA ParameterDeclParameterDecl : DOTS Type\n                     | IdentifierList Type\n                     | IdentifierList DOTS Type\n                     | TypeBlock : LCURL StatementList RCURLStatementList : StatementRepStatementRep : StatementRep Statement SEMICOLON\n                    | epsilonDeclaration : ConstDecl\n                 | TypeDecl\n                 | VarDeclTopLevelDecl : Declaration\n                  | FunctionDeclConstDecl : CONST ConstSpec\n                 | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOLON\n                    | epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : Type EQUALS ExpressionList\n                       | epsilonIdentifierList : IDENTIFIER \n                      | IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n                     | IDENTIFIER COMMA IDENTIFIERExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n                     | epsilonTypeDecl : TYPE TypeSpec\n                | TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOLON\n                   | epsilonTypeSpec : AliasDecl\n                | TypeDefAliasDecl : IDENTIFIER EQUALS TypeTypeDef : IDENTIFIER TypeVarDecl : VAR VarSpec\n               | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOLON\n                  | epsilonVarSpec : IdentifierList Type ExpressionListOptExpressionListOpt : EQUALS ExpressionList\n                         | epsilon ShortVarDecl : IDENTIFIER SHORT_ASSIGNMENT Expression FunctionDecl : FUNC FunctionName Function\n                    | FUNC FunctionName SignatureFunctionName : IDENTIFIERFunction : Signature FunctionBodyFunctionBody : BlockOperand : Literal\n               | OperandName\n               | LPAREN Expression RPARENLiteral : BasicLit\n               | CompositeLitCompositeLit : LiteralType LiteralValueLiteralType : StructType\n                 | ArrayType\n                 | SliceType\n                 | MapType\n                 | TypeNameLiteralValue : LCURL RCURL\n                  | LCURL ElementList RCURL\n                  | LCURL ElementList COMMA RCURLElementList : KeyedElement\n                 | ElementList COMMA KeyedElementKeyedElement : Element\n                  | Key COLON Element\n                  | IDENTIFIER COLON ElementKey : Expression\n         | LiteralValueElement : Expression\n             | LiteralValueBasicLit : INT_LIT\n              | FLOAT_LIT\n              | IMAGINARY_LIT\n              | STRING_LITOperandName : IDENTIFIERQualifiedIdent : IDENTIFIER DOT TypeNamePrimaryExpr : Operand\n                   | PrimaryExpr Selector\n                   | Conversion\n                   | PrimaryExpr Index\n                   | PrimaryExpr Slice\n                   | PrimaryExpr TypeAssertion\n                   | PrimaryExpr ArgumentsSelector : DOT IDENTIFIERIndex : LSQUARE Expression RSQUARESlice : LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE\n             | LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARETypeAssertion : DOT LPAREN Type RPARENArguments : LPAREN ExpressionListTypeOpt RPARENExpressionListTypeOpt : ExpressionList\n                             | epsilonExpression : UnaryExpr\n                  | Expression COMPARE_OR Expression\n                  | Expression COMPARE_AND Expression\n                  | Expression EQEQ Expression\n                  | Expression NOTEQUALS Expression\n                  | Expression LESSTHAN Expression\n                  | Expression GREATERTHAN Expression\n                  | Expression LESSTHAN_EQUAL Expression\n                  | Expression GREATERTHAN_EQUAL Expression\n                  | Expression OR Expression\n                  | Expression XOR Expression\n                  | Expression ANDXOR Expression\n                  | Expression DIVIDE Expression\n                  | Expression MODULO Expression\n                  | Expression LSHIFT Expression\n                  | Expression RSHIFT Expression\n                  | Expression PLUS Expression\n                  | Expression MINUS Expression\n                  | Expression MULTIPLY Expression\n                  | Expression AND ExpressionExpressionOpt : Expression\n                     | epsilonUnaryExpr : PrimaryExpr\n                 | UnaryOp UnaryExpr\n                 | NOT UnaryExprUnaryOp : PLUS\n               | MINUS\n               | MULTIPLY\n               | AND Conversion : TYPECAST Type LPAREN Expression RPARENStatement : Declaration\n                 | LabeledStmt\n                 | SimpleStmt\n                 | ReturnStmt\n                 | BreakStmt\n                 | ContinueStmt\n                 | GotoStmt\n                 | Block\n                 | IfStmt\n                 | SwitchStmt\n                 | ForStmt\n                 | DeferStmt\n                 | SelectStmt\n                 | FallThroughStmt\n                 | GoStmtFallThroughStmt : FALLTHROUGHGoStmt : GO ExpressionSelectStmt : SELECT LCURL CCX RCURL\n                | SELECT LCURL RCURLCCX : CommClause\n         | CCX CommClauseCommClause : CommCase COLON StatementListCommCase : CASE SendStmt DEFAULT\n              | CASE RecvStmt DEFAULTSendStmt : Channel LEFT_ARROW ExpressionChannel : ExpressionRecvStmt : ExpressionList EQUALS RecvExpr\n              | IdentifierList SHORT_ASSIGNMENT RecvExprRecvExpr : ExpressionDeferStmt : DEFER Expression SimpleStmt : epsilon\n                 | ExpressionStmt\n                 | IncDecStmt\n                 | Assignment\n                 | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : Expression INCREMENT\n                 | Expression DECREMENT  Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOp AssignOp : PLUSEQUAL\n               | MINUSEQUAL\n               | TIMESEQUAL\n               | DIVIDE_EQUAL\n               | MODEQUAL\n               | ANDEQUAL\n               | OREQUAL\n               | XOREQUAL\n               | ANDXOR_EQUAL\n               | LSHIFT_EQUAL\n               | RSHIFT_EQUAL\n               | EQUALS  IfStmt : IF Expression Block ElseOpt  ElseOpt : ELSE IfStmt\n              | ELSE Block\n              | epsilon  SwitchStmt : ExprSwitchStmtExprSwitchStmt : SWITCH SimpleStmt SEMICOLON  ExpressionOpt LCURL ExprCaseClauseList RCURL\n                 | SWITCH ExpressionOpt LCURL ExprCaseClauseList RCURL ExprCaseClauseList : epsilon\n                 | ExprCaseClauseList ExprCaseClause\n    ExprCaseClause : ExprSwitchCase COLON StatementList \n    ExprSwitchCase : CASE ExpressionList\n                 | DEFAULT \n    ForStmt : FOR ConditionBlockOpt BlockConditionBlockOpt : epsilon\n             | Condition\n             | ForClause\n             | RangeClauseCondition : Expression ForClause : SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmtConditionOpt : epsilon\n          | Condition RangeClause : ExpressionIdentListOpt RANGE ExpressionExpressionIdentListOpt : epsilon\n             | ExpressionIdentifierExpressionIdentifier : ExpressionList EQUALSReturnStmt : RETURN ExpressionListPureOptExpressionListPureOpt : ExpressionList\n             | epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n        | epsilon GotoStmt : GOTO Label SourceFile : PackageClause SEMICOLON ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n           | ImportDeclRep ImportDecl SEMICOLONTopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOLON\n                     | epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n          | IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOLON\n            | epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n                        | PackageName\n                        | epsilon ImportPath : STRING_LIT epsilon : '
    
_lr_action_items = {end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([79,],[136,]),'SendStmt':([378,],[395,]),'Conversion':([66,95,98,107,117,148,165,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,240,253,257,262,269,276,288,294,296,300,302,303,316,336,346,370,373,375,378,385,409,410,417,418,419,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'CCX':([354,],[379,]),'ContinueStmt':([198,316,],[252,252,]),'ExpressionRep':([157,281,324,334,401,],[209,209,209,209,209,]),'ExpressionStmt':([198,269,276,316,409,],[254,254,254,254,254,]),'CommClause':([354,379,],[381,403,]),'Statement':([198,316,],[255,369,]),'IfStmt':([198,316,406,],[267,267,422,]),'FallThroughStmt':([198,316,],[256,256,]),'StatementRep':([138,404,427,],[198,198,198,]),'TypeToken':([34,41,46,55,66,78,80,87,95,96,98,103,107,117,121,127,139,145,148,165,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,202,203,218,240,249,253,257,262,269,276,288,294,296,300,302,303,307,316,328,336,346,370,373,375,378,385,409,410,417,418,419,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'AliasDecl':([23,84,272,],[43,43,43,]),'TypeName':([34,41,46,55,66,78,80,87,95,96,98,103,107,117,121,127,139,145,148,165,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,202,203,218,240,249,253,257,262,269,276,288,294,296,300,302,303,307,316,328,336,346,370,373,375,378,385,409,410,417,418,419,],[59,59,59,59,106,59,59,59,106,158,106,59,106,106,59,59,59,59,106,106,106,59,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,59,59,59,106,59,106,106,106,106,106,106,106,106,106,106,106,59,106,59,106,106,106,106,106,106,106,106,106,106,106,106,]),'ExprCaseClause':([392,428,],[414,414,]),'ParametersList':([80,],[142,]),'ParameterDecl':([80,203,],[144,293,]),'FuncScope':([34,41,46,55,66,78,80,87,95,98,103,107,117,121,127,139,145,148,165,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,202,203,218,240,249,253,257,262,269,276,288,294,296,300,302,303,307,316,328,336,346,370,373,375,378,385,409,410,417,418,419,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'FunctionName':([20,],[38,]),'LabeledStmt':([198,316,],[261,261,]),'KeyType':([127,],[196,]),'StatementList':([138,404,427,],[200,421,433,]),'TypeAssertion':([114,],[167,]),'ConditionOpt':([373,],[389,]),'ElementType':([103,171,249,],[161,219,304,]),'PointerType':([34,41,46,55,78,80,87,103,121,127,139,145,171,202,203,218,249,307,328,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'VarSpecRep':([40,],[81,]),'VarDecl':([10,198,316,],[22,22,22,]),'ConstSpecRep':([33,],[52,]),'Operand':([66,95,98,107,117,148,165,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,240,253,257,262,269,276,288,294,296,300,302,303,316,336,346,370,373,375,378,385,409,410,417,418,419,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'TypeSpec':([23,84,272,],[45,152,45,]),'Index':([114,],[163,]),'Parameters':([38,78,],[78,131,]),'UnaryOp':([66,95,98,107,117,148,165,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,240,253,257,262,269,276,288,294,296,300,302,303,316,336,346,370,373,375,378,385,409,410,417,418,419,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'PackageName':([2,13,48,],[6,28,28,]),'SourceFile':([0,],[3,]),'ExpressionListPureOpt':([262,],[313,]),'Label':([198,260,274,282,316,],[263,312,331,331,263,]),'FunctionDecl':([10,],[15,]),'TopLevelDecl':([10,],[16,]),'ExprSwitchStmt':([198,316,],[264,264,]),'IdentifierList':([14,21,52,80,81,203,250,378,],[34,41,34,139,41,139,307,396,]),'TypeLit':([34,41,46,55,78,80,87,103,121,127,139,145,171,202,203,218,249,307,328,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'ImportDeclRep':([5,],[9,]),'GoStmt':([198,316,],[265,265,]),'DeferStmt':([198,316,],[266,266,]),'PackageClause':([0,],[1,]),'ResultOpt':([78,],[133,]),'Selector':([114,],[166,]),'RangeClause':([269,],[317,]),'IncDecStmt':([198,269,276,316,409,],[259,259,259,259,259,]),'Key':([194,300,],[243,243,]),'GotoStmt':([198,316,],[268,268,]),'TopLevelDeclRep':([9,],[10,]),'PrimaryExpr':([66,95,98,107,117,148,165,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,240,253,257,262,269,276,288,294,296,300,302,303,316,336,346,370,373,375,378,385,409,410,417,418,419,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'CompositeLit':([66,95,98,107,117,148,165,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,240,253,257,262,269,276,288,294,296,300,302,303,316,336,346,370,373,375,378,385,409,410,417,418,419,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'assign_op':([280,323,],[346,346,]),'Signature':([38,],[79,]),'Block':([79,198,316,322,355,406,],[137,271,271,371,383,423,]),'ExpressionIdentListOpt':([269,],[318,]),'ExprCaseClauseList':([374,415,],[392,428,]),'SwitchStmt':([198,316,],[273,273,]),'VarSpec':([21,81,],[39,147,]),'Result':([78,],[135,]),'Assignment':([198,269,276,316,409,],[258,258,258,258,258,]),'ExpressionListTypeOpt':([165,],[212,]),'QualifiedIdent':([34,41,46,55,66,78,80,87,95,96,98,103,107,117,121,127,139,145,148,165,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,202,203,218,240,249,253,257,262,269,276,288,294,296,300,302,303,307,316,328,336,346,370,373,375,378,385,409,410,417,418,419,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'Literal':([66,95,98,107,117,148,165,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,240,253,257,262,269,276,288,294,296,300,302,303,316,336,346,370,373,375,378,385,409,410,417,418,419,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'ImportDecl':([9,],[12,]),'OperandName':([66,95,98,107,117,148,165,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,240,253,257,262,269,276,288,294,296,300,302,303,316,336,346,370,373,375,378,385,409,410,417,418,419,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'AssignOp':([280,323,],[338,338,]),'LabelOpt':([274,282,],[330,353,]),'FieldDeclRep':([197,],[250,]),'start':([0,],[4,]),'Declaration':([10,198,316,],[17,277,277,]),'Condition':([269,373,],[320,387,]),'StructType':([34,41,46,55,66,78,80,87,95,98,103,107,117,121,127,139,145,148,165,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,202,203,218,240,249,253,257,262,269,276,288,294,296,300,302,303,307,316,328,336,346,370,373,375,378,385,409,410,417,418,419,],[62,62,62,62,126,62,62,62,126,126,62,126,126,62,62,62,62,126,126,126,62,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,62,62,62,126,62,126,126,126,126,126,126,126,126,126,126,126,62,126,62,126,126,126,126,126,126,126,126,126,126,126,126,]),'ConstSpec':([14,52,],[31,91,]),'epsilon':([5,9,13,25,33,34,40,44,48,78,83,138,157,165,169,197,198,262,269,274,276,281,282,296,316,324,334,373,374,375,383,401,404,409,415,427,],[8,11,27,47,53,64,82,85,27,134,149,199,210,211,215,251,279,314,321,329,333,210,329,215,279,210,210,388,391,215,405,210,199,279,391,199,]),'LiteralValue':([122,194,300,302,303,],[193,246,246,364,364,]),'ExpressionList':([95,148,165,198,262,269,276,316,346,378,409,410,],[156,207,213,280,315,323,280,280,377,399,280,426,]),'SimpleStmt':([198,269,276,316,409,],[283,326,335,283,425,]),'ImportSpecRep':([25,],[48,]),'RecvStmt':([378,],[400,]),'Expression':([66,95,117,148,165,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,240,253,257,262,269,276,288,294,296,300,302,303,316,336,346,370,373,375,378,385,409,410,417,418,419,],[119,157,172,157,157,216,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,247,281,299,308,310,157,324,334,355,356,358,247,365,365,281,376,157,386,390,394,401,408,281,157,429,431,429,]),'RecvExpr':([417,419,],[430,432,]),'CommCase':([354,379,],[382,382,]),'ImportPath':([29,],[49,]),'ExprSwitchCase':([392,428,],[411,411,]),'ExpressionOpt':([169,276,296,375,],[214,332,357,393,]),'IdentifierRep':([14,21,52,80,81,203,250,378,],[32,32,32,32,32,32,32,32,]),'TypeExprListOpt':([34,],[70,]),'FieldDecl':([250,],[305,]),'ReturnStmt':([198,316,],[270,270,]),'ConstDecl':([10,198,316,],[18,18,18,]),'ExpressionIdentifier':([269,],[325,]),'Slice':([114,],[164,]),'ArrayType':([34,41,46,55,66,78,80,87,95,98,103,107,117,121,127,139,145,148,165,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,202,203,218,240,249,253,257,262,269,276,288,294,296,300,302,303,307,316,328,336,346,370,373,375,378,385,409,410,417,418,419,],[54,54,54,54,99,54,54,54,99,99,54,99,99,54,54,54,54,99,99,99,54,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,54,54,54,99,54,99,99,99,99,99,99,99,99,99,99,99,54,99,54,99,99,99,99,99,99,99,99,99,99,99,99,]),'ForStmt':([198,316,],[284,284,]),'Arguments':([114,],[168,]),'SelectStmt':([198,316,],[285,285,]),'ElementList':([194,],[241,]),'Function':([38,],[77,]),'ImportSpec':([13,48,],[26,89,]),'Type':([34,41,46,55,78,80,87,103,121,127,139,145,171,202,203,218,249,307,328,],[58,83,86,93,132,140,153,160,192,195,201,205,160,291,140,298,160,368,86,]),'Channel':([378,],[397,]),'TypeSpecRep':([44,],[84,]),'SliceType':([34,41,46,55,66,78,80,87,95,98,103,107,117,121,127,139,145,148,165,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,202,203,218,240,249,253,257,262,269,276,288,294,296,300,302,303,307,316,328,336,346,370,373,375,378,385,409,410,417,418,419,],[61,61,61,61,111,61,61,61,111,111,61,111,111,61,61,61,61,111,111,111,61,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,61,61,61,111,61,111,111,111,111,111,111,111,111,111,111,111,61,111,61,111,111,111,111,111,111,111,111,111,111,111,111,]),'TypeDecl':([10,198,316,],[19,19,19,]),'BaseType':([55,],[94,]),'UnaryExpr':([66,95,98,107,117,148,165,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,240,253,257,262,269,276,288,294,296,300,302,303,316,336,346,370,373,375,378,385,409,410,417,418,419,],[113,113,159,162,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'Element':([194,300,302,303,],[245,245,363,366,]),'ArrayLength':([66,],[115,]),'MapType':([34,41,46,55,66,78,80,87,95,98,103,107,117,121,127,139,145,148,165,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,202,203,218,240,249,253,257,262,269,276,288,294,296,300,302,303,307,316,328,336,346,370,373,375,378,385,409,410,417,418,419,],[65,65,65,65,116,65,65,65,116,116,65,116,116,65,65,65,65,116,116,116,65,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,65,65,65,116,65,116,116,116,116,116,116,116,116,116,116,116,65,116,65,116,116,116,116,116,116,116,116,116,116,116,116,]),'ForClause':([269,],[327,]),'ShortVarDecl':([198,269,276,316,409,],[287,287,287,287,287,]),'ConditionBlockOpt':([269,],[322,]),'TypeDef':([23,84,272,],[42,42,42,]),'LiteralType':([66,95,98,107,117,148,165,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,240,253,257,262,269,276,288,294,296,300,302,303,316,336,346,370,373,375,378,385,409,410,417,418,419,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'PackageNameDotOpt':([13,48,],[29,29,]),'BreakStmt':([198,316,],[289,289,]),'KeyedElement':([194,300,],[248,362,]),'BasicLit':([66,95,98,107,117,148,165,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,198,240,253,257,262,269,276,288,294,296,300,302,303,316,336,346,370,373,375,378,385,409,410,417,418,419,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'ExpressionListOpt':([83,],[150,]),'ElseOpt':([383,],[407,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',97),
  ('Type -> TypeName','Type',1,'p_type','parser.py',106),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',107),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','parser.py',111),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',112),
  ('TypeToken -> INT','TypeToken',1,'p_type_token','parser.py',124),
  ('TypeToken -> FLOAT','TypeToken',1,'p_type_token','parser.py',125),
  ('TypeToken -> BOOL','TypeToken',1,'p_type_token','parser.py',126),
  ('TypeToken -> STRING','TypeToken',1,'p_type_token','parser.py',127),
  ('TypeToken -> TYPE IDENTIFIER','TypeToken',2,'p_type_token','parser.py',128),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',146),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',147),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',148),
  ('TypeLit -> MapType','TypeLit',1,'p_type_lit','parser.py',149),
  ('TypeLit -> SliceType','TypeLit',1,'p_type_lit','parser.py',150),
  ('SliceType -> LSQUARE RSQUARE ElementType','SliceType',3,'p_slice_type','parser.py',160),
  ('MapType -> MAP LSQUARE KeyType RSQUARE ElementType','MapType',5,'p_map_type','parser.py',168),
  ('KeyType -> Type','KeyType',1,'p_key_type','parser.py',175),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE ElementType','ArrayType',4,'p_array_type','parser.py',182),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser.py',191),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',195),
  ('StructType -> FuncScope STRUCT LCURL FieldDeclRep RCURL','StructType',5,'p_struct_type','parser.py',203),
  ('FuncScope -> <empty>','FuncScope',0,'p_func_scope','parser.py',208),
  ('FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON','FieldDeclRep',3,'p_field_decl_rep','parser.py',212),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',213),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_field_decl','parser.py',223),
  ('PointerType -> MULTIPLY BaseType','PointerType',2,'p_point_type','parser.py',241),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',247),
  ('Signature -> Parameters ResultOpt','Signature',2,'p_sign','parser.py',254),
  ('ResultOpt -> Result','ResultOpt',1,'p_result_opt','parser.py',261),
  ('ResultOpt -> epsilon','ResultOpt',1,'p_result_opt','parser.py',262),
  ('Result -> Parameters','Result',1,'p_result','parser.py',269),
  ('Result -> Type','Result',1,'p_result','parser.py',270),
  ('Parameters -> LPAREN ParametersList RPAREN','Parameters',3,'p_params','parser.py',279),
  ('Parameters -> LPAREN ParametersList COMMA RPAREN','Parameters',4,'p_params','parser.py',280),
  ('Parameters -> LPAREN RPAREN','Parameters',2,'p_params','parser.py',281),
  ('ParametersList -> ParameterDecl','ParametersList',1,'p_param_list','parser.py',290),
  ('ParametersList -> ParametersList COMMA ParameterDecl','ParametersList',3,'p_param_list','parser.py',291),
  ('ParameterDecl -> DOTS Type','ParameterDecl',2,'p_param_decl','parser.py',301),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_param_decl','parser.py',302),
  ('ParameterDecl -> IdentifierList DOTS Type','ParameterDecl',3,'p_param_decl','parser.py',303),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_param_decl','parser.py',304),
  ('Block -> LCURL StatementList RCURL','Block',3,'p_block','parser.py',327),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',331),
  ('StatementRep -> StatementRep Statement SEMICOLON','StatementRep',3,'p_stat_rep','parser.py',336),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',337),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',348),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',349),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',350),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',354),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',355),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',364),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',365),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON','ConstSpecRep',3,'p_const_spec_rep','parser.py',372),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',373),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',381),
  ('TypeExprListOpt -> Type EQUALS ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',397),
  ('TypeExprListOpt -> epsilon','TypeExprListOpt',1,'p_type_expr_list','parser.py',398),
  ('IdentifierList -> IDENTIFIER','IdentifierList',1,'p_identifier_list','parser.py',413),
  ('IdentifierList -> IdentifierRep','IdentifierList',1,'p_identifier_list','parser.py',414),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',430),
  ('IdentifierRep -> IDENTIFIER COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',431),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',461),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',468),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',469),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',481),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',482),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON','TypeSpecRep',3,'p_type_spec_rep','parser.py',489),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',490),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',498),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',499),
  ('AliasDecl -> IDENTIFIER EQUALS Type','AliasDecl',3,'p_alias_decl','parser.py',502),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_type_def','parser.py',509),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',516),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',517),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOLON','VarSpecRep',3,'p_var_spec_rep','parser.py',524),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',525),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',533),
  ('ExpressionListOpt -> EQUALS ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',564),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',565),
  ('ShortVarDecl -> IDENTIFIER SHORT_ASSIGNMENT Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',575),
  ('FunctionDecl -> FUNC FunctionName Function','FunctionDecl',3,'p_func_decl','parser.py',594),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_func_decl','parser.py',595),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',599),
  ('Function -> Signature FunctionBody','Function',2,'p_func','parser.py',605),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',609),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',618),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',619),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',620),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',627),
  ('Literal -> CompositeLit','Literal',1,'p_literal','parser.py',628),
  ('CompositeLit -> LiteralType LiteralValue','CompositeLit',2,'p_composite_lit','parser.py',634),
  ('LiteralType -> StructType','LiteralType',1,'p_literal_type','parser.py',638),
  ('LiteralType -> ArrayType','LiteralType',1,'p_literal_type','parser.py',639),
  ('LiteralType -> SliceType','LiteralType',1,'p_literal_type','parser.py',640),
  ('LiteralType -> MapType','LiteralType',1,'p_literal_type','parser.py',641),
  ('LiteralType -> TypeName','LiteralType',1,'p_literal_type','parser.py',642),
  ('LiteralValue -> LCURL RCURL','LiteralValue',2,'p_literal_value','parser.py',646),
  ('LiteralValue -> LCURL ElementList RCURL','LiteralValue',3,'p_literal_value','parser.py',647),
  ('LiteralValue -> LCURL ElementList COMMA RCURL','LiteralValue',4,'p_literal_value','parser.py',648),
  ('ElementList -> KeyedElement','ElementList',1,'p_element_list','parser.py',657),
  ('ElementList -> ElementList COMMA KeyedElement','ElementList',3,'p_element_list','parser.py',658),
  ('KeyedElement -> Element','KeyedElement',1,'p_keyed_element','parser.py',666),
  ('KeyedElement -> Key COLON Element','KeyedElement',3,'p_keyed_element','parser.py',667),
  ('KeyedElement -> IDENTIFIER COLON Element','KeyedElement',3,'p_keyed_element','parser.py',668),
  ('Key -> Expression','Key',1,'p_key','parser.py',675),
  ('Key -> LiteralValue','Key',1,'p_key','parser.py',676),
  ('Element -> Expression','Element',1,'p_element','parser.py',680),
  ('Element -> LiteralValue','Element',1,'p_element','parser.py',681),
  ('BasicLit -> INT_LIT','BasicLit',1,'p_basic_lit','parser.py',687),
  ('BasicLit -> FLOAT_LIT','BasicLit',1,'p_basic_lit','parser.py',688),
  ('BasicLit -> IMAGINARY_LIT','BasicLit',1,'p_basic_lit','parser.py',689),
  ('BasicLit -> STRING_LIT','BasicLit',1,'p_basic_lit','parser.py',690),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',695),
  ('QualifiedIdent -> IDENTIFIER DOT TypeName','QualifiedIdent',3,'p_qualified_ident','parser.py',717),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',729),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_prim_expr','parser.py',730),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',731),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_prim_expr','parser.py',732),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',733),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser.py',734),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_prim_expr','parser.py',735),
  ('Selector -> DOT IDENTIFIER','Selector',2,'p_selector','parser.py',744),
  ('Index -> LSQUARE Expression RSQUARE','Index',3,'p_index','parser.py',750),
  ('Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE','Slice',5,'p_slice','parser.py',754),
  ('Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE','Slice',7,'p_slice','parser.py',755),
  ('TypeAssertion -> DOT LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser.py',762),
  ('Arguments -> LPAREN ExpressionListTypeOpt RPAREN','Arguments',3,'p_argument','parser.py',766),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',770),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',771),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser.py',782),
  ('Expression -> Expression COMPARE_OR Expression','Expression',3,'p_expr','parser.py',783),
  ('Expression -> Expression COMPARE_AND Expression','Expression',3,'p_expr','parser.py',784),
  ('Expression -> Expression EQEQ Expression','Expression',3,'p_expr','parser.py',785),
  ('Expression -> Expression NOTEQUALS Expression','Expression',3,'p_expr','parser.py',786),
  ('Expression -> Expression LESSTHAN Expression','Expression',3,'p_expr','parser.py',787),
  ('Expression -> Expression GREATERTHAN Expression','Expression',3,'p_expr','parser.py',788),
  ('Expression -> Expression LESSTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',789),
  ('Expression -> Expression GREATERTHAN_EQUAL Expression','Expression',3,'p_expr','parser.py',790),
  ('Expression -> Expression OR Expression','Expression',3,'p_expr','parser.py',791),
  ('Expression -> Expression XOR Expression','Expression',3,'p_expr','parser.py',792),
  ('Expression -> Expression ANDXOR Expression','Expression',3,'p_expr','parser.py',793),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expr','parser.py',794),
  ('Expression -> Expression MODULO Expression','Expression',3,'p_expr','parser.py',795),
  ('Expression -> Expression LSHIFT Expression','Expression',3,'p_expr','parser.py',796),
  ('Expression -> Expression RSHIFT Expression','Expression',3,'p_expr','parser.py',797),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expr','parser.py',798),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expr','parser.py',799),
  ('Expression -> Expression MULTIPLY Expression','Expression',3,'p_expr','parser.py',800),
  ('Expression -> Expression AND Expression','Expression',3,'p_expr','parser.py',801),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',822),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',823),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',827),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',828),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',829),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',859),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',860),
  ('UnaryOp -> MULTIPLY','UnaryOp',1,'p_unary_op','parser.py',861),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser.py',862),
  ('Conversion -> TYPECAST Type LPAREN Expression RPAREN','Conversion',5,'p_conversion','parser.py',876),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',883),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',884),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',885),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',886),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',887),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',888),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',889),
  ('Statement -> Block','Statement',1,'p_statement','parser.py',890),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',891),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',892),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',893),
  ('Statement -> DeferStmt','Statement',1,'p_statement','parser.py',894),
  ('Statement -> SelectStmt','Statement',1,'p_statement','parser.py',895),
  ('Statement -> FallThroughStmt','Statement',1,'p_statement','parser.py',896),
  ('Statement -> GoStmt','Statement',1,'p_statement','parser.py',897),
  ('FallThroughStmt -> FALLTHROUGH','FallThroughStmt',1,'p_fallthrough_stmt','parser.py',903),
  ('GoStmt -> GO Expression','GoStmt',2,'p_go_stmt','parser.py',907),
  ('SelectStmt -> SELECT LCURL CCX RCURL','SelectStmt',4,'p_select_stmt','parser.py',912),
  ('SelectStmt -> SELECT LCURL RCURL','SelectStmt',3,'p_select_stmt','parser.py',913),
  ('CCX -> CommClause','CCX',1,'p_ccx','parser.py',920),
  ('CCX -> CCX CommClause','CCX',2,'p_ccx','parser.py',921),
  ('CommClause -> CommCase COLON StatementList','CommClause',3,'p_commclause','parser.py',928),
  ('CommCase -> CASE SendStmt DEFAULT','CommCase',3,'p_commcase','parser.py',932),
  ('CommCase -> CASE RecvStmt DEFAULT','CommCase',3,'p_commcase','parser.py',933),
  ('SendStmt -> Channel LEFT_ARROW Expression','SendStmt',3,'p_send_stmt','parser.py',937),
  ('Channel -> Expression','Channel',1,'p_channel','parser.py',941),
  ('RecvStmt -> ExpressionList EQUALS RecvExpr','RecvStmt',3,'p_recv_stmt','parser.py',945),
  ('RecvStmt -> IdentifierList SHORT_ASSIGNMENT RecvExpr','RecvStmt',3,'p_recv_stmt','parser.py',946),
  ('RecvExpr -> Expression','RecvExpr',1,'p_recv_expr','parser.py',953),
  ('DeferStmt -> DEFER Expression','DeferStmt',2,'p_defer_stmt','parser.py',959),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',964),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',965),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',966),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',967),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',968),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',975),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',979),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',984),
  ('IncDecStmt -> Expression INCREMENT','IncDecStmt',2,'p_inc_dec','parser.py',990),
  ('IncDecStmt -> Expression DECREMENT','IncDecStmt',2,'p_inc_dec','parser.py',991),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',999),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1003),
  ('AssignOp -> PLUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1009),
  ('AssignOp -> MINUSEQUAL','AssignOp',1,'p_AssignOp','parser.py',1010),
  ('AssignOp -> TIMESEQUAL','AssignOp',1,'p_AssignOp','parser.py',1011),
  ('AssignOp -> DIVIDE_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1012),
  ('AssignOp -> MODEQUAL','AssignOp',1,'p_AssignOp','parser.py',1013),
  ('AssignOp -> ANDEQUAL','AssignOp',1,'p_AssignOp','parser.py',1014),
  ('AssignOp -> OREQUAL','AssignOp',1,'p_AssignOp','parser.py',1015),
  ('AssignOp -> XOREQUAL','AssignOp',1,'p_AssignOp','parser.py',1016),
  ('AssignOp -> ANDXOR_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1017),
  ('AssignOp -> LSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1018),
  ('AssignOp -> RSHIFT_EQUAL','AssignOp',1,'p_AssignOp','parser.py',1019),
  ('AssignOp -> EQUALS','AssignOp',1,'p_AssignOp','parser.py',1020),
  ('IfStmt -> IF Expression Block ElseOpt','IfStmt',4,'p_if_statement','parser.py',1025),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1030),
  ('ElseOpt -> ELSE Block','ElseOpt',2,'p_else_opt','parser.py',1031),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1032),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',1045),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON ExpressionOpt LCURL ExprCaseClauseList RCURL','ExprSwitchStmt',7,'p_ExprSwitchStmt','parser.py',1051),
  ('ExprSwitchStmt -> SWITCH ExpressionOpt LCURL ExprCaseClauseList RCURL','ExprSwitchStmt',5,'p_ExprSwitchStmt','parser.py',1052),
  ('ExprCaseClauseList -> epsilon','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',1060),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',1061),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',1069),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',1074),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',1075),
  ('ForStmt -> FOR ConditionBlockOpt Block','ForStmt',3,'p_for','parser.py',1089),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1093),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1094),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1095),
  ('ConditionBlockOpt -> RangeClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1096),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1101),
  ('ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt','ForClause',5,'p_forclause','parser.py',1105),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',1111),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',1112),
  ('RangeClause -> ExpressionIdentListOpt RANGE Expression','RangeClause',3,'p_rageclause','parser.py',1118),
  ('ExpressionIdentListOpt -> epsilon','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1122),
  ('ExpressionIdentListOpt -> ExpressionIdentifier','ExpressionIdentListOpt',1,'p_expression_ident_listopt','parser.py',1123),
  ('ExpressionIdentifier -> ExpressionList EQUALS','ExpressionIdentifier',2,'p_expressionidentifier','parser.py',1128),
  ('ReturnStmt -> RETURN ExpressionListPureOpt','ReturnStmt',2,'p_return','parser.py',1135),
  ('ExpressionListPureOpt -> ExpressionList','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1139),
  ('ExpressionListPureOpt -> epsilon','ExpressionListPureOpt',1,'p_expressionlist_pure_opt','parser.py',1140),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',1145),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',1149),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',1153),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',1154),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',1159),
  ('SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep','SourceFile',4,'p_source_file','parser.py',1166),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',1172),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON','ImportDeclRep',3,'p_import_decl_rep','parser.py',1173),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',1181),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',1182),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',1193),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',1198),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',1210),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',1211),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON','ImportSpecRep',3,'p_import_spec_rep','parser.py',1218),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',1219),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',1227),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1235),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1236),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1237),
  ('ImportPath -> STRING_LIT','ImportPath',1,'p_import_path','parser.py',1245),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',1252),
]
